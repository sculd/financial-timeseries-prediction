node {
  name: "global_step/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Fill"
  input: "global_step/Initializer/zeros/shape_as_tensor"
  input: "global_step/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/cond/Switch"
  op: "Switch"
  input: "global_step/IsVariableInitialized"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_t"
  op: "Identity"
  input: "global_step/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/switch_f"
  op: "Identity"
  input: "global_step/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/pred_id"
  op: "Identity"
  input: "global_step/IsVariableInitialized"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read"
  op: "Identity"
  input: "global_step/cond/read/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/read/Switch"
  op: "RefSwitch"
  input: "global_step"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Switch_1"
  op: "Switch"
  input: "global_step/Initializer/zeros"
  input: "global_step/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/cond/Merge"
  op: "Merge"
  input: "global_step/cond/Switch_1"
  input: "global_step/cond/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "global_step/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step/add"
  op: "Add"
  input: "global_step/cond/Merge"
  input: "global_step/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "truncated_normal/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\372\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.063245549798
      }
    }
  }
}
node {
  name: "truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal/mul"
  op: "Mul"
  input: "truncated_normal/TruncatedNormal"
  input: "truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal"
  op: "Add"
  input: "truncated_normal/mul"
  input: "truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "Variable"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 250
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Assign"
  op: "Assign"
  input: "Variable"
  input: "truncated_normal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/read"
  op: "Identity"
  input: "Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros"
  op: "Fill"
  input: "zeros/shape_as_tensor"
  input: "zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 250
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Assign"
  op: "Assign"
  input: "Variable_1"
  input: "zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/read"
  op: "Identity"
  input: "Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\372\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_1/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_1/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149
      }
    }
  }
}
node {
  name: "truncated_normal_1/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_1/mul"
  op: "Mul"
  input: "truncated_normal_1/TruncatedNormal"
  input: "truncated_normal_1/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_1"
  op: "Add"
  input: "truncated_normal_1/mul"
  input: "truncated_normal_1/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Variable_2"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 250
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Assign"
  op: "Assign"
  input: "Variable_2"
  input: "truncated_normal_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/read"
  op: "Identity"
  input: "Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "zeros_1/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros_1"
  op: "Fill"
  input: "zeros_1/shape_as_tensor"
  input: "zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_3"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Assign"
  op: "Assign"
  input: "Variable_3"
  input: "zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/read"
  op: "Identity"
  input: "Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_2/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_2/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.141421362758
      }
    }
  }
}
node {
  name: "truncated_normal_2/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_2/mul"
  op: "Mul"
  input: "truncated_normal_2/TruncatedNormal"
  input: "truncated_normal_2/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_2"
  op: "Add"
  input: "truncated_normal_2/mul"
  input: "truncated_normal_2/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Variable_4"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/Assign"
  op: "Assign"
  input: "Variable_4"
  input: "truncated_normal_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/read"
  op: "Identity"
  input: "Variable_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "zeros_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros_2"
  op: "Fill"
  input: "zeros_2/shape_as_tensor"
  input: "zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_5"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_5/Assign"
  op: "Assign"
  input: "Variable_5"
  input: "zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_5/read"
  op: "Identity"
  input: "Variable_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "truncated_normal_3/mean"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "truncated_normal_3/stddev"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.707106769085
      }
    }
  }
}
node {
  name: "truncated_normal_3/TruncatedNormal"
  op: "TruncatedNormal"
  input: "truncated_normal_3/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "truncated_normal_3/mul"
  op: "Mul"
  input: "truncated_normal_3/TruncatedNormal"
  input: "truncated_normal_3/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "truncated_normal_3"
  op: "Add"
  input: "truncated_normal_3/mul"
  input: "truncated_normal_3/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Variable_6"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_6/Assign"
  op: "Assign"
  input: "Variable_6"
  input: "truncated_normal_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_6/read"
  op: "Identity"
  input: "Variable_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "zeros_3/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "zeros_3"
  op: "Fill"
  input: "zeros_3/shape_as_tensor"
  input: "zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_7"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_7/Assign"
  op: "Assign"
  input: "Variable_7"
  input: "zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_7/read"
  op: "Identity"
  input: "Variable_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "MatMul/a"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3000
          }
          dim {
            size: 10
          }
        }
        tensor_content: "\366\010\rD\n\327\023A\205\353\317A\000\000\250A33\263\300=\n7\300\256GA\300\244p\345@\315\314\204@\217\302\265@\315<\007D\037\205\271\30133_\301333@\366(\014\300\354Q\346\301ff\320\301\024\256\321\301\366(\200\301\354Q\230\301f\246\004D\232\231%\301\366(\006\302ff\302\301\232\231\361\300\327\243H\301\\\217\034\302\232\231\021\302q=\022\302\303\365\322\301H!\005D\217\302\365?H\341\006\301\303\365\374\301=\n\263\301\366(\264\300\205\353)\301H\341\024\302\205\353\t\302\\\217\n\302)\034\006DH\341z@H\341\272@\354Q\220\300\232\231\335\301\024\256\223\301H\341\332\277ff\326\30033\005\302\341z\364\301\217\"\013D\315\314\240A\366(\300A\037\205\317A\244pyA33\363\300\205\353\321?\270\036\223AffVA33S\301f\006\006D\037\205\243\301{\024\256\276\270\036e@\000\000\260@33\233\300\354Q\340\301ff\226\30133\003\300\256G\341\300\256\'\004D)\\\357\300)\\\337\301q=\372\300\232\231y\300\244p\375\277\256GE\301{\024\016\302q=\322\301\341z\030\301\327\263\005D{\024\306@\270\036\245\277\n\327\255\301\327\243\320\277\\\217\022@R\270\206@\341z\304\300\327\243\352\301R\270\240\301)\274\003D\n\327\373\300=\n\327\277\\\217\022\301\315\314\354\301\000\000\030\301\\\217\262\300q=j\300\366(`\301\315\314\024\302=J\003D\n\327\343\277ff\032\301\244p]\300=\n/\301=\n\373\301\341z4\301\037\205\353\300{\024\256\300\327\243|\301\205\013\001D\024\256\017\301\366(,\301=\n\225\301=\nG\301)\\\237\301\244p!\302{\024\242\301R\270\202\301R\270f\301\232I\001D\354Qx?\366(\000\301\327\243\034\301\256G\215\301\037\2057\301\232\231\227\301\\\217\035\302\354Q\232\301\205\353u\301\315\354\003D\315\314(A\354Q8A\\\217\"@\\\217B?\037\205\343\300\037\205k\277ff\006\301R\270\346\301\n\327\013\301=\252\003D\270\036\205\277\366(\030A\024\256\'A\000\000\300?)\\\217\276ff\002\301H\341\372\277=\n\027\301=\n\357\301f\326\004D{\024\226@\232\231i@33cAR\270rA{\024\306@\270\036\215@\244p]\300R\270.@\000\000\230\300\205\373\003DH\341Z\300\\\217\242?\037\205k>\341z,A\000\000<A\256G1@\244p}?\366(\334\300\327\2430\277\327\363\003D\217\302\365\275\\\217b\30033\223?\256G\341=\\\217*A{\024:A\232\231)@R\270^?\000\000\340\300\366\310\000DR\270J\301\327\243L\301\024\256\201\301\354Q8\301\303\365H\301\327\243\000\300\270\036\205\277\354Q \301\315\314<\301\341\372\376C\217\302\245\300\315\314\216\301\217\302\217\301\270\036\253\301\232\231\205\301\205\353\215\301{\024\346\300=\n\307\30033s\301\000\200\377C\270\036\205?\341z\204\300\341z\206\301\244p\207\301\315\314\242\301\\\217z\301\232\231\205\301\315\314\304\300\217\302\245\300\270\256\001D)\\\367@\354Q\014A\217\302e@\256G\021\30133\023\301\205\353I\301\217\302\375\300\037\205\017\301q=\312?\341z\004D=\n3A)\\\227A\024\256\237A\341zlA=\n\007@R\270\376?=\n\267\277\327\243P@{\024\016@\303E\005DH\341J@\217\302eAR\270\260A=\n\271A\232\231\217A\303\365\250@\270\036\245@R\270\336?\217\302\315@\232\251\003D{\024\316\300\256GQ\300\244p\375@ffzA\037\205\205A\366(8A\341z\224\277\n\327\243\277ff\226\300\270\376\001D\244p\325\300\217\302Q\301=\n\037\301\000\000\240?\024\256\017A\354Q AH\341\232@\\\217\372\300ff\376\300R(\002Dff&?\327\243\300\300)\\G\301\327\243\024\30133\363?{\024\032AR\270*A\024\256\257@\217\302\345\300\n7\004D\024\256\003A{\024\016A\244p\r@)\\\207\300\024\256\207\277{\024\"AH\341\216A33\227A\037\205[AHq\004D\303\365h?q=\022A\327\243\034A\024\256G@\341zT\300\232\231\031\276\327\2430A\366(\226A\341z\236A)\274\006DR\270\022A\256G!A\341z\222A\024\256\227A\327\243DA33\273@\354Q\020A\024\256\241A\037\205\337A\327C\010D\n\327\303@\327\243tA\232\231\201A\244p\303A\327\243\310A\256G\223A\037\205?Aq=rA\327\243\322A\315,\nD\341z\364@\366(\\A\244p\267AR\270\276A\256G\000BH\341\002Bff\320AH\341\234Aq=\266A\315|\rD\000\000TA\270\036\247A{\024\330AR\270\020B)\\\024B\256G5BH\3417B33\035B\244p\003B\205k\014D\327\243\210\300\024\256\017A\303\365\204A\205\353\265A\256G\377A\256G\003B33$B\315\314&B\270\036\014B\037\005\014D\315\314\314\277\n\327\273\300\366(\354@\354QpA\270\036\251A\341z\362A\217\302\371A\315\314\035Bff B\366\370\013D\\\217B\276\270\036\345\277\205\353\301\300{\024\346@\256GmA\232\231\247A\303\365\360Aq=\370A=\n\035B\205{\nDR\270\276\300\315\314\304\300\000\000\370\300\354Q@\301\244p\235?\205\353\rA\n\327oA\256G\301A\\\217\310A)<\010D\n\327\017\30133o\301q=r\301\205\353\205\301{\024\250\301\354Q\370\300\217\302\365\275\000\000\300@R\270rA=*\010D)\\\217\276\354Q\024\301\024\256s\301R\270v\301\366(\210\301\354Q\252\301\327\243\000\301\315\314\314\276=\n\267@\232y\nD\n\327\023A)\\\017A\217\302\365\274\024\256\277\300\217\302\305\300\303\365\370\300\315\314@\301\232\231\231?\244p\rA\037\025\013D\037\205\033@R\270:Aq=6A\232\231\031@\n\327c\300\000\000p\30033\253\300\205\353\031\301\354Qh@\256\207\014D\256G\271@\037\205\003A\024\256\213A\244p\211A=\n\003AR\270\016@\\\217\002@\256G\341>\270\036u\3003#\014D\303\365\310\277=\n\207@\315\314\324@q=~A\217\302yA\n\327\323@\303\365(?\327\243\360>\327\243\220\277\303\265\013DH\341\332\277\205\353Q\300\327\243 @{\024\236@H\341bAff^A\270\036\235@ff\206\277R\270\236\277f\326\tD\024\256\357\30033\023\301\354Q,\301)\\\237\30033#\300{\024\326@\270\036\315@\270\036%\300\327\243\010\301\244\360\tD\205\353\321>\\\217\342\300\327\243\014\301\217\302%\301q=\222\300\303\365\010\30033\343@q=\332@H\341\n\300\354\021\010D)\\\357\300q=\342\300\303\365h\301\366(\202\301R\270\216\301\315\314@\301\205\353\031\301\\\217\302\276\303\365(\277\244\300\007D\\\217\242\277\000\000\014\301\244p\005\301\256G}\301\354Q\214\301H\341\230\301\270\036U\301q=.\30133\323\277\256W\nD\217\302%A\244p\021A{\024\316?\256G\001@=\n\257\300\217\302\345\300\000\000\014\301\244p=\300\024\256\007\277\232\271\nD\n\327\303?q=>A\205\353)A\303\365H@33c@\366(|\300\315\314\264\300=\n\347\300=\n\267\277\n\027\013DH\341\272?)\\?@\232\231UA\256GAA33\223@\354Q\240@R\270\036\300{\024\206\300\354Q\270\300\315<\rD\244p\tA\315\314 A\256G9A\037\205\257A)\\\245A=\nSA\232\231YA\037\205\303@\315\314\214@\256\'\rD\303\365\250\276\366(\004A\037\205\033A\000\0004AH\341\254AR\270\242A\217\302MA\354QTA\303\365\270@\232\251\020D\341z`A33[A\354Q\262A\000\000\276Aq=\312A\\\217\016B\341z\tB\270\036\327Aff\332A\000\000\020D\232\231)\300{\0246A\315\3140A\270\036\235A\315\314\250A=\n\265A\303\365\003B\217\302\375A\205\353\301A\\O\020DR\270\236?\341z\264\277\205\353IA\327\243DA=\n\247AR\270\262A\303\365\276A\205\353\010B\n\327\003B\354\321\017DH\341\372\277\354Q8\277\024\256W\300\\\217*A\256G%A)\\\227A=\n\243A\256G\257A{\024\001B\341\252\021D\341z\354@\217\302\255@\244p\325@\327\243\200@ff\220A\217\302\215A\341z\322A\366(\336Aff\352Aq\225\021D\037\205\253\276\217\302\341@=\n\243@R\270\312@\n\327k@R\270\215A{\024\213A\315\314\317A\341z\333A\270.\022D\256G\031@\n\327\003@33\027A\024\256\357@\024\256\013A\\\217\302@H\341\240Aq=\236A\303\365\342A\000\220\021DR\270\036\300{\024\256\275=\n\327\276=\n\337@\354Q\240@\000\000\310@fff@=\n\215Aff\212A\303\305\016D\\\2172\301q=Z\301\205\3533\301\256G9\301{\024\206\300\315\314\304\300\270\036\235\300\205\353\361\300=\n\317@\037\005\020D\024\256\237@\244p\305\300ff\n\301\366(\310\300H\341\322\300\315\314L?\341z\224\277\n\327\243=\341z$\300f\306\016D)\\\237\300\n\327#<ff2\301{\024Z\301\217\3023\301\270\0369\301\217\302\205\300\341z\304\300\315\314\234\300\205\313\020D\256G\001AffF@\244p\001A\341zD\300\232\231\261\300\205\353I\300)\\_\300\232\231y@\354Q\370?\2567\022D{\024\266@\354Q\\A\327\243\014A\341z\\A\024\256\'@)\\\017>q=\"@\315\314\014@\244p\031A\3541\022D\354Q\270\27533\263@H\341ZA33\013A=\n[A\205\353!@\315\314L=\341z\034@=\n\007@=\252\021D\024\256\007\300\244p\r\300R\270^@\303\3658A\\\217\322@\270\0369A\205\353\321>\341z\004\300ff\246>\267n\017D\261\341\016\3016\3150\301\331=2\3018g\256\300HP(@\nh\026\300\037\364(@TR\010\301i\0000\301\037\305\024D\001\315\252AR\270FA\315\314$A)\\#Aff~A\n\327\277A\000\000\230A\205\353\277A\256GMA\024^\023D\037\205\263\300s\327{A\205\353\331@{\024\226@33\223@\327\243$A\303\365\222Aq=VA=\n\223A\\\257\024D\327\243\250@{\024\256\276\257\024\250A\256GAA)\\\037A\205\353\035A\303\365xA\270\036\275A\256G\225A\270\376\024DR\270\236?\354Q\320@fff?4\000\262A\270\036UA333A\217\3021Aff\206A=\n\307AfV\024D\354Q(\300\205\353\261\277\354Qx@\244p\335\277\367\365\234A=\n+A\270\036\tA\024\256\007AR\270bAHA\023D\\\217\212\300R\270\336\300=\n\267\300ff\346\276\205\353\301\300@\244tA\037\205\313@\024\256\207@\315\314\204@f\246\023Dq=\312?\000\0000\300\366(\254\300\341z\204\300\327\243\220?)\\\217\300\367\365\206A{\024\376@q=\272@\ng\022D\024\256\237\300q=Z\300\024\256\367\300\205\353%\301{\024\022\301=\nw\300\037\205\027\301\344\024>A\315\314<@\341\332\022D\024\256\347?\037\205K\300\315\314\314\277\217\302\275\300\303\365\010\301q=\352\30033\003\300\270\036\365\300\246\n[Af\346\016D\270\036}\301\366(`\301\000\000\230\301)\\\213\301\000\000\256\301=\n\303\301\270\036\271\301\303\365\216\301\n\327\273\301{\204\rD\303\365\260\300\315\314\252\301\354Q\234\301q=\304\301\232\231\267\301q=\332\301\256G\357\301)\\\345\30133\273\301\232I\017D\\\217\342@ff\306?\354Qd\301)\\G\301\232\231\213\301\205\353}\301\232\231\241\301\327\243\266\301R\270\254\301{D\rD\256G\001\301\000\000\200\277\303\365\320\300\315\314\262\301\354Q\244\301q=\314\301\232\231\277\301q=\342\301\256G\367\301\360\227\rDy\351\246?\376\324\330\300\343\245\233>d;\247\3005^\250\301T\343\231\301\331\316\301\301\002+\265\301\331\316\327\301\n\327\014D`\345@\300H\341\332\277\327\243\034\301\244p-\300\n\327\003\301\341z\300\301\000\000\262\301\205\353\331\301\256G\315\301H1\016D\270\036\255@\020X\031@\315\314l@\366(\214\300\315\314,@\270\0365\30033\225\301R\270\206\301\327\243\256\301R\370\rD\n\327c\277\327\243\220@\234\304\300?\n\3273@\327\243\250\300\024\256\347?{\024n\300\354Q\234\301\n\327\215\301\270\256\014D\315\314\244\300\256G\301\300\256G!\277L7i\300\217\302\025\300R\270&\301\217\302U\300\205\353\r\301\037\205\305\301\354\261\017D\315\314@A\315\314\334@\354Q\300@R\2706A\372~\006A)\\\033A\327\243\320?)\\\013A\037\205K@\232\251\017D\270\036\005\276R\270>A\327\243\330@\366(\274@\327\2434A\177j\004A\256G\031A\000\000\300?\256G\tA\270^\017D\217\302\225\277ff\246\277\000\000,A33\263@R\270\226@\205\353!AZd\343@\\\217\006A\303\365\250>=\212\021DH\341\nA\354Q\360@\366(\354@\244p\233A\341zdAq=VAff\226Au\223|AR\270\210A\n\267\022Dff\226@{\024VA)\\CA\256GAA=\n\301A\n\327\227AR\270\220A\000\000\274AT\343\243A\\\037\022D\024\256\027\300\270\036\025@\366(0A\244p\035A)\\\033A{\024\256AH\341\204A\037\205{A=\n\251A\256\327\021D)\\\217\277)\\_\300H\341\232?q=\036A\037\205\013A\244p\tA\270\036\245A\n\327wA\232\231iA\327\243\021D)\\O\277=\n\367\277\232\231\211\300\315\314\314>\256G\021A\270\036\375@\303\365\370@\327\243\236AH\341jA\315\014\021D=\n\027\300H\341J\300\256G\211\300\270\036\325\300H\341\372\277=\n\327@\232\231\261@\244p\255@\217\302\213A\nw\020D\217\302\025\300ff\226\300\354Q\260\300\366(\324\300\000\000\020\301\232\231\211\300\366(\214@\244pM@\270\036E@\000\300\016D\037\205\333\30033\023\301\303\3658\301\205\353E\301\n\327W\301\217\302}\301\\\2172\301R\270\036\300\232\231i\300\315L\016Dff\346\277\\\217\n\301\000\0000\301\217\302U\301R\270b\301\327\243t\301\256G\215\301)\\O\301\303\365\210\300f\346\016D\232\231\031@\232\231\031?\354Q\310\300\232\231\t\301)\\/\301\354Q<\301q=N\301\366(t\301\303\365(\301\037U\020D)\\\267@{\024\002A\\\217\312@\024\256\007\277\024\2567\300)\\\247\300\256G\301\300\270\036\345\300\341z\030\301)|\020D\366(\034?H\341\312@\n\327\013A{\024\336@\n\327\243=\327\243\020\300\n\327\223\300\217\302\255\300\232\231\321\300\270~\021D\256G\201@\315\314\224@{\024&A\341zLA\024\256/A\n\327\203@\n\327\343?\341z\024\277\205\353\261\277\037\205\022D33\203@q=\002A\000\000\014A\024\256gA=\n\207A\256GqA\037\205\003A\366(\274@\256Ga@\024n\023D\303\365h@\024\256\367@\341z<Aq=FA\303\365\220A\366(\244A\217\302\225A\217\302=A\354Q\030A\244@\021D)\\\013\301q=\242\300\354Qx\277\341zD@\037\205k@\\\217\026A\303\365<A\366( A\232\231I@f\306\021D\217\302\005@\n\327\323\300R\270>\300)\\\217?\270\036\245@\327\243\270@\000\0008Aff^A\232\231AAfV\021D\000\000\340\277{\024\256>\205\353\005\301)\\\227\300\256G!\277q=Z@\327\243\200@\000\000\034AffBA\256\347\017D)\\\267\300)\\\357\300\341z\254\300\232\231a\301)\\\'\301\037\205\313\300\341z\024\300H\341\332\277\327\243\200@fF\017D\256G!\300\000\000\004\301\000\000 \301\270\036\375\300\303\365\204\301\024\256O\301{\024\016\301H\341\232\300)\\\207\300\315\374\020D33\333@\\\217\212@33\263\277\232\231I\300\024\256\207\277\354Q\034\301\366(\304\300\205\353\001\300\327\243\000@H1\022Dq=\232@R\270:Aff\022AH\341Z@\217\302\325?\327\243p@ff\236\300\024\256\247\277\\\2172@HQ\023D\000\000\220@\270\036\025A)\\\201AffZA\244p\375@\244p\305@\366(\004Aff\346\276\366(L@\037\005\025D\205\353\331@\303\3654A=\n\201A\n\327\267A\024\256\243A\024\256kA\024\256OA\270\036qA\037\205\313@\256\327\022D)\\\013\30133\363\277ff&@\244p\355@\354QdA\000\000<A\327\243\300@\327\243\210@\037\205\313@RH\021D\024\256\307\30033o\301q=\002\301\303\365h\300=\n\227?\341z\000A\354Q\260@\256Ga\276\366(\374\277\\\377\022D\037\205\333@R\270\036?\244p\001\301\n\327\243\277{\024N@\327\243\000Aq=nA\205\353EA\341z\324@\327\303\017DH\341N\301q=\302\300\303\365D\301\366(\250\301)\\c\301)\\\033\301\341z\234\300H\341\372?)\\\017\277fF\020D\\\217\002@q=.\301\303\365\200\300\354Q$\301\n\327\227\301R\270B\301\244p\365\300ff6\300\000\000\200@\n\027\020D\244p=\277ff\246?{\024:\301\327\243\230\300\366(0\301\217\302\235\301\\\217N\301\\\217\006\301\217\302e\300\nW\020D\000\000\200?\270\036\205>33\023@{\024*\301\256Gq\300\366( \301\217\302\225\301\\\217>\301\270\036\355\300H\021\016D\244p\021\301\244p\001\301\256G\r\301\256G\331\300\217\302\235\301\217\302M\301\315\314\230\301\341z\336\301\000\000\250\301\037\205\016D\024\256\347?\303\365\350\300\303\365\310\300\327\243\340\300)\\\237\300\256G\217\301\315\3140\301\354Q\212\301\000\000\320\301\354\321\017Dff\246@\354Q\340@\270\036\005\300q=\212\277\303\365\350\277\256Ga>)\\K\30133\273\300\244pA\301fV\020D\341z\004@\327\243\350@\256G\021A\n\327#\274\244p}?\000\000\200>\\\217\022@q=*\301\205\353q\300\\\357\014D\217\302Y\301\327\2438\301H\341\312\300\303\365\220\300\205\353Y\301\205\353I\301\217\302U\301\270\0365\301\000\000\302\301\000 \017D\366(\014A33\233\300\205\3531\300H\341\032@)\\\207@\037\205\233\300=\nw\30033\223\300\n\327#\300R8\014D\205\3539\301=\n7\300\217\302\203\301fff\30133\023\301\341z\354\300\n\327\203\301\024\256w\301\217\302\201\301\\\037\010D\270\036\203\301{\024\340\301\000\000\232\301\244p\003\302\354Q\366\301R\270\314\301q=\276\301\341z\003\302\303\365\376\301qM\005D\341z4\301)\\\335\301\366(\035\302q=\364\301\\\2170\302\256G(\302\341z\023\302q=\014\302\232\2310\302)|\006D)\\\227@\232\231\321\300\037\205\267\301q=\n\302ff\316\301\327\243\035\302)\\\025\302\\\217\000\302\327\243\362\301\354\201\004D\270\036\375\300\037\205K\300)\\g\301\315\314\366\301H\341)\302\n\327\006\302\256G=\302\000\0005\30233 \302\244 \003D\327\243\260\300H\341V\30133\013\301\n\327\237\301\341z\021\302\303\365?\302\205\353\034\302)\\S\302{\024K\302\303\225\377C\244pU\301H\341\226\301\366(\326\301\354Q\260\301\256G\005\302\n\327F\302\354Qu\302\256GR\302)\\\204\302\3035\002DR\270\032AH\341j\300=\n\023\301\315\314\210\301\205\353E\30133\275\301\366( \302\327\243N\302\232\231+\302\217\242\003Dff\266@\205\353uA\205\353\001@)\\_\300ff6\301\244p\325\300\232\231\217\301)\\\t\302\n\3277\302q-\005D\244p\305@\205\353=A\354Q\254A33\003A\037\205+@)\\\247\300\000\000\000\277\341z<\301)\\\341\301\270\376\007D\354Q4A\037\205\213A\270\036\271Aq=\003B\217\302\233A33_A\256G\301@\354Q,A\\\217\002\277\354\361\006Dff\206\300q=\342@\n\327SA\037\205\227AH\341\344A\354QtA\000\000\034A\037\205\353?q=\322@H1\007D\244p}?\244pM\300\303\365\000A\024\256cA\244p\237A\315\314\354A{\024\202A\n\327+A\270\0365@\2329\tD{\024\002A\205\353\021A\244p\235@\037\205\201AH\341\262A\341z\340A\205\353\026B\270\036\303A\303\365\226A\037U\tD\366(\334>\303\365\010A\315\314\030A33\253@\303\365\204A\354Q\266A\205\353\343A\327\243\030B\\\217\306A\327\223\tDH\341z?\341z\264?\327\243\030A\341z(A\\\217\312@\315\314\214A\366(\276A\217\302\353A\\\217\034B\037\305\013D\354Q\014A\000\000\034AH\341\"A\341z\222Aff\232A\232\231qA\303\365\322A\366(\002B\303\365\030B\024\316\nD=\nw\300\270\036\235@\341z\274@q=\312@33gA=\nwA\n\3273A{\024\264A\244p\345A\n\207\nD{\024\216\277=\n\237\30033s@\303\365\230@R\270\246@\244pUA\256GeA{\024\"A33\253A\341z\010D=\n\003\301\315\314\024\301\\\217R\301\341z\214\300q=Z\300R\270>\300\315\314\244@\341z\304@\354Q\370?\217\202\007D\354Qx\300\270\036A\301H\341R\301\354Q\210\301\354Q\004\301\256G\351\300\037\205\333\300\\\217\242?\327\243\020@\244@\007D\n\327\203\277\270\036\235\300\232\231Q\301)\\c\301\\\217\220\301\315\314\024\301\270\036\005\301\341z\374\300\217\302u>\\\337\010D)\\\317@ff\256@\303\365\310?\n\327\323\300)\\\367\300\244p9\301\341z4\300\037\205\353\277\341z\264\277\217\222\tD333@\341z\024A\000\000\004A\n\327\213@\341zt\300\217\302\235\300\327\243\014\301\n\327\243\274\217\302u?\327\323\010DR\270>\300\354Q8\276\232\231\311@\327\243\250@\205\353\261?\232\231\331\300\270\036\375\300\354Q<\301\000\000@\300RX\010D=\n\367\277\270\036\235\300=\n\007\300\n\327\213@\217\302U@q=\n\277\024\256\013\301\244p\035\30133[\301\232\031\010DH\341z\277q=:\300\341z\274\300\217\302E\300\303\365X@=\n\027@\\\217\302\277)\\\033\301\270\036-\301\244 \006D\341z\374\300\205\353\r\301\315\314,\301\341z\\\301\024\256/\301\000\000\220\300\303\365\260\300\\\217\026\301\315\314\214\301\354\301\005D\244p\275\277\205\353\025\301\232\231%\301\341zD\301\366(t\301)\\G\301)\\\277\300\354Q\340\300q=.\301\\?\006DH\341\372?\217\302\365>\270\036\355\300q=\006\301\270\036%\301\315\314T\301\000\000(\301\327\243\200\300\232\231\241\300\037\265\005Dq=\n\300\315\314L\276=\n\327\277\270\036\031\301\315\314(\301\024\256G\301)\\w\301\\\217J\301\217\302\305\300\000`\006DH\341*@\\\217\002?{\024\036@\244p}?\315\314\334\300\366(\374\300\303\365\034\301\327\243L\301\n\327\037\301H\321\006D\\\217\342?{\024\216@\205\353\021@\024\256\207@\327\2430@\366(\244\300\037\205\303\300\327\243\000\301\354Q0\301\037E\007D\024\256\347?\270\036e@\000\000\310@H\341\202@\232\231\301@q=\222@\341zT\300\232\231\211\300)\\\307\300\256\027\007D\217\3025\277\315\314\214?\024\2567@\256G\261@\354QX@H\341\252@=\nw@\303\365\200\300\354Q\240\300\037u\007DH\341\272?\000\000@?\n\327#@\\\217\212@\000\000\340@H\341\232@\232\231\331@q=\252@\341z$\3003s\005D\341z\000\301q=\322\300\303\365\350\300=\n\257\300\315\314l\300\n\327\203\277\366(L\300\244p\235\277\244p-\300\000p\005D\315\314L\275\256G\001\301\n\327\323\300\\\217\352\300\327\243\260\300\000\000p\300q=\212\277)\\O\300\n\327\243\277{\324\004D\037\205\033\300R\270\036\300\366((\301\315\314\020\301\366(\034\301ff\376\300\217\302\305\300\327\243`\300\244p\265\300\327S\006D\024\256\277@\n\327c@\327\243`@\327\243\220\300\n\327C\300\256Gq\300H\341\372\277\\\217B\276R\270\036@\244P\003D\315\314@\301\205\353\301\300\n\327\007\301\327\243\010\301\\\217\204\301\217\302q\301\270\036}\301\366(`\301\n\327C\301\270\276\003D\366(\334?\256G%\301H\341\212\300\327\243\330\300q=\332\300\232\231m\301q=V\301\232\231a\301\327\243D\301\256W\005D\341z\314@\217\302\001A\366(|\30033\003@\\\217\302\276\366(\334\276)\\\007\301\000\000\340\300R\270\366\300\327\203\003D\205\353\351\300\037\205k\277\315\314L?\000\0004\301\354Q\250\300{\024\366\300\024\256\367\300\354Q|\301\303\365d\301\303\025\004D\205\353\021@\303\365\240\300{\024\256?\270\036E@\037\205\017\301R\270>\300\270\036\255\300R\270\256\300\n\327W\301=\252\001DH\341\032\301\315\314\354\300)\\k\301\270\036\005\30133\323\30033\225\301\\\217J\301\244pq\301q=r\3013s\000D\037\205\233\300\327\243h\301\366(D\301\\\217\234\301H\341R\301)\\7\301{\024\274\301\366(\214\301\232\231\237\301\354\261\367C\256G\223\301\366(\272\301\315\314\003\302)\\\365\301\205\353\027\302R\270\374\301\303\365\356\301\024\256\'\302R\270\017\302\354q\374C\000\000\030A\\\217\016\301\354Q\\\301\232\231\273\301)\\\251\301\n\327\343\301R\270\260\301\303\365\242\301\024\256\001\302\315\214\377CR\270\306@)\\{A\315\314,\300\205\353\361\300\205\353\211\301)\\o\301\366(\262\301{\024~\301\\\217b\301f\026\001D\000\000\250@)\\7A\024\256\247A33#@\n\327\023\300\n\327?\301)\\\033\301\366(\210\301{\024*\301\2567\003D\354Q\010A\354Q\\A\n\327\237A\n\327\353A\270\0361AR\270\306@{\024^\300\354Q\230\277\000\000\010\301\303\245\004D=\n\267@\n\327cA\205\353\233A\232\231\315A\315\314\014B\354Q\206AH\341>A\000\000\020@\303\365\220@H1\004D\303\365\350\277\232\231y@R\270FA)\\\215A=\n\277A\037\205\005B\037\205oA\217\302!A\366(\334>\354\201\005D\354Q\250@\366(\\@\\\217\022A\244p\215A\244p\267A\270\036\351A\\\217\032B\n\327\241A\205\353uA\037\225\004D\315\314l\300\024\256\307?\270\036\205\276R\270\256@\024\256_A\n\327\231A\037\205\313A\217\302\013Bq=\204A\341\232\004D\354Q\270==\ng\30033\323?{\024.\276\232\231\261@\270\036aA\\\217\232Aq=\314A\270\036\014B\232\231\003D\327\243\200\300\037\205{\300\366(\364\300\024\256\027\300{\024\206\300\n\327\303?\315\314 A\315\314tA{\024\254A\3273\003D\037\205\313\277\037\205\263\300\327\243\260\300\037\205\023\301\244p}\300\303\365\270\300\217\302u\275)\\\007A)\\[A\256w\000D=\n/\301\341zH\301ff\204\301\024\256\203\301\256G\241\301ffn\301\217\302\205\301\000\0000\301R\270\036\300\341\372\372C\\\217>\301\315\314\266\301\037\205\303\301\024\256\343\301\303\365\342\301\256G\000\302\341z\326\301=\n\345\301\256G\267\301\315\214\372C\366(\\\277\354QL\301\024\256\275\301ff\312\301\\\217\352\301\n\327\351\301R\270\003\302)\\\335\301\205\353\353\301\nW\373Cq=\312?\354Q8?=\n3\301=\n\261\301\217\302\275\301\205\353\335\30133\335\301\315\314\372\301R\270\320\301\303\025\370C\354Q\320\300\217\302\235\300\256G\271\300\232\231\215\301\270\036\345\301\n\327\361\301\000\000\t\302\327\243\010\302\244p\027\302fF\366C\024\256g\300{\024\"\301\315\314\010\301\\\217\026\301\\\217\252\301=\n\001\302ff\007\302\341z\027\302\270\036\027\302\n\027\370C\354Qh@\n\327#<\000\000\320\300\244p\235\300\303\365\270\300\037\205\215\301=\n\345\301\217\302\361\301\303\365\010\302\\o\372C{\024\226@\270\036\005Aff\226@\024\256\347\277\037\205k\276\037\205\213\277\000\000P\301\037\205\277\301q=\314\301\037\345\372C\037\205k?\037\205\263@\n\327\023A\n\327\263@\n\327c\277\327\2430?{\024.\276\256GA\301\366(\270\301=\n\376C\256G\311@R\270\346@ff>A\341zxA\\\217>A\315\314\254@)\\\337@\n\327\303@\256G\271\3003s\375C=\n\227\277\037\205\243@\303\365\300@\037\205+A\232\231eA\024\256+A=\n\207@\232\231\271@{\024\236@\217\202\001Dq=2A)\\\037A\000\000\202A)\\\211AH\341\256A\205\353\313A\303\365\256A\217\302uA\037\205\207A\366\230\005D\315\314\202A\205\353\333A\341z\322Aff\002B{\024\006B\n\327\030B)\\\'BH\341\030B\024\256\375A\315\374\006D\205\353\261@\256G\257A33\004B\303\365\376A\327\243\030B\354Q\034B{\024/B\232\231=B\270\036/Bq\315\005D\024\256\227\300\205\353Q?)\\\211A\341z\342A=\n\331A\024\256\005B)\\\tB\270\036\034B\327\243*BR\250\001D\327\243\204\301\\\217\252\301\366(|\301=\n\027?\024\256;A\315\314(AR\270\206A{\024\216A\232\231\263A\000\000\377C{\024\n\301\024\256\311\301\232\231\357\301\270\036\303\301\327\243\000\301ffF@\217\302\365?)\\\003A{\024\022A{T\377C\303\365(?=\n\377\300ff\304\301\354Q\352\301\n\327\275\301\366(\354\300\327\243p@\270\036%@\205\353\rAH\241\005DH\341\276A\366(\304Aq=~A\327\2430\277\217\302\255\300\270\036\005>\n\327\203A\303\365\334A\037\205\323A\270\036\004D\256G\301\300\\\217\216A\n\327\223A\232\231\035A)\\\327\300\037\2057\301\270\036\275\300=\n\'A\327\243\254A\\O\004D\\\217B?\303\365\250\300\327\243\224A\205\353\231A\217\302)A=\n\277\300)\\+\301\315\314\244\300333A\244\260\002D)\\\317\300=\n\267\300\366(<\301\232\231AA\366(LA\366(\204@33G\301\037\205\211\301{\024:\301\037\345\003Dq=\232@\341z\324\277fff\277{\024\336\300)\\\207A\327\243\214A33\017A\366(\364\300\205\353E\301\000\300\004DH\341Z@\n\327\003A\256G\341?\256G!@\256Ga\300R\270\242A\000\000\250A\205\353EAR\270\206\300\037\365\003DH\341J\300\000\000\200>q=\242@\341z\264\277ff&\277{\024\326\300)\\\211A\327\243\216A33\023A)<\006D\217\302\021A{\024\276@\217\302\025AH\341bAff\366@)\\\007AH\341\032@q=\322A\037\205\327A\024\376\005D\354Qx\277q=\002A=\n\237@q=\006A)\\SA)\\\327@\024\256\357@\232\231\271?\341z\312A\205\273\007DR\270\336@\024\256\277@\232\231qAH\341>A\232\231uA)\\\241A=\n[A33gA\\\217\006A\244@\tD\\\217\302@\327\243PA\270\036AA\244p\251A{\024\220A\244p\253A\000\000\322A\366(\236Aq=\244A\303\265\007D\244p\305\300\354Q\270\275\n\327\333@\315\314\274@\366(pA\244p=A\366(tA\327\243\240A\232\231YA\315\354\006D\303\365H\300\303\365\024\301R\270N\300R\270n@\327\2430@\205\353=A33\013A\205\353AA\037\205\207A\256\267\007DH\341J@\217\302\365<\341z\304\300\217\302u\275\315\314\334@\217\302\275@\327\243pA\205\353=A\327\243tA\315\274\006DH\341z\300\000\000@\277\303\365x\300\303\365 \301R\270~\300R\270>@\327\243\000@\205\3531Aff\376@=\372\004D\256G\341\300)\\/\301\256G\371\300H\341.\301\315\314\210\301\354Q0\301\205\353\201\300\303\365\240\300\\\217\202@\303\005\006D\217\302\205@=\n7\300\303\365\330\300=\ng\300\000\000\330\300R\270N\301H\341\332\300\217\302\365=\232\231Y\277\256\367\007D\303\365\370@)\\?A\244p\235@\000\000\200?\244p\205@\n\327\203?\341z\244\300\327\243p?\315\314\374@\270\336\nD\217\3029A\270\036\233A\\\217\274Aq=\204A\217\302IA\341z|Aq=JA=\n\317@\315\314HA\232\231\013DH\341:@\341zhA\341z\262A\205\353\323A\232\231\233A\341zxA\232\231\225A\303\365xAq=\026A\303\325\016D=\nOA\217\302}A\217\302\333A\000\000\rBR\270\035B\\\217\001B\217\302\343A\270\036\375A\000\000\344A\366h\017D33\023@\n\327sA\256G\221A\366(\356A33\026B\205\353&B\217\302\nB\366(\366A\217\302\007B\256W\017Dq=\212\276\205\353\001@\037\205oA\270\036\217A\000\000\354A\270\036\025B\n\327%B\024\256\tB\000\000\364A\037\325\017DH\341\372?\354Q\330?)\\\177@\244p\207A\315\314\236A\024\256\373A\303\365\034B\024\256-B\037\205\021B\327\353\rD\327\243\364\300\205\353\265\300\\\217\276\300\205\353i\300\\\217\024A\256GCA\037\205\276A\217\302\374A\232\031\017Bf6\016D\270\036\225?)\\\317\300\327\243\220\300\256G\231\300)\\\037\30033\'A\205\353UA\n\327\307A=\n\003B\244\300\nD\244p]\301\315\314J\301\\\217\242\301H\341\222\301=\n\225\301\327\243\202\301\303\365X\300\327\243\360\276q=2A\205\313\tD\270\036u\300)\\\215\301=\n\204\30133\301\301\037\205\261\301\024\256\263\301\256G\241\301=\n\347\300\232\231\211\300\244\340\nD\\\217\212@\000\000\000?\244pU\301\315\314B\301\\\217\236\301H\341\216\301=\n\221\301\256G}\301\303\3658\300{\324\010D=\n\003\301=\nw\300{\024\366\300q=\254\301\205\353\242\301{\024\340\301ff\320\301\\\217\322\301\366(\300\301\244\240\nD{\024\346@\000\000\200\277\270\036U@\000\000\000\277\244pe\301\315\314R\301\\\217\246\301H\341\226\301=\n\231\301\303\265\tDH\341j\300\256Ga@\244p\225\300{\024\256\276\244p\205\300{\024\220\301\217\302\206\301\205\353\303\301q=\264\301\000\340\013D\\\217\nA\024\256\237@H\341BA)\\\177@\270\036\005A\024\256\217@\232\231\025\301\303\365\002\301\256G}\301\\\177\013D\256G\301\277\315\314\344@R\270^@R\270*AR\270\036@\205\353\331@R\270>@\217\302-\301\270\036\033\301\n\027\014D\024\256\027@\366(\\?\354Q\030A33\273@\327\243PA33\233@H\341\022A33\253@\n\327\007\301\327\263\013Dff\306\277\205\353Q?\327\2430\277=\n\377@\232\231\211@\n\3277A33S@\366(\364@33s@)\214\016D{\0246A\256G\035A33CA=\n+A\315\314\232AH\341zA\303\365\266AH\341jA{\024\230A=\262\013D\341z6\301\315\314\314\274\232\231\311\277\037\205K?=\n7\277q=\376@\315\314\210@\244p7A\232\231Q@\341\312\nD)\\g\300\354Qp\301\303\365h\300{\024\246\300\341z4\300\\\217\212\300\\\217\212@\303\365(?33\373@\303\025\tD\\\217\332\300\270\036\'\301\315\314\256\301\037\205\'\301\354Q@\301ff\032\301\\\2172\301\000\000 \300\244p\305\300\354\001\nD\366(l@\303\365H\300\366(\330\300\256G\221\301\303\365\330\300\256G\005\301R\270\276\300=\n\357\300\354Q\230?\000\000\tD\303\365\200\300{\024\256\276\244p\345\300\\\217,\301\037\205\261\301\303\365,\301\217\302E\301\n\327\037\301\000\0008\301\327\243\007D{\024\256\300\037\205\027\301\303\365\270\300\217\302I\301\315\314\201\301=\n\335\301\000\000\202\301ff\216\301H\341v\301\354\341\005D\303\365\340\300\037\205G\301\000\000\204\301\303\365L\301\270\036\235\301=\n\272\301\327\243\n\302q=\272\301\327\243\306\301\3660\006D{\024\236?\244p\271\300\217\3023\301q=t\301339\301q=\223\301\366(\260\3013\263\005\302)\\\260\301HA\006D\\\217\202>R\270\276?\256G\261\300\024\256/\301\366(p\301\270\0365\30133\221\301\270\036\256\301\024\256\004\302\ng\007DH\341\222@=\n\233@\\\217\302@33s\277\341z\314\300R\270&\301)\\\327\300\303\365X\301ff\211\301\3541\007D\341zT\277\327\243p@\341z\200@\000\000\250@\n\327\343\277=\n\347\300\000\0004\301\205\353\361\300q=f\301\244\000\007D\270\036E\277\315\314\314\277)\\?@\024\256O@)\\\217@33#\300\024\256\377\300\354Q@\301\256G\005\301\341\312\006D=\nW\277{\024\316\277\366(\034\300\232\231\t@\205\353\031@\303\365h@\303\365X\300\256G\r\301\217\302M\301\366\230\004D\341z\014\301\205\353\031\301q=&\301\037\2053\301\366(\324\300\000\000\314\300\341z\244\300R\270B\301H\341\214\301\354!\005D\303\365\010@\341z\324\300)\\\357\300\000\000\004\301\256G\021\301\024\256\217\300\037\205\207\300\000\000@\300\341z \3013s\005D\\\217\242?q=Z@\n\327\253\300R\270\306\300)\\\337\300\205\353\371\300{\024N\300\217\302=\300\244p\335\2773\003\003D\000\000\034\301\024\256\007\301H\341\312\300\205\353q\301)\\\177\301\n\327\205\301\341z\214\301\037\205O\301\244pK\301R\330\005D\256G5Aq=\312?ff6@\024\256\237@\\\217r\300\366(\224\300\315\314\254\300)\\\307\300\205\353\321\277\024~\005D\341z\264\277R\270\036A{\024.>\354Q\270?\270\036e@ff\246\300\256G\301\300\205\353\331\300\341z\364\300\\\327\006D\327\243\254@=\n\177@=\nuA{\024\262@R\270\332@\232\231\017A\024\256G>\270\036%\277\270\036\265\277\000\300\010D\354Q\364@\341zPA\205\3539A\232\231\267A33SA\037\205gAH\341\204A\\\217\372@\024\256\337@\327C\rD\341z\220A\\\217\315AR\270\370A\244p\355A=\n$B{\024\372A\270\036\002B\024\256\nB\270\036\317A\256\327\nD=\n\033\301\205\353\005A=\n\200A33\253A\205\353\237A\\\217\372A\\\217\254AR\270\266A\n\327\307A\205k\nD\354Q\330\277{\0246\301\217\302\325@=\neA\024\256\235Aff\222A=\n\355A=\n\237A33\251A\037E\tD33\223\300\256G\311\300\024\256\177\301\270\036\005@\244p\033A\217\302qA33[Aq=\310A\341ztA\303U\006D\n\327;\301R\270\202\301q=\220\301\217\302\335\301\\\217\032\301\232\231\001\300\024\256W@H\341\372?\327\243TA\232y\006D)\\\017?H\3412\301\341z|\301\217\302\213\301\256G\331\301\232\231\021\301\037\205\273\277\037\205{@\256G!@\3541\007D\354Q8@\366(\\@\315\314\004\301ffN\301\244pi\301q=\302\301=\n\307\300\270\036\265?\205\353\331@3\263\004D\024\256\037\30133\343\300\256G\321\300q=\222\301=\n\267\301\\\217\304\301=\n\t\302\232\231\201\301=\n\t\301\024\016\003D\\\217\322\300\341z\204\301H\341Z\301\205\353Q\301H\341\306\301\024\256\353\30133\371\301)\\#\302q=\266\301\315\254\004D)\\\317@\315\314\314\275\256G!\301ff\346\300\341z\324\300=\n\223\301\n\327\267\301)\\\305\301\244p\t\302\024\216\006D\327\243\360@\000\000`A\244p\355@\n\327#\300\n\327\243>\256Ga?\217\302-\301)\\w\30133\211\301\315\354\005D\256G!\300\000\000\240@\024\2567A\315\314\234@\\\217\242\300\315\314\014\300\205\353\321\277{\024V\301\n\327\217\301\217B\004D\270\036\325\300H\341\022\301\341z\324\277q=\232@\256G\341\277\n\327;\301\217\302\r\301\315\314\004\301\354Q\240\301\256g\004D\341z\024?\\\217\302\300\232\231\t\301q=\212\277\315\314\254@=\n\227\277\\\2172\301\341z\004\301=\n\367\300\232\231\006D\341z\014A\217\302\025A\315\314,@\354Q8>ff\366@H\341bA33\363@\354Q\030\300\000\000\000?fv\005D\232\231\221\300)\\\207@\205\353\231@\315\314\354\277\n\327\213\300\232\231I@{\024\032A33C@\217\302\335\3003\023\005Dff\306\27733\303\300\037\205+@\327\243P@\232\231Y\300\244p\275\300\315\314\314?\256G\001A\000\000\300?\nW\006D\205\353\241@\327\243`@\270\036\205\277\024\256\367@\270\036\005A\341z\324?\366(\\\277\270\036\325@q=RAH\321\006D\341z\364?=\n\337@\244p\255@R\270^?ff\032A\024\256#A\341zd@ff\206?\270\036\tA\244\240\007D)\\O@\315\314\244@)\\#A\\\217\nA\037\205\203@q=NA\037\205WA\205\353\331@\256G\211@\n\007\007D\232\231\031\300=\nW?\000\0000@\205\353\371@\354Q\310@H\341\332?\n\327\'A\270\0361A\270\036\215@{\024\005D\256G\371\300=\n#\301ff\336\300\256G\241\300\n\327\243<\n\327\303\277\\\217\302\300\315\314,@\205\353Q@\217\362\006D=\n\357@\n\327\243\276{\024.\300\270\036\005?\037\205\033@\024\256\357@{\024\276@\205\353\261?R\270\"A\354\361\006D\n\327#\274R\270\356@\303\365\250\276R\270.\300\\\217\002?H\341\032@)\\\357@\217\302\275@\327\243\260?\n\007\005D\244p\365\300\217\302\365\300=\nW\276\000\000\000\301ff&\301\270\036\345\300\000\000\250\300\\\217B\276R\270\336\277\\\177\005D\327\243\360?\256G\271\300\232\231\271\300\217\302\325?\n\327\303\300\354Q\010\301\303\365\250\300\024\256W\300\354Q\330?\205\313\006D{\024\246@q=\342@\232\231\031\277\366(\034\277\037\205\333@{\024n\277\270\036U\300\354Q\270\275\303\365\350?\327\023\007D\327\243\220?q=\312@33\003A\024\256\007?\270\036\005?\024\256\377@\315\314L>\315\314\014\300\270\036\205?\315,\006D=\ng\300R\270\036\300\244p-@H\341\222@\270\036E\300\217\302E\300\366(\214@q=Z\300\205\353\271\300\037U\005D\024\256W\300)\\\337\30033\273\300\303\365(\277\366(\234?ff\316\300R\270\316\300\256G\201?\303\365\330\300\037\265\003D\000\000\320\300\205\353\035\301\024\256W\301\232\231E\301\270\036\345\300\303\365\250\30033O\301)\\O\301\024\256\257\300)\254\003D)\\\017\276\341z\324\300\366( \301\205\353Y\301\n\327G\301\232\231\351\300\244p\255\300\244pQ\301\232\231Q\301),\006D\000\000 A\217\302\035A=\nW@\n\327#\274\024\256g\300)\\\037\300\315\314,@\\\217\222@\217\302E\300\n\247\005D\270\036\005\300\244p\375@\303\365\370@\n\327\243?\217\302\005\300ff\266\300q=\222\300R\270\036?\000\000 @\037\025\005D\205\353\021\300\037\205\213\300\341z\264@\000\000\260@\000\000\200\277\n\327\213\300)\\\377\30033\333\300\341z\324\277\315\314\003D\366(\244\300\270\036\355\300\n\327\027\301\\\217\002?\244p\275>\366(\304\300\000\000\030\301\217\302Q\301\024\256?\301\232\t\004D33s?\217\302\205\300R\270\316\300\327\243\010\301H\341\272?\303\365\250?\217\302\245\300\315\314\010\301\\\217B\301\244P\004D{\024\216?\n\327\003@\341zD\30033\253\300\217\302\355\300\341z$@\037\205\033@q=\202\300{\024\356\300\270.\006D=\n\357@\256G\tA\341z\030A\315\314\214@\024\256\007@\n\327#=\327\243 Aff\036A\232\231Y@),\006D\n\327#\275\217\302\355@\327\243\010A\n\327\027A\037\205\213@\270\036\005@\000\000\000\000\000\000 A\217\302\035A)\214\006D\000\000\300?H\341\272?H\341\016A\327\243 A\n\327/A\037\205\273@\270\036e@\000\000\300?\000\0008A\270\036\007D\\\217\022@\\\217r@\000\000p@\037\2053A\256GEA\341zTAff\002A\n\327\273@\\\217r@\303u\006D\303\365(\30033\263\27633\223?{\024\216?\256G\tA=\n\033Aq=*A\354Q\260@R\270N@\270\316\005D=\n\'\300\000\000\250\300\244p=\300H\341\272\277\000\000\300\277=\n\277@\\\217\342@\341z\000A\232\2319@)\354\004D\\\217b\300\315\314\304\300\327\243\014\301\000\000\320\300\000\000\240\300\256G\241\300\037\205\033@\\\217b@\024\256\217@Ha\002DR\270\"\301)\\[\301\\\217\202\301\024\256\227\301)\\\205\301R\270r\301)\\s\301\024\256\367\300\366(\324\300\244 \002D\256G\201\277H\3412\301\037\205k\301\327\243\212\301\217\302\237\301\244p\215\301\244p\201\301\217\302\201\301\000\000\014\301\303u\002Dq=\252?\n\327\243>\232\231\035\301q=V\301\000\000\200\301\270\036\225\301\315\314\202\301\232\231m\301q=n\301\232\331\002D\024\256\307?\303\3658@\327\243\360?\327\243\004\301\256G=\301=\ng\301\327\243\210\301\327\243l\301\327\243T\301\n\267\002Dq=\n\277\\\217\202?ff\026@\037\205\253?\256G\r\301\205\353E\301\024\256o\301\303\365\214\301\256Gu\301HA\003Dq=\n@)\\\317?\037\205K@\354Q\220@\000\000`@\244p\325\300)\\#\301\270\036M\301)\\w\301\0375\001D=\n\003\301\303\365\300\300q=\322\300\354Q\240\300\037\205k\300{\024\226\300\217\302m\30133\223\301{\024\250\301\205+\002Dffv@H\341\212\300\037\205\013\300{\024.\300\341z\224\277{\024.>=\nW\277\366(0\301\315\314h\301R\210\004D33\027A\315\314TA\037\205\243@\327\243\350@)\\\327@\327\243\004A\205\353\031A\217\302\tA\024\256\307\2773\243\010D)\\\203A\303\365\316A\217\302\355Aq=\254A\037\205\275A33\271A\024\256\305A\354Q\320Aq=\310AfF\014D\315\314hA\217\302\367A\024\256!B{\0241B\354Q\020B\303\365\030B\315\314\026B=\n\035B)\\\"B\024\016\014D\256Ga\277R\270ZAR\270\360A\366(\036B\\\217-B\315\314\014B\244p\025B\256G\023B\037\205\031Bf\366\020D=\n\235A\000\000\226A33\005BH\341FB\024\256lB{\024|B\354Q[B\303\365cB\315\314aB\205;(D\366(\272B\205k\341B\366\250\337B\217\302\374B\315\314\016C\000@\030C\232\031\034C\366\350\023C\354\021\026CH\301%D\\\217\036\301\nW\246B\232\231\315B\n\327\313B\244\360\350B\327\343\004C\nW\016C\2440\022C\000\000\nC3\223%D\354Q8\277{\024*\301f\346\244B\366(\314Bff\312B\000\200\347B\205+\004C\270\236\rCRx\021Cf\206%D\315\314L\276\037\205k\277\256G-\301\000\200\244B\217\302\313B\000\000\312B\232\031\347BR\370\003C\205k\rC\354\021!D\\\217\216\301\366(\220\301\205\353\225\30133\345\301)\334\200B\270\036\250B)\\\246B\303u\303B\315L\344B\327\343\033D\217\302\245\301\366(\032\302\303\365\032\302\n\327\035\302\341zE\302\n\327.B)\\}B\n\327yB\037\005\232B\244\320\034D\315\314l@\366(\210\301)\\\013\302\366(\014\302=\n\017\302\024\2566\302\327\243=B{\024\206B\354Q\204B\000\000\035D\244p=?{\024\216@q=\202\301ff\010\30233\t\302{\024\014\302R\2703\302\232\231@B\\\217\207B\205\373\035D\037\205{@\244p\225@\205\353\005A\232\231E\301)\\\361\301\303\365\362\301R\270\370\301\000\000$\302\354QPB\303%\036D\303\365(?H\341\222@\\\217\252@\341z\020A=\n;\301{\024\354\301\024\256\355\301\244p\363\301)\\!\302\ng\034D)\\\337\300q=\312\300\303\365\030\30033\323\27733\003@)\\\225\301\303\365\021\302\217\302\022\302\327\243\025\302q\315\035D33\263@\327\243\260\277\354Q8\277\244pM@\315\314|@\315\314\364@\270\036Q\301\270\036\367\301R\270\370\301\000P\035DH\341\372\277\303\365h@\217\302U\300\037\205+\300\000\000\240?R\270\376?{\024\266@\341zp\301ff\003\302\354\361 D\341zhA\270\036IA)\\\221A=\n3A\232\231=A\341z|A\366(\204A\217\302\241A\000\000\000\277\205\253 D\315\314\214\277H\341VA\037\2057A\\\217\210A\244p!A\000\000,AH\341jAR\270vA\303\365\230A3\323\036D\366(\354\300\024\256\007\301\232\231\301@H\341\202@=\n\033A\244p-@\024\256W@\232\231\351@\327\243\000A\270n\036D\303\365\310\27733\017\301\315\314 \301)\\\217@\256G!@\205\353\001A\205\353\221?ff\346?)\\\267@\3541%Dff\330A\n\327\313A\315\314\220A\000\000\210Aq=\374A\\\217\354A\024\256\014B\037\205\341A\315\314\346A\327\343$D\366(\234\277\327\243\316A{\024\302A=\n\207A\341z|A\341z\362A\315\314\342A\315\314\007B\217\302\327A\315\034$D=\nG\300\\\217\212\300\217\302\265A33\251A\354Q\\AR\270JA\232\231\331A\205\353\311AR\270\366A\256G$D\037\205+?\366(\034\300q=j\300\270\036\273A\\\217\256A=\ngA\244pUA\303\365\336A\256G\317A\2567%D\000\000p@\244p\215@\024\256\247?\354Q\270=\270\036\331A\\\217\314A\037\205\221AR\270\210A\303\365\374AR\010$D\024\256\227\300\244p}\277\n\327\243\276\037\205[\300\315\314\224\30033\263A\327\243\246A33WA\232\231EA\2329%D\327\243\230@\217\302\365<\205\353q@ff\216@\037\205\253?\217\302\365=)\\\331A\315\314\314A\217\302\221A\037\265!D\270\036a\301\315\314\024\301\327\243`\301\327\243$\301\205\353\031\301\024\256K\30133_\301\232\231QA\341z8A\270\036\031Dff\t\302\024\256A\302\232\231.\302\\\217A\302\\\2172\302H\341/\302\354Q<\30233A\302\000\000\252\301\ng\023D\303\365\266\301H\341d\302{\224\216\302=\n\205\302\037\205\216\302\037\005\207\302\024\256\205\302f\346\213\302\nW\216\302\327\203\021D\232\231\361\300)\\\363\301=\212\201\302\024\256\235\302\327#\224\302\270\236\235\302\270\036\226\302\256\307\224\302\000\000\233\302\256\'\035Dq=:B=\n\034B\270\036\201A\024\256\221\301\270\036\001\302{\024\334\301\000\000\001\302\000\000\344\301\327\243\336\301\ng\037D\n\327\017A33^B\000\000@B=\n\311A\037\205\023\301\354Q\272\301\366(\224\301{\024\272\301{\024\234\301R\230\035D)\\\347\300\256G\341?\256GAB{\024#B33\217A\232\231\203\301\366(\364\301\000\000\316\301\205\353\363\301\000\220\032D{\024B\301H\341\232\301\205\353%\301\217\302\020B\270\036\345A\327\243\270@\327\243\344\301\232\231*\302\037\205\027\302\217r\025D\024\256\243\301)\\\002\302\256G\037\302\327\243\366\301\024\256{AH\341\002A=\nk\301\366(D\302\244p|\302\303\225\031Dff\204Aq=z\300\354Q\200\301\366(\272\301\341zd\301\270\036\001B\n\327\305A{\024\356?\303\365\001\302\000\220\027D\244p\001\301)\\\007A\000\000@\301=\n\301\301H\341\372\301\303\365\262\301\037\205\301A\270\036\205A)\\\307\300\315,\026D\232\231\261\300q=Z\301q=:@ff\214\301\244p\355\301\327\243\023\302)\\\337\301\270\036\225A\244p1A=\252\031D)\\_A\\\217\006A\n\327\243>\303\365\206A\217\302e\300\037\205{\301\232\231\267\301)\\_\301ff\002B\024.\031D\354Q\370\277\354Q@A=\n\317@)\\\317\277H\341nA\303\365\260\300\256G\215\301\270\036\307\301ff~\301fV\033D{\024\nA{\024\326@33\245A\232\231qA\354Q\340@\341z\274AffF@\341z\020\301{\024\202\301Hq\034D\244p\215@\315\314PA\217\3021A\\\217\310A\366(\234AH\3416A\n\327\337A\327\243\360@\037\205\223\300\\\317\033D\205\353!\300\205\353\361?\354Q(A\256G\tA\354Q\264A\205\353\207Aff\016A\232\231\313A\024\256\237@\366\310\036Dff>A\205\353\025A\327\243\\A)\\\263A\n\327\243A\217\302\tB\270\036\347Aff\246Aff\025B\270\376\036D=\nW?\n\327KA)\\#A{\024jA{\024\272A\\\217\252A\270\036\rB\n\327\355A\270\036\255A\232\271 D\244p\335@\354Q\370@\256G\235A=\n\211Aff\254A\244p\361A\205\353\341A\315\314(B\232\231\022B\000P\035DffZ\301)\\\327\300\341z\274\300\354Q\300@R\270^@\315\314\374@q=\204A\244piAff\344A)\334\036D{\024\306@R\270\356\300q=\n\277\232\231\231>33CAR\270\032A\244paA\217\302\265Aq=\246A)\254\033D\000\000L\301\205\353\321\300\024\256\241\301\327\243T\30133G\301\315\314\014\277\270\036E\300\037\205\253?\037\205\037A\n\227\033D\303\365\250\276\256GQ\301\341z\334\300\354Q\244\301\205\353Y\301\341zL\301\256Ga\277q=Z\300\256G\201?3s\034D\366(\\@=\nG@q=\032\301\315\314\\\300\315\314\210\301H\341\"\301\244p\025\301\n\327#@\217\302\365<\024\376\030D\256G]\301q=&\301\037\205+\301\217\302\273\301q=\212\301\244p\367\301{\024\300\301)\\\271\301\354Q4\301\366\270\024D\327\243\210\301\256G\367\301\217\302\333\301ff\336\30133\"\302\244p\t\302=\n@\302)\\$\302\000\000!\302\024\276\024D\n\327\243=\000\000\210\301\327\243\366\301\270\036\333\301\217\302\335\301H\341!\302\270\036\t\302R\270?\302=\n$\302\341\032\030D33WA\341zXA33c\300=\n\213\301=\n_\301\354Qd\301\366(\330\301\327\243\246\301\205\353\t\302\217\322\030D\024\2567@\\\217\202A33\203A{\024.\277\366(h\301\270\0361\301ff6\30133\301\301\024\256\217\301=\272\034D\205\353yA\205\353\223A\037\205\377A{\024\000B=\noA{\024\216?\232\231\221@=\n\207@\341z\010\301\024^ D\303\365hA\244p\361A33\004B\000\000:B\354Q:B\000\000\354AR\270zAH\341\230Aq=\226A)\\!D{\024~@q=\224A\232\231\010B{\024\024BH\341IB33JBH\341\005B\270\036\235A\327\243\270A\n\227 D\270\036E\300\n\327c?33wA\\\217\370A\217\302\007B\\\217=BH\341=B\270\036\363A\341z\204A=\312\037D\315\314L\300\303\365\310\300\n\327\023\300\000\000DA\303\365\336A\205\353\365A\217\3020B{\0241B\037\205\331A\n\347 Dff\216@\000\000\240?q=\352\277\303\365\010@\232\231\205A\256G\001B\217\302\014B\\\217BBH\341BB\341\252!D\n\327C@\354Q\360@\205\353\211@\244p\235?ff\246@{\024\236A\037\205\rB\000\000\031B\315\314NB3\023#D\366(\264@=\n\013Aq=RA=\n\037A\037\205\333@\256G-A\270\036\313A=\n$B\037\205/B=\312\"D\205\353\221\277\024\256\217@\232\231\361@\000\000@A\315\314\014A=\n\267@=\n\033A\000\000\302A\341z\037B\\o%D\256G)A=\n\027A\270\036qA=\n\221A\327\243\264A=\n\233Aff\202A\366(\242A\354Q\013B\315\214%D\037\205\353>\327\2430Aff\036A\341zxAR\270\224A\354Q\270AR\270\236A{\024\206A\n\327\245Af\206&D\232\231y@\037\205\213@=\noA\315\314\\A\244p\233A\205\353\263A\037\205\327A\205\353\275A\256G\245A\354\221\"D\270\036}\301R\270>\301)\\7\301\256Ga\277\256G\001\300=\ng@\244p\325@\205\3531A\244p\375@\n\247 D\244p\365\300\205\353\273\301R\270\234\301=\n\231\301\315\314\010\301=\n\033\301\205\353\201\300\000\000\200\277\315\314\\@\217\362\"DH\341\022A\256G\301?\303\365d\301\\\217&\30133\037\301\256G!?\\\217\002\277\n\327\243@H\341\002A\000\200/D\n\327HB\\\217mBH\341NB\232\231\017B33\037B=\n!B)\\KB\315\314FB\354Q]B\35412D\341z,A\303\365sB\nW\214B\000\000zBR\270:B\354QJB\366(LB\341zvB\205\353qB\\\0371D\256G\211\300\024\256\317@\315\314bB\217\302\203B\n\327hB\\\217)B\366(9B\000\000;B\354QeB\315<2DR\270\216@{\024.>33/A\327\243tB\024\256\214B\024\256zBff;B\000\000KB\n\327LB\341:3D{\024~@H\341\006A\341z\204@R\270nA\217B\202B\270\236\224B\256G\205B\256GKBH\341ZB\327\2631D\037\205\303\300\303\365\010\300\341z\024@\366(\374\277\303\365\014A{\024lBff\210B\270\036rB\n\3272B\nG4D\315\314$A{\024\206@\\\217\002A\205\353IA\256G\005AH\341\230A\327\243\212B\000\000\235B\366\250\215B=\2124Dff\206?\232\2315A\024\256\247@)\\\023AR\270ZA{\024\026A\256G\241Aq\275\214B\232\031\237B\n\0076Dff\276@\000\000\340@ff\212A=\n3A\\\217rA\303\365\234A\256GuAH\341\320A\327\243\230B\000\3206D\303\365H@\244p\021Aq=\"A\037\205\243A\256GeAff\222A{\024\266A\217\302\223A\000\000\352A\244p7D\327\243 @\315\314\264@\232\2319AffJA\232\231\267AR\270\206A\341z\246A\366(\312A\n\327\247A\36685D\205\353\r\301\037\205\313\300{\024N\300R\270.@\205\353q@\256GaA=\n\377@=\n?A33\203A{\0246D\037\205[@{\024\256\300\037\205;\300=\nW>\270\036\305@R\270\346@{\024\214Aff6A\205\353uA\232\3317D\\\217\342@\366((A\205\353\321?\315\314\204@\256G\351@\n\327SA\327\243dAR\270\304A\n\327\223A\270\3166D\244p\205\300q=:@H\341\312@\205\353!\300\n\327\243\274\024\256G@\270\036\021A\205\353!A)\\\243A\000@3D\024\256c\30133\223\301\270\0365\301\341z\374\300{\024\206\301\000\000d\301\217\3021\301\270\036\245\300\037\205\203\300q=6D)\\?A\256G\021\300{\024\316\300\n\327#?q=\202@\232\231\231\300\\\217\022\300\232\231Y?\232\231\331@3S5Dq=j\300\315\314\004A\217\302\275\300\232\231!\301\256GA\300\205\353\321>)\\\007\301ff\276\300\n\3273\300\000\0009D33kA\327\2430A\000\000\270A\354Q\014A33\223@H\341:A\217\302qA\024\256\307@\000\000\014A=\2328D\037\205\313\277\217\302QA33\027A\256G\253A\217\302\345@\327\243@@\244p!A\354QXA\315\314\224@f&=D\037\205\221A\315\314\204Aff\372A\270\036\335Aff\036B\303\365\312A\232\231\251Aq=\342A\024\256\375A\270\376<DR\270\036\277\\\217\214A\024\256\177A\244p\365A\366(\330A\205\353\033B\000\000\306A\327\243\244A\256G\335A\354\021;Dff\366\300\270\036\005\301\205\353\035A\341z\004A\n\327\267A\\\217\232Aq=\372Aff\210A{\024NA\232\t;D\270\036\005\276\\\217\372\30033\007\301\n\327\033Aff\002A\315\314\266A\037\205\231A33\371A)\\\207A\244\220;D=\n\007@\244p\375?=\n\267\300H\341\312\300\232\231=A\366($A\024\256\307Aff\252A=\n\005Bf\2469D\270\036\365\300\232\231\261\300\217\302\265\300{\024V\301\000\000`\301{\024\206@ff&@ff\212Aq=ZA\217\302?D\037\205\303Aq=\206A\270\036\227A{\024\226A\303\3650A=\n\'A=\n\345A\354Q\330A\303\365&BR\230>D\270\036\225\300q=\236A\205\353AA\024\256cA\232\231aA\315\314\314@\303\365\270@\217\302\277A=\n\263A\217\"<D\244p\035\301\000\000h\301=\n\037A\205\353\021@\341z\214@\354Q\210@\366(\\\300\205\353\201\300{\024bA\327\263?D\354QdA\217\302\215@\037\205k\276\024\256\301Aff\204A\256G\225Aq=\224A\256G-A)\\#A\000\320>D\n\327c\300)\\+AR\270^?\\\217r\30033\245A\n\327OA\232\231qA\037\205oA\327\243\350@\256\227>D\256Ga\277{\024\216\300\256G\035A\n\327#\274\244p\225\300\366(\236A\217\302AA\037\205cA\244paA\n\347;D\366(,\301q=:\30133s\301{\024n\277\354Q,\301H\341v\301\366(\020A\315\314\254?\244p]@q];D\232\231\t\300\\\217N\301\327\243\\\301\315\314\212\301\270\036E\300R\270N\301\327\243\214\301\037\205\333@\315\314L\277\256\2678D\244p)\301\n\327K\301\000\000\274\301=\n\303\301\037\205\337\301R\270Z\301{\024\274\301)\\\341\301R\270n\300H\361:Dff\016A\354Q\330\277\217\302u\300\232\231i\301\024\256w\301\354Q\230\301\327\243\230\300\217\302i\301\366(\232\301\232\3319D\n\327\213\300\303\365\220@\205\353\301\300)\\\003\301\217\302\227\301\315\314\236\301\256G\273\301q=\022\301\n\327\227\301\303\205=D=\nkA\270\036%A\217\302\231A{\024\nA)\\\317@\303\365\210\300\270\036\245\300\037\205\013\301\232\231\261@\205[;D\\\217\n\301\303\365\300@\341z\324?\303\365(A\217\302\365\274\037\205\013\300=\nO\301\270\036]\301=\n\213\301\327\3238D\205\353!\301q=\226\301H\341\202\300)\\\007\301\256G\341>ff\"\301\315\314D\301\341z\270\301\037\205\277\301H\361:D)\\\007A\341z\324\277\270\036%\301\n\327\213@\000\000\000\000ff\016A\354Q\330\277\217\302u\300\232\231i\301\000\200;DR\270\016@=\n+A\205\353\021?\244p\001\30133\323@R\270\016@{\0242Aq=\n?{\024\316\277\327\223;DR\270\236>\\\217\"@\000\0000A\256Ga?\303\365\370\300\270\036\335@\\\217\"@=\n7A\232\231Y?\232\031;D\341z\364\277\315\314\314\277\256G!?\244p\021A\n\327\203\277=\n\033\301\000\000\240@\256G!?\341z\030A\244\240>D\217\302aA33CA\366(HA\n\327kA\232\231\271A\256GQA\244p\215@H\341\230A\n\327kAf&BD\244paA\232\231\341A\354Q\322A\315\314\324A\327\243\346A\366(\025B)\\\331A{\024\224A\315\314\004B\000\300@D33\263\300\n\327\007A\315\314\264A\037\205\245A\000\000\250A\n\327\271A\037\205\375A\\\217\254A\\\217NAR\270=D\205\353A\301\217\302\215\301\354Qh\300\024\256\'A\270\036\tA{\024\016A\217\3021A\\\217\234A33\027A\303u9D\354Q\210\301\256G\351\301=\n\013\302)\\\245\301\205\353\321\300\037\205\007\301\\\217\002\301\217\302\275\300\205\353!@\037\2459D\244p=?ff\202\301)\\\343\301{\024\010\302\244p\237\301q=\272\300)\\\367\300\244p\355\300{\024\246\300\256\3479D\270\036\205?\n\327\343?\366(t\301=\n\333\301\205\353\003\302\270\036\227\301\303\365\230\300{\024\326\300\366(\314\300\366\2305D\n\327\211\301\037\205\201\30133w\301\303\365\001\302\244p2\302\n\327H\302\341z\020\302{\024\260\301)\\\277\301\024\2362DR\270>\30133\351\301H\341\340\301\303\365\332\301\327\2431\302\270\036b\302\037\205x\302\366(@\302R\270\007\302\354\0013D\024\256\307?\217\302%\301R\270\334\301ff\324\301\341z\316\301ff+\302H\341[\302\256Gr\302\205\3539\302{\2045D\327\243 A\232\2319A\n\327\243\276ff\214\301{\024\204\301\354Q|\301q=\003\302R\2703\302\270\036J\302\327#/D{\024\314\301\037\205w\301\\\217^\301\327\243\316\301q=,\302{\024(\302\270\036%\302\256Gi\302H\341\214\302\024\2562D\\\217bA\232\2315\301\024\256\247\277\000\000\200>R\270:\30133\347\301H\341\336\301\303\365\330\301\327\2430\302\315\234-D\366(\242\301\037\205\303\300\303\365\374\301\327\243\254\301\366(\240\301\037\205\377\301\024\256D\302\037\205@\302\\\217=\302\217r/DH\341\352@H\341N\301\244p\235?q=\302\301\n\327c\301H\341J\301\315\314\304\301\354Q\'\302\366(#\302\315\234.D\217\302U\300\000\000\200@\366(\202\301=\n\007\300\303\365\334\301\327\243\214\301\366(\200\301\037\205\337\301\024\2564\302\303\2450Dq=\002A\232\231\231@q=BA{\024\002\301\303\365\300@\n\327\233\301=\n\027\301\366(\374\300ff\236\301\000P5D\256G\225Aff\326A\024\256\273Aff\366A\341z(A\037\205\305A\205\353Q\277\037\205\023A\341z,A\341\3521D\256GY\301\\\217\242@\037\205SA{\024\036A\217\302\211A33C\300\217\3021Afff\301\037\205\213\300\217B2D)\\\257?)\\C\301ff\316@\244piA\000\0004AR\270\224A=\n\327\277\024\256GA\341zP\301\\\377.D\315\314P\301H\341:\301{\024\312\30133\323\300\270\036\305?ff\346\277\256G\261@\024\256k\301\205\353\021\277q\2756D\217\302\367A)\\\217A\354Q\232AR\270\266@\303\365\302A=\n\002B)\\\351A=\n\022B\205\353\201A\315\2749D\n\327?A\n\327+B\256G\357Aq=\372A\232\231\215A\244p\021B\000\0002B\327\243$B\000\000BB\000\000<D\315\314\020A\354Q\250A=\nPB\n\327\033B\354Q!B\000\000\326A\327\2435B33VB\n\327HB\232)?DffJA\232\231\255A\217\302\006B\354Q\201B\244pNB\205\353SB\232\231\035Bq=hBff\204B\315\2745D\315\314\026\302ff\310\301\000\000\200\301\354Q\200\300\024\256\327A\\\217^A\341ztA\232\231\331?H\341\242A\244\0001D\037\205\227\301\\\217b\302\303\365/\302\217\302\013\302\232\231\267\301\354Q\000A\303\365\240\300q=j\300\205\353\211\301{\344*D\037\205\303\301\037\205-\302\366(\242\302)\334\210\302\037\205m\302\\\217=\302)\\\203\301\217\302\353\301\315\314\340\301\\\257*D\341zT\277\366(\312\301\n\3270\302\354\321\243\302\037\205\212\302\n\327p\302H\341@\302\000\000\212\301ff\362\301\n\207)D\366(\224\300R\270\256\30033\357\301)\\C\302{\024\255\302\256\307\223\302\024\256\201\302ffS\302=\n\257\301\256\007+D\354Q\300@\327\243\260?\315\314\014?\270\036\277\301\354Q+\302\\\017\241\302\217\302\207\302\354Qk\302)\\;\302\n\307*D\256G\201\277\000\000\240@\244p\275>\037\205\353\27633\307\301)\\/\302{\024\243\302\256\307\211\302)\\o\302\232\231*D\217\3025\277\366(\334\277\256G\211@{\024\256\276\217\302\225\277H\341\314\301332\302\000\200\244\30233\213\302\000\300,D\232\231\tA\341z\374@\366(\334@q=NA\366(\004A\217\302\355@{\024\210\301\315\314\017\302\315L\223\302\232\0311D33\213A\000\000\320A\354Q\312Aq=\302A\354Q\362A\256G\315A\327\243\306A\024\256\307>ff\224\301fV.D\315\3140\30133\313@33oA\n\327cA\024\256SA\205\353\231A\217\302iA\341z\\A\\\217*\301=:/D\n\327c@\024\256\357\300\\\217\036A{\024\224Aff\216A\354Q\206Aff\266A)\\\221AR\270\212Aq\2350D\232\231\261@\217\302\021A\354Q\370\277)\\wA\341z\300A\315\314\272AR\270\262A\315\314\342A\217\302\275Af\366-D\217\302)\301\205\353\241\300\000\000\300\277\315\314H\30133\233@33WA\n\327KA\024\256;A\205\353\215A\327\343.D\244pm@\315\314\334\300\315\314\254\277\244p\r@\244p\r\301\303\365\010A\256G\211A\232\231\203A=\nwA\000p0D{\024\306@ff\036A\217\3025\277H\341\232@ff\006A\232\231)\300\000\000lA\315\314\272A\270\036\265A{D0D{\024.\277\354Q\260@\037\205\023A\205\353\261\277\270\036\205@=\n\367@\270\036U\300\270\036aA)\\\265AHq.D\232\231\351\300)\\\377\300\270\036\345\277\217\302\365?=\n\013\301\303\365H\300=\n\327>{\024*\301\327\243\330@\327\2633D\354Q\250A\n\327[A\303\365PA\000\000\232A\024\256\267A\232\231EA33\217A\024\256\253A\\\217&Af\2663D\n\327#=\327\243\250A\341z\\A\232\231QA\354Q\232A\000\000\270Aq=FA\037\205\217A\000\000\254A\341\0322D\217\302\315\300\341z\314\300ffjA33\353@\244p\325@\217\302MA\\\217\204AR\270\276@\366(8A\366\2701D\n\327\303\277R\270\376\300\244p\375\300\205\353QAq=\272@\341z\244@\256G5A\327\243pA\217\302\215@=\312-D\024\256{\301{\024\212\301\037\205\275\30133\275\301=\n\'\300\\\217\036\301\244p)\301\315\314\214\300\327\2430\277\024~-D\354Q\230\277)\\\207\301\232\231\223\301=\n\307\301R\270\306\30133s\300\232\2311\301\341z<\301H\341\262\300\\O0D\354Q4A\256G!A\315\314\264\300\217\302\345\300\217\302Y\301\270\036Y\301=\n\357@{\024.>\\\217\002\277{42D\\\217\362@\315\314\226A\256G\215A=\n\367?\315\314\314>\303\365\300\300\024\256\277\300\315\314pA\000\000\370@{\2645D\000\000`A\327\243\254Aff\003B\256G\375AH\341~AfffA=\n\377@\366(\000Aff\350A\\\2376DH\341j@)\\\215A\000\000\312A{\024\022B\354Q\rB\315\314\234A\\\217\220Aq=:AH\341:A\037\0256Dq=\n\300\256G\301?\366(xAR\270\270A\244p\tB\024\256\004B\037\205\213A\\\217~A\024\256\027A\303\0058D\354Q\370@33\263@\354Q\024A\366(\272A\315\314\366A\341z(BR\270#B\232\231\311A)\\\275A\354q8D\354Q\330?33\027A\256G\351@)\\/A\024\256\307A\366(\002Bq=/B\341z*B\270\036\327Aff8D\354Q8\276\256G\301?\354Q\024A\037\205\343@\341z,Aq=\306A\244p\001B\037\205.B\217\302)B\303\2059D\024\256\217@\205\353\211@\000\000\300@\366(\\A\232\2319A\354QtA\366(\352Aff\023B\341z@B\00009D\037\205\253\277\232\231I@{\024>@\270\036\225@R\270FA\366($AH\341^A\244p\337A=\n\016B\327\2038D\366(,\300\303\365\200\300\037\205\353>)\\\217>\366(\374?\024\256\033Aq=\362@\n\3273A\205\353\311A3\3237D\327\2430\300ff\256\300\256G\331\30033\023\300R\270\036\300q=J\277=\n\337@\205\353\231@\024\256\007A\354a7D\\\217\342\277\303\365\220\300=\n\347\300\303\365\010\301q=\202\300\000\000\210\300\n\327#\300ff\246@\\\217B@H1:D\n\3273A\037\205\027AR\270\326@\327\243\200@\037\205+@\244p\345@\024\256\337@H\341\nA\037\205\203A\354\241;D\354Q\270@\000\000\210A\024\256sA\037\205GA\341z\034A=\n\007AH\341NA\000\000LA=\ngA\315<:D\\\217\262\300\354Q8>R\2706Aff\032A\341z\334@ff\206@=\n7@33\353@\244p\345@=z;DR\270\236@R\270\036\277\341z\244@=\n\203A\217\302iA\232\231=A\\\217\022Aq=\372@\303\365DA\217R:D\n\327\223\300{\024\256>\024\256\247\300\270\036\005?\366(<A\n\327\037A)\\\347@\256G\221@\315\314L@3s8D\024\256\357\300\217\302A\301\315\314\344\300\024\256K\301=\n\337\300\327\243\210@\000\000 @\270\036\205\276\315\314<\300)l:D\341z\374@\315\314\314>=\n\207\300\244p=?H\341\232\300\037\205k?\\\217BAq=&A\366(\364@\354\0219D\270\036\255\300R\270\036@\354Q\240\300{\024\032\301\244p\225\300\000\000$\301\024\256\217\300\000\000\330@)\\\237@\232\3118D\327\243\220\277\256G\321\300\315\314\254?\341z\304\300\366(,\301\232\231\271\300{\0246\301\n\327\263\300\n\327\263@f\0068D33C\300\217\302\205\300\244p\031\301\232\231\331\277=\n\023\301\303\365\\\301\232\231\r\301H\341f\301R\270\n\301\303\3059D\024\256\337@\366(|@\n\3273@ff&\300\256G\251@\315\314\014\300q=\332\300{\024\356\277{\024\356\300\024\356;D{\024\nA\205\353yA\270\036IA=\n7A\303\365\300@R\270^A\217\302\315@\024\256\347?\327\243\330@\315L<D\244p\275?\217\302!A\315\314\210A\315\314`AR\270NA\354Q\360@ffvA\270\036\375@\\\217R@\000\300=D\232\231\271@\303\365\350@\\\217~A33\267A\315\314\236A\217\302\225A\303\365TA\232\231\251A)\\[A\n\247?D\037\205\363@\\\217VAq=nA\366(\274A{\024\364A\024\256\333A\327\243\322A)\\\247A\341z\346A\205{<DH\341J\301q=\242\300H\341:?\244p\r@\244p-A\327\243\216A\341zlAffZA\n\327\003A\341*<D\256G\241\277=\n_\301\\\217\312\300\024\256\007\27733s?\256G\031A\\\217\204A\354QXAq=FA\366\310=D=\n\317@R\270\246@=\n\357\300)\\\017>{\024\276@\244p\355@ff\200A\354Q\270A\205\353\237AH\2613D\341z!\302\232\231\007\302\327\243\014\302)\\?\302\205\353 \302R\270\t\302\315\314\003\302\\\217\302\301\327\243\212\301\232\3114D\366(\214@\303\365\017\302\366(\354\301q=\366\301\n\327-\302ff\017\302ff\360\301\\\217\344\301\037\205\237\301\366\0101D\366(p\301{\024*\301\000\000L\302\270\0362\302\366(7\302H\341i\302\244pK\302q=4\302\354Q.\302\303u0D33\023\300\341z\212\301H\341N\30133U\302\354Q;\302)\\@\302{\024s\302\327\243T\302\244p=\302H\301,D\270\036m\301\303\365\210\301\037\205\000\302\000\000\336\301q=\210\302\232\231v\302\327\243{\302\024.\227\302\303\365\207\302\244@-DR\270\376?\256GM\301{\024r\301\270\036\361\301{\024\316\301\217B\204\302\327\243n\302\024\256s\30233\223\302q\215.Dff\246@{\024\346@\366(\364\300H\341\036\301\037\205\307\301\341z\244\301R\270s\302\n\327Y\302H\341^\302\n\027-D33\273\300ff&\277\037\205\253?\024\256W\301\341z|\301\354Q\366\301\256G\323\301\\\217\205\302q=q\302\315\354-D\217\302U@\327\243 \300\366(,@\217\302\225@q=\"\301=\nG\301\232\231\333\301\\\217\270\301\217\302}\302\205[/D)\\\267@\270\036\021A{\024N@R\270\006A\\\217&A\270\036\215\300R\270\326\300\217\302\255\301R\270\212\301\256\3071D=\n\033AR\270vA{\024\226A\\\217NAH\341\220A\315\314\240A\303\365\250@R\270>@\341z@\301\23292D\n\327\343?\037\2057A\232\231\211A\354Q\244A=\nkA\270\036\237A=\n\257A\205\353\341@\354Q\230@\205\3134D\341z$A\303\365@A\000\000\256A\n\327\333A\\\217\366A\217\302\307A)\\\361A\327\243\000BR\270\212A\217\3222D\341z\374\300\303\365\030@\244p\205@\217\302]AR\270\234A\244p\267A\327\243\210Aq=\262A\366(\302A\327S2D\244p\375\277\205\353\035\301\205\353\321>\366(\014@{\024>AH\341\214A\232\231\247A\232\231qAff\242A\037\2651DR\270\036\300R\270\216\300\232\231E\301\341z\004\300\341z\224\276ff\026A{\024rA\217\302\223A\205\353IA\\\0373D\270\036\265@\037\205K@\232\231\231?{\024\326\300\217\302e@\n\327\253@\303\365pA\354Q\246A=\n\301A\270\2160D\366($\30133\223\300\\\217\342\300\303\365\020\301\232\231\207\301\244p\325\300\341z\234\300\232\231\231@\341z(AR\2500D\315\314\314>\217\302\035\301ff\206\300\217\302\325\300\\\217\n\301ff\204\301\327\243\310\300\024\256\217\300ff\246@{\024/D\205\353\311\300\270\036\275\300)\\\201\301\366((\301\n\327O\301\037\205o\301H\341\266\301\256GI\301\315\314,\301\\o1DR\270\026A=\nG@\327\243`@\000\000\330\300\037\205\213\277\341zd\300\232\231\261\300=\nW\301q=J\300\\\0170D\000\000\260\300H\341z@\303\365\030\300R\270\376\277\000\000D\301H\341\322\300\270\036\021\301\315\3140\301\037\205\227\301\303\0054D\232\231}A\232\231%A\366(\236A)\\WA\217\302]Afff@\366(\024A\303\365\330@\232\231\231@HQ5D\217\302\245@q=\250A\341zxA\232\231\307A\270\036\225A\354Q\230A\341z\014A=\ngA)\\?A\256\0075D33\223\277\303\365\200@=\n\237A{\024fAff\276A\205\353\213A\270\036\217A\366(\364@\327\243TA=*7D\327\243\010A\341z\354@\270\036IA)\\\343A)\\\267A)\\\001Bq=\320A\244p\323A)\\\201A\024\3567D\n\327C@\232\2319A33\'A{\024zA\n\327\373A\n\327\317A\232\231\rBR\270\350A\205\353\353A\232\2117D\303\365\310\277R\270\276?\341z A{\024\016A\303\365`A\256G\357A\256G\303A\354Q\007B\366(\334A\232\2316D\000\000p\300q=\252\300\327\243\020\300\303\365\310@\366(\244@\303\365$A\256G\321A\256G\245A\327\243\360A\303\2254D\303\365\000\301\303\365<\301{\024V\301\270\036%\301\n\327\343\277\037\205;\300\000\000\020@\315\314\220A\232\231IA3#3D\256G\271\300\232\231]\301\315\314\214\301)\\\231\301H\341\200\301q=\362\300\037\205\013\301\\\217b\300\303\365DA\232)3D\315\314\314={\024\266\300\000\000\\\301\000\000\214\301\\\217\230\301{\024\200\301=\n\357\300\205\353\t\301\366(\\\300\354\0216D{\024:A\024\256;A{\024\276@\024\256\007\300\n\327\273\300{\024\356\300\366(\214\300\270\036\205@\327\243@@\037%6D\232\231\231>H\341>A\341z@A\024\256\307@\303\365\350\277q=\262\300\341z\344\300\\\217\202\300R\270\216@=\3323DR\270\022\301\205\353\r\301\327\2430@=\n7@\037\205;\300\n\327/\301\n\327k\301\341z\202\301\000\000T\301\n\2273Dff\206\277\037\205#\301R\270\036\301H\341\332?\024\256\347?R\270~\300\327\243@\301\327\243|\301H\341\212\301H\2213D\354Q\270\275\205\353\221\277\303\365$\301\366( \301)\\\317?\366(\334?q=\202\300{\024B\301{\024~\301\341\2723Dff&?)\\\017?H\341\372\276\\\217\032\301\217\302\025\301\256G\021@\024\256\027@H\341Z\300\024\2567\301\n\2271D\303\365\010\301\270\036\375\300\000\000\000\301\315\314\020\301\217\302\221\301)\\\217\301\256G\311\300{\024\306\300\024\256?\301\024\356,D\270\036\225\301\232\231\331\301ff\324\301\270\036\325\301\037\205\335\301\244p\023\302q=\022\302\244p\307\301\327\243\306\301qm-DR\270\376?33\205\301\024\256\311\301\341z\304\30133\305\301\232\231\315\301\341z\013\302\256G\n\302\037\205\267\301)\374-DR\270\016@=\n\207@R\270f\301\n\327\267\301\327\243\262\301)\\\263\301\217\302\273\301\\\217\002\302)\\\001\302q].D\\\217\302?\000\000p@\024\256\267@ffN\301\024\256\253\301\341z\246\30133\247\301\232\231\257\301\303\365\370\301\256w/D\270\036\215@\217\302\275@\\\217\002Aff\"A\n\327\007\301ff\210\30133\203\301\205\353\203\301\354Q\214\301\024\316(D33\325\301\205\353\261\301\217\302\245\301\205\353\223\301\000\000\204\301\\\217\014\302\315\314.\30233,\302\\\217,\302\244\020\'DR\270\336\300\244p\006\302\232\231\351\301\244p\335\301\232\231\313\301\024\256\273\301ff(\302\327\243J\302=\nH\302\217\002*D\341z<Aq=\232@\327\243\256\301)\\\213\301ff~\301R\270Z\301H\341:\301\\\217\362\301\037\205\033\302\n\007+Dq=\202@\232\231}Aq=\016A{\024\216\301\232\231U\301\256G=\301\232\231\031\301\037\205\363\300\000\000\322\301f\006-D\024\256\377@\303\365@AR\270\276A=\n\207A\354Q\034\301\037\205\253\300\217\302u\300{\024\316\277\\\217\302>q\315.D\037\205\343@\232\231qA)\\\231A\232\231\367A\205\353\277Aq=*\300\000\000\340?\256GQ@\000\000\260@\\\237-D=\n\227\300\303\365\030@{\024&A33gA\n\327\321A\366(\232A\366(\354\300{\024>\300\232\231\271\277Hq.D\205\353Q@\354Q\270\277\244p\265@\\\217ZA\n\327\215A{\024\354Aff\264A33\203\300R\270\236>\n\327-Dq=\032\300R\270^?ffv\300\327\243P@\000\0004A\270\036uA\315\314\330A\270\036\241A\354Q\320\300Rh0D\354Q$A\037\205\373@q=2A\244p\315@\341zXA\366(\254AR\270\314A\341z\025B\256G\363A\303\3052D)\\\027A\n\327\235A\\\217\212A\315\314\244A{\024~A\205\353\267A\n\327\367A33\014B\354Q;B\366(4D\232\231\261@\366(pAq=\312A\303\365\266A33\321A\244p\253A\354Q\344A\270\036\022Bff\"B\270>3Dq=j\300\205\353\361?\232\2315A\303\365\254A\024\256\231A\205\353\263A\366(\216A=\n\307A\341z\003B\315<4D{\024~@R\270\236>\037\205\273@\270\036uAR\270\314A\244p\271A\024\256\323A\205\353\255A\315\314\346Af\3663D\315\314\214\277\024\2567@q=J\277\354Q\230@\037\205cA\205\353\303A\327\243\260AH\341\312A\270\036\245A\354q7DH\341^A\256GMAff\206Aq=RA\037\205\225A33\341A\024\256\031B=\n\020B\366(\035Bq=8D\037\205K@H\341\210A{\024\200A\n\327\237A\\\217\202A\303\365\256A\327\243\372Aff&B\217\302\034B)L9D)\\\207@\270\036\355@R\270\252A\205\353\241A\024\256\301Aff\244A\315\314\320Aq=\016B\354Q7BR\2508D\n\327#\300\217\302\325?33\233@q=\226A\244p\215A33\255A\205\353\217A\354Q\274A\000\000\004B\\\2579D\037\205\203@ff\306?\303\365\270@)\\\017A\270\036\267A\354Q\256A{\024\316A\315\314\260A33\335AH\3618D{\024>\300\205\353\221?\217\302\265\277\n\3273@\024\256\277@)\\\237A\\\217\226A\354Q\266A=\n\231A\341\2328D\315\314\254\277q=\212\300=\nW\276\256G1\300H\341\272?\341z\224@\\\217\224A\217\302\213A\037\205\253AHq9DffV@\000\000\000@\354Qx\277\303\365H@\341z\024?\205\353\231@\024\256\377@)\\\257A\\\217\246A=z:D\341z\204@\024\256\357@\341z\304@H\341J@\303\365\350@=\n\227@33\017A{\024BA\341z\320A\2172@D=\n\267A\366(\330A\303\365\362A\366(\350Aff\320A\256G\361A\315\314\334A\327\243\376A=\n\014BR8ADH\341\202@\217\302\327AH\341\370A\n\327\tB\244p\004B\270\036\361A\000\000\tB\037\205\375A\024\256\017B{\304@D\024\256\347\277\205\353\021@\256G\311Aff\352A\232\231\002Bff\372A\327\243\342A\217\302\001B=\n\357A\205KAD=\n\007@\232\231\231>\341z\214@\366(\332A\256G\373A=\n\013B\327\243\005B\037\205\363A33\nB\n\347@D\303\365\310\277q=\n?\\\217\242\277\341z4@\232\231\315AR\270\356A\217\302\004BR\270\376A\303\365\346A\024\216CD\217\302)A\327\243\020Aff2A\244p\025AH\341VAq=\021B\315\314!B33/B\315\314)B\244pCD\037\205\353\276ff\"A\256G\tA=\n+A{\024\016A\037\205OAff\017B\303\365\037B)\\-B\244\020DD\000\000 @\\\217\002@ffJA\256G1A=\nSA{\0246A\037\205wAff\031B\303\365)B\205+DD=\n\327>H\341:@\244p\035@\270\036QA\000\0008A\217\302YA\315\314<Aq=~A{\024\033Bf6DD{\024.>=\n\027?\217\302E@\354Q(@\n\327SAR\270:A\341z\\A\037\205?A\341z\200A\024\316CD\327\243\320\277H\341\272\277\270\036\205\277H\341\272?\000\000\200?\217\3029A\327\243 AffBA\244p%A)\234CD\024\256G\277q=\032\300)\\\017\300\303\365\350\277{\024.?\256Ga>\256G-A\366(\024A\205\3535A\366HBD\232\231\251\300\\\217\302\300R\270\366\300\256G\361\300\n\327\343\300\n\327\223\300\\\217\242\300\303\365\260@\244p}@=\372BD\256G1@\205\353!\300\n\327S\300{\024\236\300\327\243\230\30033\213\300\315\314\354\277\n\327\023\300\315\314\004A\000`BDq=\032\300\354Q\270>{\024\236\300=\n\267\30033\353\300\217\302\345\300\354Q\330\300\354Q\210\300=\n\227\300\341\332AD\270\036\005\300\024\256\217\300\366(\334\277\327\243\340\300\232\231\371\300H\341\026\301\366(\024\301\244p\r\301H\341\312\300\232\tAD\256GQ\30033\253\300\354Q\370\300\024\256\237\300\327\243$\301\270\0361\30133K\301\341zH\301\217\302A\301\037\005AD)\\\217\275\217\302U\300\244p\255\300\\\217\372\300\205\353\241\300\217\302%\301q=2\301\354QL\301\232\231I\301\366h@D\366(\034\300\327\243 \300\303\365\270\300\037\205\373\300\354Q$\301\000\000\360\300\315\314L\301\256GY\301)\\s\301=Z@D\037\205k\276H\341*\300)\\/\300\354Q\300\300\244p\001\301\000\000(\301)\\\367\300\341zP\301\303\365\\\301\217b@D\270\036\005>\315\314\314\275\\\217\"\300=\n\'\300\366(\274\300R\270\376\300\205\353%\30133\363\300ffN\301\232\tAD=\n\'@)\\/@\327\243 @)\\\217=\000\000\000\000\256GQ\30033\253\300\354Q\370\300\024\256\237\300\303E@D\n\327C\300ff\346\276\n\327\243\276\315\314\014\277)\\?\300\n\327C\300\\\217\312\300\\\217\006\301\270\036-\3013\303?D\\\217\002\30033\243\300)\\\037\300=\n\027\300\217\302%\300\303\365\240\30033\243\300\205\353\005\30133\'\301\3541@D\244p\335?R\270\236\276\024\256W\300\\\217B\277\256G!\277\366(\\\27733S\300\024\256W\300\341z\324\300q\335@D\037\205+@\270\036\215@\024\256\027@\327\2430\277\217\302\365?33\003@\303\365\350?R\270\036\277\327\2430\277\037\005CD\205\353\tA\315\3144A\341zPA\n\327/A\217\302\375@\327\243(AR\270*A=\n\'A\000\000\000Af\026CDq=\212>q=\016A\270\0369A\315\314TA\366(4A33\003A\303\365,A=\n/A)\\+A{\324AD\303\365\240\300\354Q\230\300=\nw@\256G\321@\354Q\004A)\\\307@H\341J@\303\365\270@\270\036\275@=\352=D\\\217z\301\037\205\245\301)\\\243\301\315\314<\301\205\353\021\301\341z\354\300H\341\026\301\n\327G\301{\024\036\301HA@D\217\302\025A\232\231\311\300\256G5\301\303\3650\301\366(\034\300\217\302u>\366(\374?)\\\217\275\354QH\300)\354=D\256G\025\301\217\302\365<{\024z\301\256G\245\301\270\036\243\301\354Q<\301\244p\021\301\037\205\353\300ff\026\301\\\237>D333@\303\365\320\300\270\0365@\256GM\301H\341\216\301R\270\214\301\037\205\017\301\256G\311\300\205\353\221\300\244\360@D\354Q\024A\270\036AA)\\/@\232\231AA\n\327c\300\244p\t\301\270\036\005\301\232\231\231>R\270>@R8@D\354Q8\300\341z\314@=\n\023A)\\\017\276\037\205\023A{\024\316\300\037\2057\301333\301\270\036%\300\315l?D\037\205K\300\205\353\301\300\244pM@\354Q\300@\341zT\300\256G\301@\205\353\031\301ffj\301{\024f\301=\332@DR\270\266@\205\353!@33\263\276R\270\016A\037\205;A\303\365\030@\000\000<Aq=z\300=\n\017\301\024\016BD\205\353\231@\354Q(AH\341\352@R\270\216@\024\256[Aq=\204Aff\346@\341z\204Afff?q\315DD\n\327/A\315\314|A{\024\254A\327\243\222A33wA\217\302\305A\366(\334A\037\205\221Aff\334A\232\271DDR\270\236\276H\341*A\n\327wA\232\231\251A\366(\220Aq=rA\256G\303A\024\256\331A=\n\217Aq\215AD=\nK\301\000\000P\301\327\243\000\300333@\366(\010A\\\217\252@\315\314\034@\037\205;A\354QhA\244\300CD\315\314\014A\303\365x\300ff\206\300\256G\331@\232\2319A\341z\212A{\024bA\000\0004A\366(\244A\327cCD\232\231\271\27733\353@H\341\252\300\315\314\264\300H\341\252@ff\"A\217\302}AH\341JA\315\314\034A\244\300AD\232\231\321\300\000\000\000\301\315\314L?q=>\30133C\301H\341\232\277fff@\303\365\024A\366(\304@\217RBD\205\353\021@\327\243\210\300=\n\267\300\270\036E@\217\302\031\301R\270\036\301\303\365\210?\366(\274@\244p9A\327#AD)\\\227\300\315\314\034\300\000\000\020\30133\'\30133\323\277\244pe\301ffj\301q=j\30033\223?\205\033BD\024\256w@\366(\\\277\217\302\265?\366(\244\300\\\217\322\300{\024\016@\037\205\'\301\341z,\301=\nW>\024\036BD\n\327#=q=z@\205\353Q\277H\341\272?H\341\242\300\256G\321\300\327\243\020@H\341&\301\n\327+\301\n7BD\024\256\307>\366(\334>\232\231\211@\366(\334\276\315\314\354?ff\226\300\315\314\304\300\232\231)@\327\243 \301\037\305AD\n\327\343\277\205\353\261\277\315\314\254\277\256G!@\244p\r\300)\\\217=)\\\317\300\217\302\375\300R\270^?)|DD\217\302-A\256G\021A\037\205\027A\366(\030A{\024VAff\nAH\341.A\366(\214@\037\205;@{\304CD\024\2567\300\024\256\377@R\270\306@33\323@\341z\324@\366((A\303\365\270@\303\365\000A\256G\301?\366\210DD\341zD@\315\314L>\303\3650A\341z\024AR\270\032A)\\\033A\256GYA\232\231\rA{\0242A)\214BDff\376\300\366(\234\300\000\000\370\300=\nG@q=\252?\366(\334?\256G\341?\366(\264@fff?\354\241BD{\024\256>\037\205\363\300\256G\221\300\270\036\355\300\315\314\\@\217\302\325?\n\327\003@ff\006@=\n\277@q\375BD=\n\267?\\\217\342?\217\302\305\300=\nG\300)\\\277\300\366(\234@ffF@)\\_@\205\353a@\244\320FD\315\314tA\n\327\205A\\\217\210A\205\353\021A=\nCA\270\036\025A\244p\241A33\223A\354Q\226A\327cHD\232\231\311@\315\314\254Aq=\270A\303\365\272AR\270vA\205\353\223A\205\353yA\n\327\323A\232\231\305A\024>GDH\341\222\300H\341\332?{\024\210A\037\205\223Aq=\226A\256G-Aff^A\341z0A\270\036\257A\256\327GD\232\231\031@\366(\014\300\037\205\203@\256G\233AR\270\246A\244p\251A\024\256SAff\202AH\341VA\nGKD\n\327[A\270\036\201A\315\3148A\315\314\216A\232\231\004B\354Q\nB\024\256\013B\217\302\327A\354Q\360A\341\352ID{\024\256\300\315\314\004A33+A\037\205\303@\\\217FA\024\256\335A\270\036\351A\n\327\353Aq=\254A{\304GD\232\231\t\301\327\243`\301\232\231\231\276ff\006@)\\\037\300\n\327s@H\341\230A\354Q\244A=\n\247Af\326FD{\024n\300\270\036E\301{\024\216\301\327\243\200\300)\\\317\277R\270\306\300\354Q\270=q=vA\\\217\206A\256\327FD\n\327\243<\315\314l\300\315\314D\301\205\353\215\301\000\000\200\300\315\314\314\277{\024\306\300\256G\341=\\\217vA\217\"DD\256G-\301\303\365,\301\341zh\301=\n\271\301\\\217\344\301\256Gm\301H\341F\301\366(\210\301\037\205+\301\n\347CD{\024n\277\366(<\301\n\327;\301)\\w\301\341z\300\301\000\000\354\301\366(|\301\217\302U\301\232\231\217\301\315,@D\\\217n\301\244p}\301)\\\325\30133\325\301\303\365\362\301H\341\033\302\327\2431\302)\\\365\301\366(\342\301R\210>Dq=\322\300\n\327\253\301\256G\263\301\303\365\004\302H\341\004\302\217\302\023\302\366(6\302\205\353K\302\303\365\024\302H\201>D\256G\341\275\217\302\325\300R\270\254\301\366(\264\301ff\005\302\354Q\005\30233\024\302\232\2316\302)\\L\302H\241CD\000\000\244A\270\036\243A\270\036]A\037\205\213\277\256G\001\300\232\231M\301\256GM\301ff\204\30133\311\301\244\240ED\024\256\377@\205\353\343A=\n\343A\341z\256A\315\314\334@=\n\277@\037\205\233\300H\341\232\300\303\365\010\301\327SDDff\246\300\\\2172@\354Q\272A\244p\271AH\341\204A\232\231\331?\270\036E?\303\365 \301\327\243 \301\327\243>D\000\000\266\301\232\231\337\301\024\256\237\301q=\n?\366(\334>\341z\304\300ff\250\301\n\327\257\301q=\003\302H\201<D\327\243\010\301\354Q\372\301\303\365\021\302\000\000\344\301\000\000\000\301\217\302\001\301H\341j\301R\270\354\301\366(\364\301\037\0058D\037\205\217\301\n\327\323\301\205\353D\302R\270Y\302\217\3029\302\037\205\317\301ff\320\301\341z\002\302\270\036>\302\\\237=D\256G\263A=\n\217@q=\202\300\\\217\326\301{\024\000\302q=\300\301\205\353a\300\303\365h\300)\\#\301\270\036?D\024\256\277@33\343A)\\\'A\217\302\365?\327\243\246\301q=\320\301\354Q\220\301\244p\035@ff\026@\270\316@D\000\000\330@\n\327KA\232\231\014B\024\256\211AR\270\nA\256Ga\301q=\232\301\327\2434\301)\\\023A\217\">D=\n+\301\366(|\30033\003@\024\256\303A\327\243\320@\256G\001\300\366(\306\301\217\302\357\301\n\327\257\301\315L@D\\\217\nA\205\353\001\300=\n\227@)\\+A\341z\004BH\341rA\341z\324@H\341\200\301\341z\252\301H\021@D{\024n\277)\\\367@\244p=\300\\\217r@\341z\034A\217\302\000B\000\000dAR\270\266@\354Q\210\301\\?>D\303\365\350\300)\\\003\301ff\346>\n\327#\301)\\_\300\000\000 @\256G\307A=\n\337@\303\365\310\277\205k>D\327\2430?H\341\322\300\327\243\360\300\205\353\221?\315\314\030\301333\300\366(L@\315\314\314A\270\036\365@\\\017@D\205\353\321@\000\000\350@\217\302\365\274\217\302u\277ff\366@)\\?\300\327\243p@\000\000\034A\327\243\000B\303\265@Dff&@\\\217\022A\232\231\035A\341z$@\205\353\321?\315\314$A\024\256\307\276\037\205\313@\232\231EA\217\202=D\315\314L\30133#\301\303\365h\300\315\314<\300\024\256#\301\\\2172\301\000\000 \300=\nS\301{\024\316\300\341\372:D\205\353!\301)\\\267\301\\\217\242\301\366(\\\301\270\036Q\301\315\314\242\301q=\252\301\205\353I\301\341z\272\301\000\240;D\270\036%@\256G\361\300R\270\242\301\205\353\215\301H\3412\301\n\327\'\301\366(\216\301\232\231\225\301\327\243 \301H\241>D\354Q@A\232\231iA)\\\217@\270\036\005\301=\n\267\300=\nW?\n\327\303?\000\000\270\300\217\302\325\300\n\307=Dq=Z\300\217\302\tA=\n3A\303\365\210?\024\256;\301{\024\022\301\341z$\300\327\243\360\277\\\217\022\301)\314@D\256GAAR\270\nA\037\205\245A\366(\272AffRA33\263>\315\314<@\366(\030A33#A\341\032BD)\\\247@\341z\212Aff^A)\\\317A\000\000\344A=\n\223A\\\217\262@H\341\002A\n\327kA\217RED\205\353MA\315\314\220A\244p\361A\366(\326A\366(\033B\341z%B\000\000\372A\232\231\223Aff\250AHQED\n\327\243\274\232\231MA\327\243\220A\256G\361A\000\000\326A{\024\033Bff%B\n\327\371A\244p\223Af\006GD\\\217\332@\205\353\331@\244p\235A\256G\307A\303\365\023B\354Q\006Bff6BR\270@Bq=\030B{DGD\354Qx?\232\231\371@\303\365\370@33\245A=\n\317A\n\327\027B33\nB\256G:B\232\231DBfvGD\024\256G?\000\000\340?\256G\tA\303\365\010A\244p\253A\256G\325A\303\365\032B\354Q\rBff=B3\263ED\232\231\341\300\327\243\310\300\232\231\251\300\n\327\303?\256G\301?{\024fAH\341\234A\037\205\375Aq=\342A\315\214FD\232\231Y@\232\231i\300\024\2567\30033\363\277\217\302\235@\270\036\235@q=\216A{\024\270A)\\\014B\341\032GD{\024\016@\n\327\263@=\n\267\277ff&\277\n\327\243>\315\314\344@\366(\344@\000\000\240A\n\327\311A\327\243FD{\024\356\277\354Q\270>\327\243p@\\\217R\300\327\243 \300\270\036\305\277\256G\251@\327\243\250@\270\036\221A\244\320ED33S\300\270\036\245\300\366(<\300\037\205\353>H\341\322\300\205\353\271\300H\341\232\300R\270\376?\366(\374?=zED\315\314\254\277\315\314\224\300\354Q\320\300\256G\211\300\n\327c\277{\024\376\300\270\036\345\300{\024\306\300\n\327#?3\343ED\205\353\321?\341z\224>\327\243@\300\n\327\233\300\232\231)\300\000\000@?\232\231\311\300\327\243\260\300\232\231\221\3003CDD\000\000\320\300\037\205\233\300R\270\306\300\366(\030\301\205\3535\301ff\022\301\000\000\270\300\315\314L\301\354Q@\301\217\262CD\327\243\020\300\366(\014\301\n\327\343\300\037\205\007\301\354Q<\301{\024Z\301\\\2176\301\366(\000\301\303\365p\301{\364@D\037\205/\301\024\256S\301\n\327\235\301R\270\220\301\037\205\233\301\205\353\265\301\315\314\304\301=\n\263\301\n\327\227\301\366\210DD\270\036eAffV@\037\205\213?\270\036\255\300\256Gq\300\n\327\243\300R\270\006\301\341z$\301\303\365\000\301\232\271DD\\\217B?\256GqA\037\205\203@\315\314\354?\315\314\224\300\327\243@\300\037\205\213\300\270\036\365\300\354Q\030\301H\201FD\n\327\343@\366(\374@\232\231\261A\024\2563A\037\205\017A{\024\036@\037\205\203@\327\2430@q=\n\277\232\211ID{\024BA\000\000\232A{\024\240A\354Q\tBH\341\272A\315\314\250A\232\231iA\205\353\201Aq=nA\232\251ID\000\000\000?{\024JA\000\000\236A{\024\244A\354Q\013BH\341\276A\315\314\254A\232\231qA\205\353\205A\2172ID{\024\356\277{\024\256\277\354Q,A\270\036\217A33\225AH\341\003B\000\000\260A\205\353\235A\n\327SA=\372ID\024\256G@\256G\241?\256G\341?q=^A{\024\250A\366(\256A)\\\020B\303\365\310AH\341\266A\n\227IDff\306\277\303\365\310?\341z\224\276=\nW>\244pEA\024\256\233A\217\302\241A\366(\nB\\\217\274AR\370ID\\\217\302?\217\302\365\274\217\302E@\244p\235?\244p\335?\217\302]A\n\327\247A\205\353\255Aq=\020B\n\'ID\256GQ\300\000\000\340\27733S\300\354Q8\276\\\217\002\300\270\036\305\277\244p)A\024\256\215A\217\302\223A{\204IDH\341\272?\024\256\347\277\341z\224\276\037\205\353\277\n\327\243?\341z\024\277\n\327\243\275\315\314@A)\\\231A3\213HD\256Gy\300\n\327\033\300\\\217\266\300\205\353\205\300\037\205\267\300)\\\'\30033\217\300ff~\300\341z\002AHAID{\0246@ff\206\277\205\353\321>=\n7\300\037\205\253\277\303\3658\300\037\205k>\327\243\320\277\327\243\220\277\327\323LD\327\243dA{\024\211A\n\327SA33kAH\3416A33OAff6A\354QhA\\\217JA\256\367MD\205\353\221@\315\314\226A\\\217\255Aff\216A{\024\232A\n\327\177A{\024\214A)\\\177A\327\243\230A\341\352PD\315\314<AH\341\202A33\365A\341\372\005B\315\314\354A\341z\370A\354Q\336A\341z\352A{\024\336A\232\tPD\256Ga\300\341z\004A\244pMA=\n\331A\315\314\357A\327\243\320A\354Q\334A\366(\302A\354Q\316A\327\323MD\244p\r\301\217\302E\301)\\\017\277\000\000\200@\354Q\222A{\024\251A\205\353\211A\232\231\225AH\341vA{\224HD\205\353\247\301\327\243\356\301ff\005\302ff\254\301\205\353\207\301\315\314,\300\341z\024>\000\000p\300\\\217\022\300\2172GD\303\365\260\300\366(\324\301\244p\r\302\037\205\033\302\327\243\330\301\366(\264\301\024\256\003\301\354Q\254\300\341z\024\301{\354FD\366(\214\277\000\000\324\300\205\353\334\301\354\321\021\302f\346\037\302ff\341\301\205\353\274\30133\025\301)\\\317\300\354\241GD\244p5@R\270\336?\\\217r\300q=\306\301\341z\006\302\\\217\024\302R\270\312\301q=\246\301\024\256\317\300\\_HD\244p=@\244p\271@ff\226@\341zT\277\\\217\256\301\256G\365\301R\270\010\302=\n\263\301\\\217\216\301\303UHD\232\231\031\276\n\3273@\327\243\264@\232\231\221@H\341z\277\217\302\257\301\341z\366\301\354Q\t\302q=\264\301\024\276ID\366(\264@)\\\257@=\n\007Aff4AH\341\"A\315\314\224@R\270\202\301\244p\311\301\232\231\345\301R\030JD\341z\264?\256G\341@\341z\334@\232\231\035A\303\365JA\244p9A\205\353\301@H\341n\301\366(\276\301\327cJD=\n\227?\217\302%@\037\205\003A\270\036\001A\341z0A\n\327]A\354QLA\024\256\347@\000\000\\\301\341jKD\037\205\203@\256G\251@ff\326@\256GEAH\341BAq=rA\315\314\217A=\n\207A\232\2315A\\\317LDq=\262@H\341\032A\217\302-A\354QDA33\217A\000\000\216A\024\256\245A)\\\274A\232\231\263A\315\034MDH\341\232?\303\365\330@q=.A\270\036AA\024\256WAH\341\230A\024\256\227A)\\\257A=\n\306A\270\276LD\366(\274\277\270\036\205\276\205\353\251@R\270\026A\232\231)A\366(@A\270\036\215A\205\353\213A\232\231\243A=\nND\217\302\245@\244pm@\244p\235@\n\327\'A\232\231iA\341z|A\037\205\211A\\\217\266A)\\\265A{\004ODq=z@\244p\021A\n\327\363@\256G\rAfffA{\024\224A\037\205\235A\315\314\250A\n\327\325A=\352OD\217\302e@\000\000\360@H\341JA)\\3AR\270FA\205\353\217A\315\314\260Aq=\272A\037\205\305A\244\260ODfff\277\366(,@33\323@\341z<A\303\365$A\354Q8AR\270\210A\232\231\251A=\n\263A\037\325OD\205\353\021?\303\365\250\276\327\243P@\244p\345@\232\231EA{\024.A\244pAA\256G\215A\366(\256A\366(OD\366(,\300\024\256\007\300\256GA\300\205\353\021?)\\\217@\\\217\032A=\n\003Aff\026A\037\205oA\354QOD\n\327#?33\003\300\244p\275\277\354Q\030\300H\341\232?\n\327\243@\315\314$A\256G\rA\327\243 Aq\315MDq=\302\300\217\302\255\300\205\353\001\301\232\231\361\30033\007\301\037\205\233\30033s\277)\\\207@\327\2430@\\\317PD\341z@AR\270\276@33\323@q=z@)\\\217@\270\036e@\244p\345@\256G1A{\024\202AR\250OD\037\205\223\300\244p\355@\315\314\254?R\270\376?333\277\270\036\005\276\n\327\203\277\n\327#@=\n\317@\037EODff\306\277\270\036\305\300\n\327\273@\315\314L\276\256G\341>\000\000\020\300=\n\327\277\270\036%\300\256G\201?\354\361NDff\246\277ff6\300R\270\356\300q=\222@\000\000\300\277\366(\\\27733c\300R\270>\300\354Qx\300=\372OD\366(\204@\270\0365@\n\327\243?\270\036U\30033\013A\354Q(@\256GQ@\341z\024?33\223?\256\327PD\244p]@H\341\362@\256G\311@\024\256\227@\270\036\005>\\\217BAH\341\302@)\\\327@\256G\201@\205\253QD\n\327S@\327\243\330@ff.A\232\231\031A\315\314\000A\366(\\@\037\205wAff\026A\327\243 A\000\320RDq=\222@\366(\374@\244p5A\037\205wAR\270bA\205\353IA\366(\000A\354Q\240A\037\205_A\217bSD\\\217\022@\037\205\333@R\270\"A{\024ZA{\024\216A\024\256\203A\\\217nA\315\314$A\327\243\262A\256gSD\n\327\243=\024\256\027@{\024\336@\000\000$A)\\[AR\270\216A\354Q\204A\n\327oA{\024&A\315\314SDq=\312?\341z\324?\315\314|@\354Q\010A\256G=A\327\243tA)\\\233A\303\365\220A\\\217\204A\3541TDq=\312?q=J@)\\O@\303\365\260@\232\231!A\\\217VA\303\365\206A\000\000\250A\232\231\235A\256\007UD\217\302U@\244p\235@\000\000\320@\\\217\322@\205\353\rA=\nWA\000\000\206A\024\256\241AR\270\302A\232\031TD{\024n\300\\\217\302\276\232\231\231?\205\3531@=\n7@\315\314\244@\037\205\033A\341zPA\205\353\203Aq\235OD\037\205\217\301\256G\255\301\\\217\222\301\205\353\205\301\\\217r\301\256Gq\301\327\243L\301\037\205\003\301\270\036\235\300\303eODR\270^\277\341z\226\301q=\264\301\037\205\231\301H\341\214\301q=\200\30133\177\301\\\217Z\301\244p\021\301\037eLD\366(@\301{\024N\301\\\217\366\301\366(\n\302\232\231\371\301\303\365\354\301\354Q\340\301\024\256\337\301)\\\315\301\205\233KD\232\231I\300\\\217r\301q=\200\301H\341\007\302\217\302\026\302ff\t\302{\024\003\302\037\205\371\301H\341\370\301\244\340LD\\\217\242@=\n\367?\256G!\30133/\301\270\036\347\301\244p\002\302\366(\352\301\037\205\335\301H\341\320\301\341:MD\341z\264?\024\256\317@\217\302U@R\270\n\301\327\243\030\301\n\327\333\301\232\231\371\301H\341\336\301q=\322\301=\332OD\n\327\'Aff>A\n\327\207A\256G]A\303\365\350?33s?\205\353\207\301\024\256\245\301\303\365\212\301\000\340OD\354Q\270=\256G)A\n\327?A\\\217\210AR\270^A\341z\364?\270\036\205?33\207\301\303\365\244\301\327cOD\354Q\370\277\315\314\354\277q=\nA\315\314 A{\024rA\024\256?A\217\302\365\274fff\277R\270\226\3013\243QD\n\327\017A\232\231\341@\341z\344@=\n\215A\354Q\230A\303\365\300A\217\302\247A)\\\017A\244p\001A{\244PDR\270~\300\354Q\240@\341zD@q=J@ffZA\303\365pA\270\036\241A\205\353\207A)\\\237@=\332ODq=J\300\341z\344\300\315\314\354?\354Q\270\275\000\000\000\000\n\327\'Aff>A\n\327\207A\256G]AR\370ND\205\353a\300{\024\326\300R\270*\301=\n\327\277\024\256g\300\205\353a\300R\270\336@\205\353\005A33WA\341*ND\244pM\300\024\256\327\300ff\036\301{\024^\301\341z\234\300\\\217\332\300\024\256\327\300\000\000p@\270\036\245@\270.ND\217\302u=\232\231I\300\217\302\325\300\244p\035\301\270\036]\301\\\217\232\300\327\243\330\300\217\302\325\300\n\327s@f\326MD\327\243\260\277\303\365\250\277\303\365\220\300\303\365\000\301\037\2053\30133s\301R\270\306\300ff\002\301\303\365\000\301{\024ND\354Qx?\205\353\321\27633\263\276\n\327c\300H\341\342\300\000\000$\301\024\256c\301\024\256\247\300\217\302\345\300\327\343MD\\\217B\277=\nW>\217\302\225\277{\024\216\277q=\212\30033\373\300\366(0\301\n\327o\301\000\000\300\300\341JQD\217\302YA\232\231MA\270\036]A=\nGA\000\000HA\327\243\024A\354Q\270@ff&@\327\243\260\277{4QD33\263\276\366(TA\000\000HA\037\205WA\244pAAffBA=\n\017A\270\036\255@\000\000\020@q\215QD\205\353\261?\270\036\205?ffjAq=^A\217\302mA\024\256WA\327\243XA\256G%A\232\231\331@\232iRD\366(\\@\\\217\232@)\\\217@R\270\220A\327\243\212Aff\222A)\\\207A\n\327\207A\354Q\\A)\314RD\270\036\305?)\\\237@\n\327\313@\327\243\300@=\n\235A\303\365\226AR\270\236A\024\256\223A\366(\224A\244\260WD\\\217\234AH\341\250Aff\304A\037\205\317AR\270\314A\315\314\034B\217\302\031B\327\243\035B\270\036\030B3\023ZD\327\243\030AH\341\350A33\365A)\\\010B\205\353\rB\037\205\014B\303\365BB\205\353?B\315\314CB\360\347YDV\016-\277\362\322\rA\325x\343A\301\312\357A\360\247\005BL7\013B\345\320\tB\211A@BL7=B\000\220ZDb\020(@\232\231\371?\n\3277A\341z\370Aff\002B\366(\020BR\270\025B\354Q\024B\217\302JBq}bD\024\256\375A\020X\tB\327\243\006B\315\314,B{\024{B\270\236\200B\000\200\207B\256G\212B{\224\211B{$dD\037\205\323@\256G\031B\264\310#B{\024!Bq=GB\217\302\212B\n\327\215BR\270\224B\000\200\227B)\034eD\024\256w@\024\256\'A\217\302(B\226C3B\\\2170BR\270VB\000\200\222B{\224\225B\303u\234B\217\302gD\232\231)A\037\205gA\327\243\250A\366(SB\374\251]B\303\365ZB\\\217\200B3\263\247B\256\307\252B=\352hD\n\327\223@\037\205sAR\270\230A\232\231\315A\327\243eB\335$pB\244pmB\315\314\211B\244\360\260BR\310gD\303\365\220\300\354Q\270==\n+A\303\365hA)\\\251A\037\205SB%\006^B\354Q[Bq\275\200B3\223iD\244p\345@\303\365(@\354Q\350@H\341\216A\n\327\255AR\270\342A33pB9\264zB\000\000xB\341\niD\354Q\010\300\256G\241@\\\217\002?\366(\244@\024\256{A\315\314\234A\024\256\321A\024\256gB\033/rB\3541hD\303\365X\300\327\243\260\30033\323?\354Q8\300R\270\336?\244pEA\024\256\201A\\\217\266A\270\036ZBf\246hD\303\365\350?\303\365\310\277\315\314l\300{\024^@\024\256\207\277\n\327c@\\\217bAq=\220A\270\036\305A\024\016iD)\\\317?\366(\\@\315\314L=\270\036\005\300H\341\242@)\\\017?\217\302\245@\341z|A33\235A\037EjD\037\205\233@)\\\317@\315\314\004A\270\036\235@\205\3531@33\037A\244p\255@\327\243 A\270\036\245A\000\300kD\244p\275@\341z,AffFA\037\205cA\256G-A33\013A\205\353}A\244p5A)\\\177A\256\347eD=\n\273\301\024\256\213\301\232\231I\301\024\256/\301\\\217\022\301\315\314H\301H\341j\301\354Q\360\300\327\243@\301\\\217hD\205\353)A\366(L\301H\341\332\300\244p\375\277\354Q\270\276H\341\272?=\n\367\277\205\353\201\300=\nG@\244\200iD\256Gq@q=fA\n\327\017\301\341zD\300\270\036\345?q=Z@)\\\247@\037\205\353?\341z\224\276\nwkD33\373@\205\3539A\205\353\261A\205\353\221\277\303\365\230@q=\032A\366(4A\256GQA=\n\033A{4mDR\270\336@\303\365lA\327\243\224A\232\231\351Aq=\272@\n\327;A\315\314\204A\217\302\221A\354Q\240Aq\275nD\341z\304@\232\231QA\232\231\247A\217\302\305A)\\\rB)\\?A=\n\217A\205\353\265AH\341\302A\217brD\256GiA\217\302\245A\244p\335A\270\036\016B33\035B\024\256GB\354Q\324A\n\327\001B\256G\025B\024\336rD=\n\367?{\024\204A33\265AH\341\354A\n\327\025B\205\353$BffOB\217\302\343A\\\217\tBR\370sD\270\036\215@H\341\312@)\\\247A\341z\330A{\024\010B\341z\'B\\\2176B=\naB\037\205\003B\n7qD\354Q0\301\037\205\323\300\217\302\225\300ff\036A\354Q\200A\000\000\270A\315\314\366A\341z\nB\303\3654B\315\274qD\217\302\005@H\341\016\301\327\243\220\300\217\302%\300\n\327?A=\n\221AR\270\310A\217\302\003B\n\327\022Bf\346sDff\nA\n\327+A)\\\217\276\366(\204@\205\353\301@\270\036\245Aq=\326A\303\365\006B)\\&B\205\353uD\256G\001A\n\327\205A\\\217\226A\232\231\371@)\\CAq=bA\217\302\345A\244p\013B\256G\'B{$tD\037\205\343\300\354Qx?\205\353\031A)\\;A\327\2430?33\243@\303\365\340@H\341\254A\000\000\336A\037EuD\354Q\220@ff&\300)\\\257@{\024bA\217\302\201Aff\246@\217\302\031A\327\2438A\303\365\320A=\332uD\270\036\025@H\341\332@q=\212\276\205\353\371@\024\256\203Aff\224A\303\365\360@=\n?A\205\353]A\037umD\354Q\006\302\000\000\372\301\205\353\325\301ff\007\302\366(\316\301\303\365\210\301\341zp\301ff\320\301\270\036\255\301\232\271kD\217\302\335\300=\n\"\302R\270\030\302\024\256\006\302\270\036#\302\315\314\002\302ff\300\301\024\256\257\301\205\353\003\302\232YnD\000\000(A\341zd@{\024\360\301\244p\335\301)\\\271\301q=\362\301\232\231\261\301\315\314X\301)\\7\301\244\260mD\303\365(\300\037\205\373@{\024n?\232\231\002\302\\\217\362\301\341z\316\301\024\256\003\302R\270\306\301\037\205\201\301\327\223kD33\007\301\244p1\301=\n\027\277\327\243\360\300ff$\302{\024\033\302=\n\t\302\341z%\302\366(\005\302\354\361jD\205\353!\300\024\256/\301\205\353Y\301\024\256G\300\315\314 \301\037\205.\30233%\302\366(\023\302\232\231/\302\256WoDR\270\214A\303\365pA\037\205\323@{\024~@\037\205gA\256G\361@\354Q\320\301\024\256\275\301\232\231\231\301R\250mD\024\256\327\300\232\231-A\270\036\005A\270\036\005\276\256G1\300)\\\367@\315\314L?\270\036\003\302\232\231\363\301\315\334oD\270\036\rA\270\036\005@)\\\235A\270\036\211A=\n\013A\232\231\301@ff\204A\205\353\031A\024\256\277\301\303EoD=\n\027\300R\270\316@)\\\217\276\341z\212A\341zlA\\\217\312@\366(l@=\ncA\354Q\350@\303eqD\000\000\010A\341z\304@)\\oA\037\205\003A\341z\316Aq=\272A\256GmA=\nCA\037\205\265AH\021nD\270\036U\301q=\232\300\217\302\345\300\205\353\321?33\243\300\n\327GA)\\\037A\256G\301?\327\243\220\277\037\325gD\037\205\307\301=\n\031\302{\024\356\301\341z\000\302ff\272\301\354Q\360\30133G\301\024\256o\301\244p\273\301\\\037kD\\\217RA\341z<\301\315\314\310\301\315\314\204\301\024\256\227\301q=\"\301=\n\207\301\217\3025?\303\365\350\277\217reD\232\231\265\301\327\243\030\301\205\353\t\30233?\30233\035\302\327\243&\302)\\\003\302\354Q\036\302\205\353\257\301\270.cD\303\365\020\301{\024\376\301\315\314\224\301\366(.\302\244pc\302\244pA\302H\341J\302\232\231\'\302\\\217B\302\315\254`D\341z \301R\270\230\301\366(\'\302=\n\345\301\256GV\302\256\307\205\302\\\217i\302\000\000s\302R\270O\302)\374cD\n\327SA\244pM@33\273\300ff\344\301q=v\301\354Q!\302\232\231V\302\232\2314\302=\n>\302)\254bD\000\000\250\300\024\256\377@\\\217\002\300\232\2311\30133\007\302\270\036\245\301\354Q6\302\232\231k\302\232\231I\302\303\245eDff>A\315\314\324@\270\036\237A\217\302\035A\315\314L?33\257\301\n\327\013\301R\270\006\302\000\000<\30233hD)\\#AH\341\260AH\341\206A\315\314\360A\\\217\240A\366(0A=\n;\301\366(\274?\217\302\273\301\303\205hD\270\036\245?\000\0008A33\273A33\221A\270\036\373AH\341\252A\315\314DAff&\301\327\2430@\037\365kD\n\327[A\341zpA\205\353\311A\\\217\024B\270\036\377A\037\2054Bff\014B\354Q\320A\217\302U@=\312lD\270\036U@\\\217\210AH\341\222A\\\217\344AH\341!BH\341\014B\n\327ABR\270\031B\303\365\352A\\\377nD\256G\rA\\\217BA33\317A\037\205\331A\232\231\025B33EB330B\366(eB=\n=B\341ZnD\341z$\300\354Q\310@\244p\031A\327\243\272A\303\365\304A\354Q\013B\205\353:B\205\353%BH\341ZB\232YqD\024\256?A\\\217\026A\205\353\221A\\\217\254Aq=\rBff\022Bq=;B\n\327jB\n\327UB\366\270rD\024\256\257@\217\302\213AffnA\n\327\275A\341z\330A33#B)\\(B33QBff\200B\232\trD)\\/\300\000\0000@\024\256kA\\\217BA\205\353\247A\\\217\302Aq=\030Bff\035Bq=FB\341:sD\327\243\230@\205\353\001@\327\243\360@\000\000\234A\244p\207A{\024\316AR\270\350A\354Q+B\341z0B\303\025uD\244p\355@=\nCA33\027A=\noA)\\\327A\315\314\302AR\270\004B=\n\022B\000\000IB\315\254mD\270\036\355\301\217\302\261\301\232\231\213\301\037\205\241\30133k\301{\024.\300\256G\251\300\\\217b@\n\327\333@3\363lD\232\2319\300\366(\002\302\303\365\310\301\315\314\242\301R\270\270\301\315\314\214\301\n\327\263\300=\n\003\301\n\327#?\303\205iD)\\[\301H\341\204\301\000\0009\302\354Q\033\302q=\010\30233\023\302\341z\372\301\327\243\232\30133\257\301\354akD{\024\356@\327\243\310\300R\270\022\301q=\033\302\270\036\373\301\303\365\324\301H\341\352\301\303\365\276\301q=>\301\000\240hD\341z0\301\217\302e\300ff\212\301\232\231\241\301)\\G\302\024\256)\302\232\231\026\302\\\217!\302\232\231\013\302\037\265hD\303\365\250>33+\301\327\243P\300\217\302\207\301\303\365\236\301=\nF\302)\\(\302\256G\025\302q= \302\366\230hD\256G\341\276\256G\341\275q=2\301\315\314l\300\256G\213\301\341z\242\301\315\314G\302\270\036*\302=\n\027\302\232\351fD\024\256\327\300\217\302\345\30033\333\300=\n\217\301=\n\'\30133\301\301ff\330\301\217\302b\302{\024E\302q\375gD\205\353\211@\037\205\033\300\024\2567\300\\\217\"\300\270\036Y\301\366(\304\300R\270\236\301\205\353\265\301\037\205Q\302\nWhD33\263?R\270\266@\n\327\203\277\366(\274\277\205\353\221\277R\270B\301)\\\227\300\037\205\223\301R\270\252\301\217\262gD\341z$\300\217\302\225\277\303\365H@fff\300\256G\201\300\244pm\300\n\327k\301\232\231\351\300{\024\250\301\232\271fD\303\365x\300R\270\316\300\205\353\241\300\000\000@\277\024\256\357\300\217\302\375\30033\363\300=\n\225\301=\n3\301\\\317bD\\\217z\301ff\234\301\303\365\260\301\217\302\245\301\256G\203\30133\271\301R\270\274\301{\024\272\301\366(\t\302\366\230dD\315\314\344@\366(\010\301ffF\301\037\205o\301\270\036Y\301\366(\024\301\000\000\200\301\037\205\203\301H\341\200\301\341\252fD\341z\004AH\341vA\037\205k\276\n\327\203\300{\024\326\300\256G\251\300H\341z\277=\n\367\300\\\217\002\301\024\216fDff\346\276\\\217\372@\024\256oA{\024.\277q=\222\300\341z\344\300\024\256\267\300=\n\267\277R\270\002\301q\275gD\024\256\227@\256G\211@\270\036IA\217\302\235A\205\353\201@{\024.>\232\231\031\300\000\000\200\277\n\327S@\270\276cD\024\256\177\301\n\3273\301=\n;\301q=Z\300)\\o@R\270>\301\303\365|\301=\n\223\301\n\327\207\301\341\252cDR\270\236\276\354Q\202\301\315\3148\301\000\000@\301{\024n\300\037\205[@\024\256C\301\303\365\200\301\037\205\225\301=\252bD\354Q\200\300q=\212\300ff\242\301\303\365x\301{\024\200\301)\\\367\300\341z\024\277\205\353\201\301=\n\241\301),gDq=\220A\354Q`A)\\[A\256G\021\300{\024\036@\256G\001@\315\314$A\232\231\213A\270\036\345?\000\300gD\n\327\023@R\270\242A\327\243\202A\366(\200A\n\327#=\303\365\230@\\\217\212@\217\302IA{\024\236A\354QfD=\n\267\300q=Z\300\205\353iA\217\302)A\315\314$A\217\302\265\300\327\243p\277\205\353\261\277\341z\334@\366\370dD\341z\254\300\217\3021\301\315\314\014\301\024\256\023A=\n\247@\270\036\235@\270\0361\301\\\217\312\300\303\365\330\300\327sdD\270\036\005\300=\n\357\300=\nS\301{\024.\301\315\314\344@\303\365H@\270\0365@ffR\301\\\217\006\301\217RfD)\\\357@\315\314\254@\n\327#<R\270\266\300\232\231Y\300{\024jA\205\353)A\303\365$A\244p\265\300{dhD\341z\004A\366(|AH\341ZA\327\243\004A\341z$@\366(\234@\256G\267A33\227AR\270\224A\037\325jD\366(\034A\354Q\220A\366(\314A\037\205\273Aff\220A\256GEAq=jA\024\256\002B\256G\345A\303UjDR\270\376\277\327\243\370@ff\200Aq=\274A\232\231\253A\341z\200A\244p%AffJA\244p\365A\315\034hDq=\016\301{\024.\301)\\\217\277\270\036\345@q=jA\303\365HA\244p\345@\232\231\271?\327\243p@\327\363gD\n\327#\277\341z\030\301\354Q8\301\256G\341\277\327\243\320@\000\000`AR\270>A\303\365\320@)\\O?\315\374iDq=\002A\000\000\360@\205\353\261\277\354QX\300\366(\314@\\\217jA\270\036\261A\341z\240AR\270jA\000\240gD33\027\301\024\256\247\277\232\231\371\277\244p-\301\256GM\301\341zD\300R\270\246@=\nKA\217\302)A\037EhD\270\036%@\n\327\333\300\\\217\242?\256G!?\366(\004\301\000\000$\301H\341\372\276\256G\371@\354QtA{\004iD)\\?@q=\262@\354Qx\300\354Q\210@\024\256g@\327\243\250\300\354Q\350\300\000\000 @\341z,A\303\305iD\256GA@\354Q\300@\244p\tA\366(\\\277\303\365\350@\341z\324@\000\000\020\300\024\256\207\300\327\243\260@\nGgD\024\256\037\301R\270\336\300{\024~\300\205\353\261\277\244p-\301\315\314,\300\217\302U\300\024\256C\301\037\205c\301\217\022fDq=\232\300\315\314l\301\341z<\301\327\243\014\301R\270\306\300\\\217z\301\327\243\360\300\\\217\002\301ff\210\301\000\300dD\256G\251\300\217\302!\301R\270\240\301\\\217\210\301\256Ga\301\000\0008\301\232\231\247\301\303\365L\30133W\301\327sfD\205\353\331@\\\217\302?33S\300\341zT\301\366($\301\327\243\350\300{\024\226\300q=b\301\000\000\300\300\037\345hD\354Q\034A\327\243\204A\327\2434A=\n\317@\327\243`\300H\341\372\276\000\000 @\\\217\242@\n\327\213\300\315\034iDR\270^?q=*A\232\231\213A\\\217BAH\341\352@\303\365(\300\\\217\302>\024\256W@ff\276@\354!hDH\341z\30033C\300=\n\327@\341zXA\n\327\003AH\341Z@\205\353\321\300\\\217b\300\315\314\014\277\024>fD\205\353\361\300\024\2567\301\217\302)\301=\nW\277=\n\277@{\024.?\341z\204\300\205\353a\301\232\2311\301\n7gD\303\365x@H\341j\300H\341\362\300=\n\327\30033C@\217\302\035Aq=\222@\000\000\200\276\024\256#\301\\\037lD=\n\235A\366(\274A)\\\177A\327\243@A\\\217NA\244p\265A\205\353\353A\232\231\301A=\n\233A\000`mD\354Q\240@\270\036\305Aq=\344A\217\302\247Aff\210A)\\\217A\037\205\335A\000\000\nB\024\256\351A\n\307oD\217\302\031A\205\353iA\000\000\tB\\\217\030B\327\243\364A\256G\325Aq=\334A33\025B\244p0BHQnDH\341\272\300\256Gq@\341z\014A\256G\343A33\001B\205\353\305A\\\217\246A\037\205\255A\024\256\373A\217roD\327\243\220@\303\365\250\277\327\243\004A\315\314TAR\270\003B\256G\023B{\024\352AR\270\312A\024\256\321A\205\353mD\037\205\303\300\037\205\313\277\217\302\355\300\037\205\013@{\024\346@\\\217\326A\024\256\365A33\271A\n\327\231Aq}rDq=\222AR\270BA\037\205\205A\232\231-A\024\256\243A\217\302\313Aff4B\303\365CBR\270%B\366\270tDH\341\016A\024\256\331A\315\314\250A\303\365\314Aq=\236A\270\036\353A\232\231\tB\270\036XB\024\256gB\000@tD\205\353\361\277\256G\341@\\\217\312A\024\256\231A\n\327\275A\270\036\217A\000\000\334A=\n\002B\\\217PBf&sD\315\314\214\300\256G\311\300\303\365(@)\\\247A\303\365lA\327\243\232A\n\327WA\315\314\270AH\341\340A\000PwD33\205A\000\000DA\217\302%A\354Q\232A\256G\026B\024\256\373A\205\353\017B\270\036\361A\000\000\037B\037\365vD\217\302\265\277\024\256sA\256G-A=\n\017A\303\365\216A\232\231\020B\354Q\360Aq=\nB\217\302\345A\205kwD\315\314\354?\366(\334>\327\243\210AH\341JA\327\243,A\217\302\235A\000\000\030B\270\036\377A\327\243\021B\000\000xD\341z\024@\244p\205@\000\0000@33\233A\000\000pA\217\302QA\354Q\260A\256G!B\n\327\010B\205\013xD\354Q8>\000\000 @33\213@\037\205;@\327\243\234AH\341rA\327\243TA\217\302\261A\000\000\"B\3273xD\256G!?)\\O?\354QH@)\\\237@\n\327c@\024\256\241A\303\365|AR\270^A\315\314\266A\315\034vD\217\302\005\301)\\\367\300\232\231\361\300)\\\247\300\354QX\300\232\231\231\300\232\231=Aff\356@\205\353\261@\315\014wD\000\000p@\037\205\223\300R\270~\30033s\300\244p\275\277\244p\275>ff\206\277\232\231yA333A\315\034rD\000\000\236\301\000\000\200\301H\341\302\301\n\327\275\301ff\274\301\n\327\251\301=\n\233\301ff\246\301\315\314\204\300\217\242rD\217\302\005@\256G\215\301\\\217^\301\366(\262\301\270\036\255\301\024\256\253\301\270\036\231\301\354Q\212\301\024\256\225\301\037UsD\\\2172@\366(\234@\205\353m\301\205\3531\301\n\327\233\301\315\314\226\301)\\\225\301\315\314\202\301\000\000h\301\327#sD\270\036E\277\256G\001@\037\205\203@q=z\301q=>\301\000\000\242\301\303\365\234\301\037\205\233\301\303\365\210\301H\321~D\n\327:B\217\3027B\205\353BB\256GKB\\\217\370A\256G\013B\024\256\323AR\270\330A\366(\332A\nG~Dq=\n\300332B\270\036/B\256G:B\327\243BB\256G\347A\327\243\002Bff\302A\244p\307A\366(~D\327\243\360\276\354Q(\300\354Q0Bq=-Bff8B\217\302@B\037\205\343A\217\302\000B\327\243\276A\0000\200D\217\302\rAq=\006A)\\\307@\217\302SB\024\256PB\n\327[B33dB33\025B33$B\2172\200D\n\327\243==\n\017A\037\205\007A\205\353\311@{\024TB\000\000QB\366(\\B\037\205dB\037\205\025B\\\017\201D\315\314\334@)\\\337@\244p}A\205\353uA)\\SA\024\256oB\232\231lB\217\302wB\\\017\200B\315<\200D\\\217\322\300\n\327\243>\315\314\314>\366(\024A\327\243\014A\366(\324@)\\UB\256GRB\244p]B\217*\201D\217\302\355@\232\231Y?\000\000\370@\\\217\372@\037\205\205A\217\302\201A\303\365`A{\024sB\000\000pBR\350\200D\341z\004\300\037\205\253@\366(\234\277\217\302\265@\354Q\270@\205\353iAffbA\n\327?A\315\314jB=\202\200D\366(L\300\354Q\250\300H\341\n@\270\036\215\300)\\\037@\341z$@H\3416A)\\/A\315\314\014A\0008\200D\341z\024\300\354Q\260\300\\\217\362\300\232\231\031\276)\\\327\300{\024.>\000\000\200>\217\302\021Aq=\nA\000@\200D\000\000\200>\341z\004\300\354Q\250\300\\\217\352\300\315\314\314=)\\\317\300=\n\327>\000\000\000?\217\302\025A=:\177DH\341\242\300H\341\232\300\270\036\345\300\232\231%\301R\270F\301\024\256\237\300\270\0369\301\244p\225\300H\341\222\300\000\020\201D\244p9A\000\000\320@\000\000\330@\217\302\215@R\270\236?\341zT\27733\323@\n\327\243<\244p\335@\303\305~D\\\217V\301\303\365\350\277\270\036\335\300\270\036\325\300\024\256\017\301R\270B\301\n\327c\301\205\353\331\300q=V\301R\230~D\217\3025\277\205\353a\301\205\353!\300\n\327\363\300\n\327\353\300=\n\033\301{\024N\30133o\301\327\243\360\300\256O\201DH\341\200AffvAR\270\376?\256GYA\n\327\007A\n\327\013A\244p\315@R\270N@\341z\224?\270~\201D\366(\274?\327\243\214A\303\365\206A\244p]@\315\314pA)\\\037A)\\#A\341z\374@ff\226@\205\023\202D\315\314\224@\n\327\303@\n\327\261A\366(\254A\217\302\001A\232\231\235A\217\302iA\217\302mA\327\243HA\270\306\203D\232\231YA\000\000\222A\217\302\235A\354Q\017B\341z\014B\024\256\255A33\005B\024\256\341A\024\256\343A\037\355\202D\232\231\331\300\232\231\331@337AR\270NAq=\350A\\\217\342A\\\217nA\000\000\324A\256G\253A=j\177D\000\000\316\30133\002\302\232\231\227\301\315\314d\301\256GM\301\205\353Q@\341z$@\244p-\301\000\000@?=Z\177D\000\000\200\276\000\000\320\30133\003\302\232\231\231\301\315\314h\301\256GQ\301\205\353A@\341z\024@\244p1\301\341\212|D\n\3273\301\n\3277\301\303\365\024\302\366(0\302\037\205\363\301\354Q\316\301\\\217\302\301)\\\003\301R\270\016\301\205\253yD\n\3277\301\n\327\265\301\n\327\267\301\205\353B\302\270\036^\302R\270\'\302\270\036\025\302q=\017\302\232\231\235\301\232I{D=\n\317@\327\243\240\300{\024\202\301{\024\204\301=\n)\302q=D\302\n\327\r\302\341z\366\301R\270\352\301R\230~D\024\256SA\232\231\235A)\\\003A\205\353A\300\205\353Q\300q=\350\301\354Q\017\302\n\327\261\301\327\243\214\301\303\335\200D\315\314HAq=\316A\000\000\001B{\024\246A\354Q\030A\354Q\024A\n\327\203\301q=\272\301H\341\032\301\232\241\201D\n\327\303@)\\\225A33\377A\341z\031B=\n\327Aq=zAq=vA\217\302%\301\256G\211\3013#\202D\232\231\201@R\270\"A\217\302\265A\315\314\017B\024\256)B\244p\367A\037\205\235A\037\205\233A\205\353\311\300\\\017\202DR\270\036\277\037\205[@\315\314\030A\315\314\260A\354Q\rB33\'B\341z\362A\\\217\230A\\\217\226A\205\023\202D\270\036\005>H\341\372\276\n\327c@H\341\032A\n\327\261A\n\327\rBR\270\'B\037\205\363A\232\231\231A\315$\203D\327\243\010AR\270\nA\315\314\000A\232\231AA\217\302\221A\366(\366A\000\0000BH\341IB\205\353\033B\024\006\205D\327\243pA\327\243\274A\024\256\275AR\270\270A\270\036\331A=\n\005Bq=7B\366(lB\037\005\203B{\244\206D33OA\205\353\337A\270\036\022B\327\243\022B\366(\020B)\\ B\n\3278B=\nkB\341\372\217B\303\325\205DR\270\316\300\024\256\317@q=\254A\\\217\360A\232\231\361A\327\243\354A\037\205\006B\000\000\037B33QBf\036\205D)\\\267\300=\nC\301\\\217B?\315\314|AR\270\302A\217\302\303A\315\314\276A33\337A{\024\010B)\364\204D\303\365\250\277\232\231\341\300\366(X\301)\\\017\277\024\256gA\366(\270A33\271Aq=\264A\327\243\324A\327\203\204D\327\243`\300\\\217\232\300\303\365(\301\366(\210\301q=\202\300\037\205/A{\024\234A\270\036\235A\366(\230A\256\027\204D\354QX\300\341z\334\300)\\\003\301=\n_\30133\243\301ff\356\300H\341\362@=\n\201A{\024\202A\327+\203D\n\327\353\300\000\000,\301\366(d\301\256Gy\301\341z\252\301\366(\336\301\270\036m\301\256Ga>\366(\014A{\004\203D\244p\235\277\232\231\t\301\024\256?\301\n\327w\301\341z\206\301\354Q\264\301\000\000\350\301ff\200\301\256G\201\277\315\314\202DR\270\336\277{\024>\300\244p%\301\037\205[\301\n\327\211\301ff\224\301q=\302\301\205\353\365\301\354Q\216\301\000 \205D\315\314\224AH\341\206A{\024zA\366(\004A\366(\234@)\\\257?\315\314L=\217\302\265\300q=B\301\\O\207D\n\327\213A\354Q\020B)\\\tB\244p\004B\205\353\315AH\341\262A\315\314\226Aq=\214A\315\314<A\315\314\207DH\341z@33\253A\000\000 B=\n\031B\270\036\024B\256G\355Aq=\322A\366(\266A\232\231\253A\\\307\211D\256G}A\000\000\236A\205\353\024B\354Q_B)\\XB\244pSB\303\3655B\244p(Bff\032B\024^\212DR\270\226@\354Q\244A\024\256\303A\217\302\'B\366(rB33kB\256GfB\315\314HB\256G;BRH\212D{\024.\277\303\365\200@H\341\236Aq=\276A=\n%B\244poB\341zhB\\\217cB{\024FB\205\323\211D\232\231i\300\\\217\212\300\\\217\302>\024\256\201A=\n\241A\244p\026B\n\327`BH\341YB\303\365TB\2440\212Dq=:@\244p=\277\217\302\265\277\\\217R@\303\365\230A\354Q\270A{\024\"B\341zlB\037\205eBRH\214D\205\353\205A33\235A\000\000\200A\270\036uAq=\240A\244p\017B\270\036\037B=\neBR\270\227BR8\214D\000\000\000\277\205\353\201A33\231A\000\000xA\270\036mAq=\234A\244p\rB\270\036\035B=\ncB\\\177\215D\037\205#A\037\205\033A\024\256\323A\303\365\352A\217\302\315A\354Q\310A\000\000\356A\354Q6B\000\000FBH9\215D\366(\014\300\341z\000A\303\365\360@\366(\302A\244p\331Aq=\274A\315\314\266A\341z\334A\\\217-BR0\216D=\n\367@\303\365\260@\000\000|A\000\000tA\205\353\377A\232\231\013B\000\000\372A\\\217\364A\270\036\rB\354y\220Dff\222A\366(\320A\327\243\276A33\010B33\006B\366(IB\315\314TB33FB\341zCB\n?\222D\\\217bA\n\327\001BR\270 B\303\365\027B\n\327@B\n\327>Bf\346\200BR\270\206B\n\327~B\256\207\221D)\\\267\300H\341\006A\n\327\325A\315\314\tB=\n\001B\205\353)B\205\353\'BH\341jB\037\205vB\327K\222D\366(\304@\315\314\314>\303\365hA\244p\003B\354Q\"B\\\217\031B\244pBB\244p@B3\263\201B\341\372\222D=\n\257@\232\2319A\n\327\273@q=\240A\354Q\031B338B\244p/B\354QXB\354QVB\217\362\222D\270\036\205\276R\270\246@\244p5A\037\205\263@\366(\236A\256G\030B\366(7Bff.B\256GWB\024v\221Dq=>\301ffB\301\217\302\325\300\315\314\014\277\303\365\310\300\366(\374@\244p\321A\232\231\007B\024\256\375A\024>\222D\000\000\310@\341z\264\300\315\314\274\300\366(\334\276ff\266@\217\302\365\274{\024bAR\270\001B\232\231 Bf\366\221D)\\\017\300\354Q\200@\366(\374\300q=\002\301H\341*\300\244p]@\256G\021\300q=>A\037\205\361A\315\374\212D33_\302\366(h\302\366(O\302R\270~\302\217\302\177\302H\341i\302)\\Q\302\256Gh\302\327\243/\3023\013\205D33>\3023\263\316\302\024.\323\302\024\256\306\302\303u\336\302\341\372\336\302=\n\324\302\256\307\307\302q=\323\3023\023\207D\000\000\202Aff\372\30133\256\302\024\256\262\302\024.\246\302\303\365\275\302\341z\276\302=\212\263\302\256G\247\302\217\022\203D{\024\000\302\354Q|\301\256G}\302q=\356\302R\270\362\302R8\346\302\000\000\376\302\037\205\376\302{\224\363\302\000@zD\354Q>\30233\237\302ff}\302\315\314\335\3023\263&\303\244\360(\303\244\260\"\303{\224.\303\n\327.\303)|\201D\037\205\013B33K\301H\3412\302\217\302\343\301=\n\230\302\354\321\003\303\\\017\006\303\270\236\377\3023\263\013\303\024~\203D\341z\200A\217\302KB=\nW@\256G\345\301\\\217F\301\n\327o\302\037\205\347\302\000\000\354\302\000\200\337\3023\203\203D\n\327#>\217\302\201AffLB\256Ga@\000\000\344\301\000\000D\30133o\30233\347\302\024\256\353\302f\266\205D\315\314\214A{\024\216A\256G\007Bff\211B\303\365\250Aff.\30133\253@\315\314(\302\000\000\304\302\2440\210D\\\217\236A\024\256\025B\354Q\026B\\\217VB=\n\261B\217\302#BR\270\016A)\\\311A=\n\263\301\232\331\210D\303\365\250@\315\314\310A\315\314*B\244p+B\024\256kB\232\231\273BH\3418B33cA\232\231\363A\270\316\211D\270\036\365@=\nOA=\n\003B\244pIB{\024JB\366(\205B\205\353\312B\037\205WBH\341\256A\341\352\212D{\024\016A\354Q\204A\\\217\256A\\\217&B\303\365lB\232\231mB\205\353\226B\024\256\334B=\n{B)T\212DR\270\226\300\244p\205@\256G=AH\341\210AR\270\023B\270\036ZB\217\302ZB\000\200\215B\217B\323BH\331\214D\256G\241A33wA\327\243\302A\205\353\377A{\024\025B)\\dBHa\225B3\263\225B\354\321\265B\000\370\216D\024\256\207A\341z\024B\327\243\001B\366(%B\315\314CB\205\353XB\232\031\224B\315L\267B\270\236\267BH\311\213D\024\256\313\301\000\000\010\301\\\217:Aff\336@\256G}A\205\353\273A\366(\346A)\\BBHa\204B\\\027\212D\303\365X\301{\024\034\302\341z\260\30133\363\277\037\205\323\300\256G\021@H\341\036A)\\sA\270\036\014B\244\260\205D\n\327\014\302{\024C\302\303u\224\302{\024e\302\244p\024\302\256G\'\302\217\302\003\302q=\312\301\000\000\240\301q\335\206Dff\026A\341z\316\301\341z\035\302\366\250\201\302\341z?\302\024\256\335\301\024\256\001\302\354Q\274\301{\024~\301\303]\210D\366(@A\256G\253A\315\314\\\301H\341\332\301\256GS\302\244p\017\30233{\301\256G\243\301\341z8\301\354\341\210D\366(\204@\270\036\201A\354Q\314AR\270\032\301\n\327\271\301\217\302B\302\n\327\375\301\270\0369\301q=\202\301{\264\212D\256GiA\024\256\225A\217\302\365A\341z B\270\036\235@ff\n\301\244p\010\30233\211\301\327\243@@\000\300\214DH\341\202A\037\205\367A\256G\014B\354Q<B\205\353aB\366(\252AR\270\366@\000\000\216\301q=J\277H\001\221D\366(\010B\232\231IB\303\365\201BR8\212Bq=\242B=\n\265Bq=]B\000\000\'B\354Q\202A\205\253\310B\217v\204\304H5\200\304\205S|\304f\256x\304\024\246w\304q\245t\304\327Kr\304H\031{\304\037}~\304\270\236\330B33\377@\\w\203\304)l~\304\037Uz\304\000\260v\304\256\247u\304\n\247r\304qMp\304\341\032y\304\315\314\332B\037\205\213?=\n\021A{T\203\304f&~\304\\\017z\304=jv\304\354au\304Har\304\256\007p\304q\275\321B\303\365\220\300\366(\\\300\270\036\221@q\345\203\304RH\177\304H1{\304)\214w\304\327\203v\3043\203s\304\000\000\324B\327\243\220?\232\231Y\300\n\327\023\300\256G\265@H\301\203\304\000\000\177\304\366\350z\304\327Cw\304\205;v\304\354\321\327B\341z\364?\\\217B@R\270\276\277\315\314\314\276ff\362@)\204\203\304\303\205~\304\270nz\304\232\311v\304\315L\324B\256G\341\277\232\231\031>\n\327\243?\000\000P\300q=\n\300{\024\272@{\274\203\304f\366~\304\\\337z\304\037\005\314B\341z\204\300\315\314\274\300)\\\177\300=\n7\300\341z\354\300\232\231\311\300ff\326?\366@\204\304\\\377\177\304q\275\314B\354Q\270>\205\353q\300\256G\261\300\354Qh\300\000\000 \300\303\365\340\300{\024\276\300q=\002@q5\204\304\000\200\310B\024\256\007\300\256G\341\277\315\314\274\300\270\036\365\300\000\000\270\300\n\327\223\300ff\022\301\303\365\000\301{\024\256\275\037\005\313B\256G\241?\366(\\\277\000\000\000\277\341z\224\300\315\314\314\300\024\256\217\300=\nW\300\341z\374\300\232\231\331\300\037\005\310B\000\000\300\277\217\302u\276=\n\027\300\000\000\000\300\341z\304\300\315\314\374\300\024\256\277\300\037\205\233\300q=\026\301\366(\313B\303\365\310?)\\\217=q=\252?q=J\277\366(\334\276q=\222\300\\\217\312\300\244p\215\300\\\217R\300\232\231\314B\354Q8?\\\217\022@q=J?33\003@)\\\217\275\341z\224>ffv\300\037\205\263\300\315\314l\300\270\236\314B\n\327#<H\341:?33\023@\315\314L?\n\327\003@\217\302u\275\232\231\231>\217\302u\30033\263\300\366\250\322B\256GA@\205\353A@\000\000p@q=\252@\341zt@\\\217\242@\244p=@\341zT@\205\353Q\277\000\000\327BH\341\n@{\024\246@ff\246@\244p\275@\024\256\357@\024\256\277@\000\000\350@\366(\244@\024\256\257@\341\372\336B)\\\177@\270\036\305@H\341\022A=\n\023A\\\217\036A\024\2567A\024\256\037A\n\3273A\205\353\021A\000\000\340B\\\217\002?\000\000\220@\244p\325@=\n\033A33\033AR\270&A\n\327?A\n\327\'A\000\000<A\244\360\343B\366(\374?R\270\036@=\n\317@q=\nA\\\217:AR\270:Aq=FA)\\_A)\\GA\341\372\352B\256Ga@\024\256\257@\000\000\300@\n\327\037A\\\217BAH\341rA=\nsA\\\217~A\n\327\213AR\270\356B)\\\357?\341z\254@\037\205\353@\n\327\373@\217\302=A\341z`Aff\210A\341z\210Aq=\216A\024\256\353B\\\217\302\27733\263>\024\256w@H\341\272@33\313@\244p%A\366(HA\341zxA\327\243xA\217\302\354Bq=\n?H\341z\277\n\327c?\270\036\215@\366(\314@\341z\334@{\024.A\315\314PA\\\217\200A\327\243\361B\366(\034@R\270>@H\341\272?\270\036U@33\333@\270\036\rA\256G\025A\270\036UA\n\327wA\366\250\357B\244p}\277\232\231\271?R\270\376?\327\243\360>\217\302\025@\037\205\273@\\\217\372@\244p\005A\256GEA\037\205\354B\303\365\310\277\n\327#\300\217\302\365\275=\n\327>\315\314\214\277\270\036E?\256G\211@\354Q\310@\327\243\330@R\270\375B\232\231\tA\303\365\340@\256G\301@\024\256\007A\354Q\020A\000\000\360@\205\353\025Aq=NA\217\302mA{\024\003C=\n\207@\270\036MA\000\0004A\366($A33KA\n\327SA\037\205;A\244pYAH\341\210A\232\231\001C\244p\275\277)\\/@\244p5A\354Q\034A\341z\014A\037\2053A\366(<A\n\327#A\217\302AA{\224\004CR\270>@\000\000\300?=\n\267@\270\036eA\000\000LA\366(<A33cA\n\327kA\037\205SA\\\017\007CR\270\036@R\270\256@R\270~@33\003Aff\206A\024\256sA\n\327cA\244p\205A\217\302\211A\270^\nC\n\327S@\256G\271@\354Q\014A\256G\351@\366(8AH\341\240A\354Q\224Aff\214A\205\353\237A{\024\tC\270\036\245\277\256G\001@\000\000\220@)\\\357@\000\000\300@\037\205#A\\\217\226A\000\000\212A{\024\202A\232\331\nC\\\217\342?\217\302\365>\\\217r@\327\243\310@\000\000\024A\327\243\370@\n\327?AR\270\244A\366(\230A\341\272\tC)\\\217\277ff&?\n\327#\277H\341*@\315\314\244@{\024\002A\315\314\324@\205\353-A\217\302\233A\217B\007C{\024\036\300\217\302e\300\303\365\350\277=\nG\300\315\314L>\037\205+@\270\036\265@\217\302\205@ff\006Aff\tC\303\365\010@\303\365\250\276\232\231\271\277\n\327\243>\354Qx\277\217\302\025@q=\232@\232\231\371@q=\312@f\346\014C\000\000`@\341z\264@H\341J@33\003@\341zt@\205\353!@H\341\272@\270\036\005A\315\3144A\000\000\016C\315\314\214?33\223@\024\256\327@\327\243\210@\232\231I@\244p\235@\354Qh@{\024\336@R\270\026A)\034\020C=\n\007@\244pM@R\270\326@\232\231\rA\366(\314@\354Q\250@\303\365\340@\024\256\267@\315\314\020A\366(\025C\232\231\241@\270\036\345@\366(\004A\366(<Aff^AH\3416A\303\365$A\256GAA\327\243,A\244\360\023C\366(\234\277\270\036u@{\024\276@\256G\341@\327\243(AH\341JA)\\#A\244p\021A\217\302-Aq}\014Cff\356\300R\270\n\301\024\256g\300\256G\301\277\205\353\321\276\217\302E@)\\\247@\327\2430@\205\353\321?Ha\025Cq=\016A\354Q\270?\256Ga>\327\243\250@\366(\354@\024\256\007A\024\256?A\205\353aAff:A\024n,Cff\270A\037\205\377A\205\353\303A\366(\272A\\\217\342A\244p\363Aq=\374A\270\036\014B\024\256\024Bff;C\037\205oA{\024\030B\327\243;B\n\327\035B\303\365\030B\366(-B\232\2315B\000\000:B\000\000HB\315\3145C33\263\300\205\353\025A\024\256\001Bq=%B\244p\007B\\\217\002B\217\302\026B33\037B\232\231#BR\3709C\244p\205@=\n\267\277\327\243XA)\\\022B\205\3535B\270\036\030Bq=\023B\244p\'BH\341/B\315LAC\\\217\352@\000\0008A\315\314\274@\303\365\246A\024\256/Bq=SB\244p5B\\\2170B\217\302DB\327\243>Cq=*\300\244p\225@\244p\rA)\\O@\024\256\221A=\n%B\232\231HB\315\314*B\205\353%B\256\007DC\341z\254@R\270.@\303\365 A\024\256cA{\024\nA\315\314\274A\232\231:B\366(^B)\\@B\270\336BC\341z\224\277)\\\207@\303\365\310?ff\016A\270\036QA=\n\357@\037\205\263A\303\3655B\037\205YB\205\253?C\315\314L\300\037\205\213\300\n\327\203?\327\243\320\277ff\266@\205\353\035A\327\243\210@\205\353\231A\366()B3\2638C=\n\337\300R\270\"\301\256G5\301{\024\276\300\232\231\t\301\\\217\242\277\232\2319@\315\314,\300\354QDA\232Y)C\232\231u\301\\\217\262\301\366(\314\301\244p\325\301\354Q\252\301\232\231\277\301\303\365\204\30133G\301ff\220\301\315\214,C\315\314L@ffB\301\303\365\230\301\\\217\262\301\n\327\273\301R\270\220\301\000\000\246\301R\270V\301\000\000\024\3013\263(Cffv\300ff&\277\000\000\200\301\217\302\267\301)\\\321\301\327\243\332\301\037\205\257\301\315\314\304\301\366(\212\301)\334\'C=\nW\277{\024\226\300R\270\276\277R\270\206\301\341z\276\301{\024\330\301)\\\341\301q=\266\301\037\205\313\301\037\0057C\\\217rA\270\036eA\037\205\'AR\270ZA=\n\327\277ff\n\301\232\231=\301\366(P\301\n\327\363\300\000\0006C\\\217\202\277q=bA\315\314TA33\027AffJA\315\314,\300R\270\032\301\205\353M\301\341z`\301\270\3368C\024\2567@\315\314\354?{\024\210A)\\\201A\270\036EA\354QxA{\024.>\232\231\331\300\000\000 \301\205\213,C33E\301\256G\027\301\232\231\'\301\205\353\225@{\024v@\n\327\243\273\341zL@\341zB\301\000\000\231\301\000\200,C\354Q8\275\205\353E\301\000\000\030\301\354Q(\301\341z\224@33s@\315\314L\275\232\231I@33C\301=\212\'CR\270\236\300\366(\240\300\327\243\212\301)\\g\301\024\256w\301\n\327\243\276\341z\224\277\354Q\240\300\024\256\347\277ff)C{\024\356?ffF\300\256GI\300\037\205w\301\232\231I\301\205\353Y\301\270\036\305?333?\232\231I\300\232\031%C\232\231\211\300\366(\034\300\315\314\354\300q=\356\300\366(\236\30133\207\301)\\\217\301\327\2430\300fff\300\037\205\'CH\341\032@\327\243\360\277\n\327\243\274)\\\237\300\315\314\240\300\315\314\212\301\024\256g\301\000\000x\301{\024\256\276\217\302.C\024\256\347@\\\217\032A\037\205\253@=\n\347@\327\243\020@\217\302\r@\217\302!\301\024\256\347\300\366(\004\301\327c3C\366(\224@\205\353=A\327\243dA\n\327\037A\232\231=A\341z\334@=\n\333@)\\\257\300=\n\'\300\315\0145C\341z\324?\256G\311@\341zXA33\177Aff:A\366(XA\315\314\010A{\024\010A\341zt\300\341\3725C{\024n?\217\302%@=\n\347@)\\gA=\n\207A\256GIA=\ngA\024\256\027A\303\365\026A\303\3653C\256G\001\300\037\205\213\277\205\353\021?ff\246@=\nGA\217\302mA\303\365(AR\270FAR\270\356@ff3C)\\\017\277\270\036%\30033\323\277\n\327#<\341z\224@{\024>A\315\314dA\000\000 A\217\302=Aff4C\000\000\200?\256G\341>q=\312\277ff&\277\256G\201?\341z\264@{\024NA\315\314tA\000\0000A=J0C\037\205\203\300=\nG\300H\341j\300{\024\266\300\354Q\230\300ffF\300\n\327\303?\354Q\014A=\n3A\024n+C\037\205\233\300\037\205\017\301=\n\377\300\341z\010\301\315\314(\301\205\353\031\301R\270\376\300\270\036U\300q=z@\341\372)C\232\231\271\277\205\353\311\300R\270&\301R\270\026\301\024\256\037\301\000\000@\301\270\0361\301\\\217\026\301\303\365\230\300\024n-C\315\314\\@\000\000\000@=\n7\300=\n\337\300=\n\277\300\303\365\320\300\315\314\010\301\n\327\363\300R\270\276\300f\246+C\n\327\343\277\217\302\325?\256Ga>\341z\224\300\000\000\014\301\000\000\370\300\303\365\004\301\256G%\301ff\026\3013s*C\232\231\231\277R\270>\300\327\243\360>H\341z\277H\341\272\30033\037\30133\017\301\366(\030\301\341z8\301\244\2602C\n\327\003A\256G\341@\354Q\250@)\\\013A\354Q\350@\232\231\031@H\341\332\277\217\3025\277\\\217\242\277\256\3073C\037\205\213?\256G\025A{\024\002A33\313@\315\314\034A\232\231\005A)\\_@R\270\036\277\\\217\302>Rx0C\n\327S\300{\024\016\300\327\243\300@q=\232@\\\217B@\024\256\317@\256G\241@\354Q8>\037\205{\300{\0244C=\ng@\232\231\231>\205\353\261?{\024\032AH\341\006A\315\314\324@\232\231!Aff\nA\\\217r@\037\0059C{\024\236@\315\314\010A\024\256\247@\\\217\312@\270\036iA\205\353UA\244p9A\327\243pA\244pYA\000\3007C\\\217\242\277H\341j@\303\365\350@{\024~@\205\353\241@\315\314TA\232\231AA\270\036%A\354Q\\A\315L:C33#@\n\327\243?=\n\307@\256G\035A\327\243\320@\037\205\363@\232\231}AffjA\205\353MAf\346;C\315\314\314?\315\314\204@\354Q8@q=\372@H\3416A\205\353\001A)\\\023A\232\231\213A\000\000\202A\366\350?C\354Q\200@\037\205\263@\\\217\002A\341z\334@\256G=A=\nwA{\024BA\037\205SA\024\256\253A\217\302@C\232\231Y?\037\205\233@R\270\316@\366(\020A\024\256\367@H\341JA\354Q\202A\024\256OA\270\036aAf\346@C)\\\017>\244p}?\000\000\240@33\323@ff\022A\366(\374@\270\036MA\244p\203A\205\353QA\232\231ECff\226@H\341\232@{\024\266@33\033A\315\3144A\232\231]A\256GIA\366(\214A=\n\251A=\312@C\205\353\231\300\256G\341\275\217\302\365<\256Ga?\341z\234@\024\256\317@\327\243\020A\327\243\370@)\\KA\303\265JCR\270\036A\037\205\243@\303\365\034A33\037A\315\314,A\303\365lA\256G\203A\024\256\227A\037\205\215A\000\200BC)\\\003\301H\341\332?ffF\300\315\314\314?R\270\336?\217\302%@33\323@33\003A\000\000,A\217\202AC\244p}\27733\023\301\354Q8?H\341\202\300\366(\034?\000\000@?\315\314\314?\037\205\263@R\270\346@\315\214<CR\270\236\300ff\276\300\\\217b\301\024\256\207\300\315\314\020\30133\213\300R\270\206\300=\nW\300ff&?\232\331AC\232\231\251@{\024\256>ff&\277\217\302\r\301\024\256\207?\000\000p\30033s?\037\205\213?\354Q\370?\\\017CCH\341\232?\354Q\320@ff\306?)\\\017?\315\314\364\300\256G\021@\\\217\"\300q=\n@33\023@=\212AC\\\217\302\277R\270\236\276\024\256\237@\217\302\365<\217\302u\277R\270\022\301\000\000@?\205\353\201\300\n\327#?HaCC\037\205\353?\n\327\243>\n\327\303?\\\217\332@)\\\357?\256Ga?\\\217\352\300\217\302%@{\024\016\300{TCC\315\314L\275\270\036\345?q=\212>\244p\275?\303\365\330@\303\365\350?\341zT?\366(\354\300\\\217\"@R\370GC\341z\224@H\341\222@\217\302\315@\270\036\235@\n\327\303@R\2706AR\270\316@=\n\257@)\\/\300f\346KC\037\205{@\270\036\tA\354Q\010A\217\302%A\244p\rA\315\314 A\232\231uAq=&Aff\026A\315LEC33\323\300H\341*\300\366(\374?\217\302\365?\327\243p@)\\\017@\315\314\\@\000\000\014A\\\217r@\205\353AC\354QX\300\024\256\037\301\232\231\301\300\341z\264\277H\341\272\277\\\217\302>\205\353\221\277)\\\217=\n\327\253@\256G<C\341z\264\300\354Q\020\301\205\353y\301=\n;\301\232\231\341\30033\343\300\354Q\250\300\303\365\330\300q=\262\300R\2704C\205\353\361\30033S\301\327\243\204\301\244p\271\301\000\000\232\301\217\302i\301\\\217j\301\270\036M\301\244pe\301\270\0361Cfff\300\\\2172\301ff\206\301\244p\241\301q=\326\301\315\314\266\301\024\256\221\301{\024\222\301)\\\203\301q==C\205\353AA\354Q\010A\217\302u?\217\302\225\300\303\365\000\301\\\217j\301\024\256+\301H\341\302\300\341z\304\300{\024<C\341z\224\277)\\/A\037\205\353@\315\314L\276H\341\272\300\037\205\023\301\270\036}\301q=>\301\000\000\350\300\nW>C\327\243\020@\315\314\214?\037\205SA\205\353\031A\n\327\003@\270\036e\300R\270\336\300\303\365X\301{\024\032\301\270\236CC\303\365\250@\256G\361@\366(\314@\000\000\224AffnAH\341\352@\232\231\331?=\n\327\277\341z\004\301f\346?C{\024n\300\024\256\307?\341zt@q=*@\341zlAH\3412A\024\256g@\256G\001\300\315\314\254\300\303\365MC\303\365`A\244p%A\205\353yA=\n\217A\217\302\205AR\270\346A\205\353\311A\244p\215A\327\243@A)\334RC\315\314\234@\024\256\227A\n\327sA\366(\244Aq=\266A\303\365\254A\303\365\006B\270\036\361A\327\243\264A)\\LC\000\000\320\300\315\314\314\277)\\GA\n\327\013A\354Q`Aq=\202A\205\353qA\205\353\331A\270\036\275A\256\007DC\256G\005\301\256Gm\301H\341\036\301\366(\204@\205\353\321>{\024\266@ff\376@\256G\331@\256G\227A\327\243FC=\n\'@=\n\267\300\037\205C\301q=\352\300\024\256\327@\256GA@\315\314\004A\303\365(Aff\026A{\224?C\205\353\341\300ff\216\300\341zL\301q=\232\301{\024f\301\n\327\243\276\256G\201\300R\270\236?\000\000`@\341\372;Cfff\300\\\217*\301\315\314\000\301=\n\203\301=\n\267\301\n\327\217\301H\341z\300\341z\364\300=\n\027\300ff;C\341z\024\277\217\302\205\300\n\3273\301{\024\n\301\024\256\207\301\024\256\273\301\341z\224\301\000\000\220\300\037\205\003\301q\375@CH\341\262@\354Q\240@\341z\264?\315\314\264\300\\\217B\300\205\3535\301\303\365\216\301\037\205O\301\037\205\213?\341:CC)\\\017@\\\217\372@\000\000\350@\232\231i@q=Z\300\315\314L\277{\024\022\301{\024z\301\024\256+\301\366hFC\037\205K@\244p\255@\366(0AH\341&A\\\217\332@\037\205k\276\354Q\030@ff\276\30033G\301f\346EC\\\217\002\277H\341*@\270\036\235@\000\000(AR\270\036Aq=\312@\244p=\277)\\\357?R\270\316\3003\363EC\315\314L=\037\205\353\276{\024.@R\270\236@\315\314(A\037\205\037A\n\327\313@\327\2430\277\217\302\365?\270^?C\\\217\322\300\303\365\320\300\256G\341\300=\nw\300)\\\317\277{\024~@\303\365X@=\nW\276\327\243\350\3003\363AC\270\036%@\000\000\200\300\315\314|\300R\270\216\300\n\327\243\277\217\302u?\232\231\321@=\n\277@\024\256\027@\327\343<C\205\353\241\300R\270\036\300\303\365\020\301\366(\020\301\354Q\030\301H\341\312\30033\203\300R\270\276?\303\365h?\270\3369C\256GA\300\256G\001\301\000\000\260\300\256GA\301\341z@\301\327\243H\301\217\302\025\301\n\327\343\300\n\327\303\277q\375;C\024\256\007@fff\277R\270\276\300\354QX\300)\\\037\301\\\217\036\301R\270&\301\024\256\347\300\000\000\240\300\\\017:C=\n\367\277\\\217B>\270\0365\300\341z\374\300\205\353\251\300q=>\301\244p=\301\232\231E\301R\270\022\301\024.9C\256Ga\277\n\3273\300\327\2430\277\244pm\300\354Q\014\301{\024\306\300\354QL\301\037\205K\301\024\256S\301H\001;C\232\231\351?\205\353q?\366(|\277\256G\221?\256G\361\277q=\336\300\024\256\213\300\270\036/\301\354Q.\301f\3469C\244p\215\277\354Q8?\n\327#\276\217\302\005\300\217\302\365<)\\?\300\315\314\000\301=\n\257\300\315\314@\301\\\317<Cq=:@=\n\347?\354Qh@\000\0000@\205\353Q?\366(<@\n\327\243\275\341z\244\300\n\327#\300339C=\ng\300333\277=\n\347\277\n\327\243<\366(\\\277\\\2172\300\037\205+\277\366(l\300\000\000\014\301\232Y5Cffv\300R\270\356\300\232\231\221\300\303\365\264\300\270\036u\300R\270\226\300\341z\324\300\327\243\220\300\256G\361\300\341\3723C)\\\257\277=\n\247\300\256G\r\301\244p\275\300\315\314\340\300ff\246\300\\\217\302\300\366(\000\301\341z\274\300\315\3141C\037\205\013\30033c\300\315\314\354\300\366(0\301\232\231\001\301\256G\023\301\366(\354\300\366(\004\301=\n#\301q\375.C\n\3273\300\024\256\237\300\037\205\313\300)\\#\301\270\036]\301\\\217.\301q=@\301=\n#\301\270\0361\301)\2342C\024\256g@)\\O?)\\\257\277)\\/\300H\341\322\30033#\301\256G\351\300\354Q\006\301q=\322\300\232\231/C\327\243@\300\366(\034?\315\314\014\300\366(\214\300\000\000\270\300\232\231\031\301)\\S\301\315\314$\301\341z6\301=J3C\366(l@{\024.?\232\231\211@R\270\276?\327\2430\277\n\327\003\300\270\036\275\300\354Q\030\301\037\205\323\300=\n4C\000\000@?{\024\216@=\n\267?\232\231\241@)\\\017@\217\302u=\024\256\247\277\270\036\245\300\354Q\014\301H\3414C=\nW?\037\205\313?\303\365\250@\256G\021@\341z\274@\270\036E@fff?\327\243\360\276q=\212\300\232\2312C\205\353\021\300\354Q\270\277\327\2430\277\000\000@@\n\327#\274=\ng@\315\314L?\327\243\260\277\000\0000\300\341\3722C\\\217\302>33\363\277\024\256\207\277R\270\236\276\354QX@\244p\275>)\\\177@=\n\227?\000\000\200\277\000@3Cq=\212>ff&?\327\243\320\277q=J\277\n\327#\275\232\231i@\n\327#?\354Q\210@\232\231\271?\205k5CH\341\n@\366(\034@\341z4@q=\n?\327\243\260?\354Q\010@q=\272@\n\3273@\217\302\315@\354\2213C\315\314\354\277\n\327\243>=\n\027?\354Qx?\024\256\247\277\327\243\360\276)\\\217>{\024~@\217\302u?3s4C\256Ga?\354Qx\277\232\231\231?\366(\274?\315\314\354?\366(\334\276\205\353\321>\341z\224?33\233@\217\2024C\217\302u=\327\243p?\303\365h\277\256G\241?\n\327\303?\341z\364?\244p\275\276\327\243\360>\366(\234?=\n4C\327\243\360\276\205\353\321\276\327\243\360>\327\243\260\277q=J?\024\256\207?\354Q\270?=\nW\277\000\000\000\000=J9C\000\000\250@\303\365\230@H\341\232@=\n\267@\024\256w@\256G\301@\205\353\311@{\024\326@\270\036\215@\354\221<C\205\353Q@\341z\010A\303\365\000A\205\353\001A\000\000\020A\315\314\344@\270\036\025A\244p\031A\037\205\037AR8=Cff&?\037\205{@H\341\022A)\\\013A\354Q\014Aff\032A\232\231\371@\037\205\037A\n\327#A\217\302AC\256G\221@{\024\246@\037\205\007A\037\205[A\000\000TA\303\365TA=\ncA\244pEA\366(hA\315\014@CH\341\332\277\270\0365@R\270^@\354Q\330@\366(@A\327\2438A\232\2319A\024\256GA{\024*A\341:AC=\n\227?\024\256\007\277\354Q\200@\270\036\225@{\024\376@=\nSA\037\205KA\341zLA\\\217ZA{\364AC\232\2319?\n\327\363?\024\256G>\037\205\227@\354Q\254@\327\243\nA\327\243^A\270\036WA{\024XA\024\356@C33\203\277\232\231\231\276\256Ga?\341zT\277\244pm@\037\205\213@\341z\364@q=NAR\270FA3s?C\244p\275\277\354Q \300\n\327\343\277\232\231\031\277\n\327\023\300R\270\016@\354Q8@\270\036\305@\\\2176A\000\0009Cff\316\300\217\302\375\300\256G\017\301\024\256\003\301\232\231\341\300\366(\014\301=\n\207\300\341zd\300\341z\224\276R\370:C\366(\374?)\\\217\300R\270\276\300\037\205\337\300\354Q\310\300\\\217\242\300\256G\331\300\000\000\020\300\315\314\314\277ff?C\217\302\215@\315\314\314@\315\314L\275\n\327\303\277\037\205#\300q=\352\277ff&\277=\n\027\300\037\205\013@\232\031FCff\326@{\0242A\232\231QA\315\314\324@\244p\245@\327\243\204@\n\327\233@\232\231\301@H\341\212@\000\300LC\315\314\324@\232\231UAq=\216A\000\000\236A\315\314TA\270\036=AR\270,A\354Q8A33KA\\\317WC\303\3650A\024\256\215A\256G\303AR\270\346A\341z\366AH\341\302A=\n\267A\n\327\256A\327\243\264A\256\207_C=\n\367@q=\226A\244p\313A\037\205\000Bq=\022B\270\036\032B\354Q\000B\315\314\364A\232\231\354A\000\300ZC\303\365\230\300\366(<@\000\000`A33\245A\315\314\332Aq=\376A\000\000\007Bff\332A\\\217\316A\256\307[C\n\327\203?\000\000p\300{\024~@\341zpA\244p\255A=\n\343Aq=\003B\270\036\013B\327\243\342A3s[C\303\365\250\276333?\\\217\202\300\303\365h@33kA\315\314\252Aff\340A\205\353\001B\315\314\tB\000\000\\C\315\314\014?\256Ga>\000\000\240?\205\353a\300{\024\206@\000\000tA33\257A\315\314\344A\270\036\004B=J^C\\\217\022@\217\3025@\327\243 @\\\217b@R\270\236\277)\\\317@\354Q\214A\037\205\301A\270\036\367A\2440bC\232\231y@{\024\306@\024\256\327@\270\036\315@{\024\356@q=*@{\024&A\037\205\253AR\270\340A\000\200dC\n\327\023@R\270\306@\000\000\010A\315\314\020A\037\205\013A\000\000\034A=\n\237@=\nKA\000\000\276A\341\372bC\\\217\302\277q=J?{\024\226@)\\\337@\303\365\360@ff\346@\024\256\003A\315\314\\@R\2702A\037\005dC\270\036\205?\217\302\365\276q=\352?)\\\267@\354Q\000A\270\036\tA\n\327\003A\354Q\024A\024\256\217@\037\005bC\000\000\000\300\217\302u\277R\270\036\300{\024.\276R\270n@\327\243\300@q=\322@\024\256\307@\327\243\350@\315\314cC\n\327\343?\256Ga\276\205\353Q?333\277{\024\316?\354Q\260@\232\231\371@\232\231\005A\354Q\000A=JgC)\\_@\327\243\250@\256GQ@\205\353\211@\\\2172@33\243@\000\000\020A\327\2434A\244p=AR\270dC\341z$\300\037\205k?\315\314,@333?R\270\336?\256Ga>\205\353!@\217\302\315@\037\205\013Aq=eC\270\036\005?33\003\300\354Q\270?{\024N@\366(\234?\327\243\020@\244p=?33C@ff\336@\315\014gC\024\256\347?\270\036\025@\217\302u\276\000\000P@\303\365\240@\205\353A@q=\202@33#@\037\205\233@H!iC\270\036\005@\303\365x@\270\036\215@\037\205\353?\\\217\252@\037\205\343@\037\205\243@\315\314\304@\366(\224@\366(oC\303\365\300@\217\302\001AR\270\036A=\n\'A\n\327\373@\217\3025Aq=RAq=2AH\341BA\024.oC\n\327\243<\232\231\301@{\024\002A=\n\037A)\\\'A\341z\374@{\0246A\\\217RA\\\2172A)\234qC\037\205\033@\315\314\034@\024\256\007A\303\365(A\205\353EAq=NA\270\036%A\303\365\\A\244pyA3s\177C\244p]A\366(\202A\354Q\202A\\\217\262A33\303A\024\256\321A\n\327\325A\256G\301A33\335A\000\000\200C\315\314\014?q=fA\\\217\206AR\270\206A\303\365\266A\232\231\307A{\024\326Aq=\332A\024\256\305A\256g\202C\205\353\231@\037\205\253@\232\231\231A=\n\255A33\255A\244p\335A{\024\356A\\\217\374A)\\\000B\232\231\201C{\024\316\277\315\314L@\000\000p@R\270\214A\366(\240A\354Q\240A\\\217\320A33\341A\024\256\357A\000\000\205C\232\231\331@{\024\246@\000\000 A\315\314(A\270\036\303A\\\217\326AR\270\326A\341z\003B\315\314\013B\217\242\212C\354Q4A\\\217\220A\024\256\203A\366(\252A\\\217\256A\327\243\016B)\\\030B\244p\030B\\\2170B\000\000\220C\024\256+A\000\000\260Aff\346A\037\205\331A\000\000\000B33\002B\\\2179B\256GCB)\\CB3\363\217C\315\314\314\275{\024*A33\257A\232\231\345AR\270\330A33\377A\315\314\001B\366(9BH\341BBH!\214C\341z\364\300\024\256\367\300)\\?@\366(dA\341z\250A\232\231\233A{\024\302A\341z\306A\232\231\032BRx\221CH\341*A\\\217B@\366(<@R\270ZA\037\205\307A\205\353\375A=\n\361A\217\302\013B\303\365\rB\\\217\222C\037\205\013@\217\302MA=\n\247@\n\327\243@\232\231}A\303\365\330A\024\256\007Bq=\001B\341z\024B\256\307\213C\303\365X\301{\0246\301333\277\244p\005\301=\n\007\301\\\217\022@\303\365XAH\341\242A\000\000\226A\256\'\217C\000\000\330@\205\353\331\300\366(\224\300\232\231\301@\037\205\313\277\354Q\330\277\327\243\020A\341z\242AH\341\330A\000@\215C\n\327s\300\366(<@\205\353)\301=\n\007\301)\\\017@\315\314\254\300\000\000\260\300)\\\247@\000\000\204A\000`\215C\000\000\200>\n\327c\300\366(L@\205\353%\301=\n\003\301)\\\037@\315\314\244\300\000\000\250\300)\\\257@\315,\213C\315\314\214\300\315\314\204\300R\270\376\300H\341\232\277\354Ql\301\244pI\301\341z\364\277\315\314\030\301ff\032\301ff\211C33c\300ff\376\300ff\366\300\366(8\301\354Q\230\300\\\217\222\301\270\036\201\301R\270\256\300\232\231Q\301R\270\212C\303\365(@\303\365h\277\205\353\251\300\205\353\241\300\205\353\r\301\024\256\007\300H\341z\301\000\000X\301\341z4\300f&\214C=\n7@\000\000\260@\232\231\371?\315\314\034\300\315\314\014\300\354Q\300\300\244p=?\270\036M\301q=*\301\232Y\217C\315\314\314@\366(\024Aff>A\232\231\005A\315\314|@ff\206@\024\256\307>\341z\344@\244p\315\300\205\353\217C\205\353\221?\256G\361@ff&A\327\243PA\n\327\027AH\341\242@H\341\252@\n\327\303?\341z\004Af\246\220CH\341\272?ff&@\000\000\020A\217\302=A\000\000hA33/A\232\231\321@\232\231\331@)\\?@\341\332\220C\205\353\321>)\\\357?\327\243@@\\\217\026A\354QDA\\\217nA\217\3025AR\270\336@R\270\346@\000\240\224C\256G\361@ff\376@\\\217\026A\315\314(A\232\231\207A\341z\236A\232\231\263A33\227A\000\000hA\315\014\230C33\333@q=fA\315\314lA{\024\202A33\213Aff\276A\256G\325Aff\352A\000\000\316A\000\000\227Cff\006\300\000\000\230@\327\243DA33KA\\\217bA\315\314tA\232\231\255A\341z\304A\232\231\331A)\\\222C\341z\024\301{\0246\301\303\365\220\300\327\243@@H\341Z@\366(\234@\327\243\300@R\270FA\341ztA3\023\223C=\n\267?33\373\30033\037\301ffF\300{\024\216@33\233@\205\353\311@ff\356@\232\231]A\000\240\221C\232\2319\300\366(\274\277\000\000,\301\232\231M\301\000\000\300\300\270\036\305?\232\231\371?q=Z@\232\231\221@\341\332\223CR\270\216@\024\256\307?)\\?@\256G\311\300q=\006\301\270\036\305\277\000\000\300@\270\036\315@\n\327\373@3\303\221C\205\353\205\300\315\314\214>\000\000(\300\303\365\230\277\232\231\'\30133I\30133\267\300\354Q\350?ff\016@\037\305\223C\341z\200@{\024.\276\256G\211@\205\353\261?\341z4@R\270\316\300\303\365\010\301H\341\332\277\\\217\272@q\035\224C\327\2430?\\\217\226@\270\036\005?)\\\237@\270\036\005@\327\243`@\327\243\270\300\n\327\373\300\\\217\202\277\315\254\222C\354Q8\300\366(\014\300\232\231\351?=\n\027\300ff\006@\315\314L\277\256G!?ff\n\301\000\000,\301Z\344\221C\260r\310\277\242E\216\300Nbp\300\246\233\204>\226C{\3009\264\010?\213l\027\300\262\235o\277\274t#\301\024n\225C\230n\342@\354Q\260@\354Q(@\341zT@R\270\352@\232\231I@\037\205\363@R\270\226@\341z\304@\354q\226C\205\353\001@-\262\021A\256G\361@\270\036\225@33\253@\n\327\025A\217\302\245@q=\032A\024\256\327@R\230\226C\232\231\231>\270\036\025@\372~\026AH\341\372@R\270\236@\315\314\264@\327\243\032A)\\\257@=\n\037A\037\305\225C33\323\277\315\314\254\277{\024.?\'1\370@{\024\306@\n\327S@\000\000\200@q=\000A\270\036u@3\363\232C\217\302%A)\\\013A\366(\020A\327\2430A\221\355\220Aff\204AR\270ZA\217\302eA\000\000\223A\000\000\234Cff\006@)\\GA\303\365,A\217\3021Aq=RA^\272\241A33\225A\354Q|A\024\256\203AR\370\234C\354Q\370?\256G\201@fffA\000\000LA\315\314PA\256GqA}?\261AR\270\244A\024\256\215A33\227C\327\2438\301\232\231\031\301\000\000\360\300=\n7@H\341\232?\256G\301?\\\217b@#\333)A\315\314\020A\315\354\223C\232\231\321\300R\270\220\30133\201\301\315\314`\301\366(l\300H\341\252\300\256G\241\300\327\243@\300\254\034\202@\205\013\224C\217\302u>\205\353\311\300\315\314\216\301\\\217~\301\303\365\\\301\315\314\\\30033\243\300\232\231\231\300\256G1\300\nw\224C=\nW?q=\212?=\n\257\300{\024\210\301\270\036q\301\037\205O\301=\n\'\300\354Q\210\300\244p}\300\000\300\222C\037\205[\300\217\302%\300ff\026\300ff\016\301\037\205\243\301\000\000\224\30133\203\301\256G\301\300{\024\366\300H\341\217C\024\256\267\300R\270\022\301\256G\005\301\244p\001\301q=j\301\244p\321\301\205\353\301\301\270\036\261\301\341z<\301\021\316\221C\303dv@\314\356\361\277B>\252\300\373\\\217\300\346\256\207\300@\244,\301\013\244\262\301\355\036\243\301 R\222\301R\230\225C.\220\362@H\3416A{\024\266@\327\243\020@ffF@\217\302U@\244pM\300\000\000l\301\303\365L\301f\246\224C\205\353\361\277M\025\266@\327\243\030A33s@\244p\275>H\341\232?\232\231\271?33\243\300\270\036\205\301q\335\224C\366(\334>H\341\272\277\334\327\303@\037\205\037A)\\\207@\315\314L?\205\353\321?\327\243\360?\244p\225\300\315,\222C\366(\254\300ff\236\300H\341\332\3002w=?H\341\222@33\223\277\\\217\222\300)\\o\300\000\000`\300\000\240\221C\315\314\214\277)\\\317\300\232\231\301\300{\024\376\300\320D\270\276)\\_@\000\000\020\300\217\302\265\300H\341\232\300\366\310\221C\n\327\243>\024\256G\277\270\036\305\300)\\\267\300\n\327\363\300/n#\275\n\327s@=\n\367\277\037\205\253\300\n\327\216C\341z\274\300q=\262\300\244p\325\300\315\314@\301\205\3539\301\366(X\301\276\301\275\300\270\036\005\300q=\372\300f\006\216C\327\243\320\277\327\243\360\300ff\346\300\315\314\004\301H\341Z\301\000\000T\301q=r\301\263\352\361\300\244pm\300J\334\220C\325x\265@\337O\201@\010\254\354\277F\266\303\277\211A(\300\335$\000\301+\207\362\300\006\201\027\301z\307\361\277\000\000\216Co\022\267\300\315\314L\275=\n\327\277q=\362\300\000\000\350\300\232\231\005\301\024\256[\301\315\314T\301=\ns\3013\323\216C33\323?\242E\202\300\315\314\314?\217\302\365\274\244p\275\30033\263\300ff\326\300\256GA\301ff:\301\315\214\216C\315\314\014\277\315\314\214?;\337\223\300ff\206?\341z\024\277=\n\317\300\315\314\304\300\000\000\350\300{\024J\301\270\376\213C\037\205\243\300\270\036\265\300\354Q\200\300-\262\033\301\205\353\201\300{\024\266\300\256G9\301\366(4\301\217\302E\301\000\000\214C\n\327#<33\243\300\315\314\264\300\000\000\200\3007\211\033\301\232\231\201\300\217\302\265\300\270\0369\301\000\0004\301H\001\211C\024\256\277\300)\\\277\300\244p1\301q=:\301\n\327\037\301B`{\301\327\243 \301R\270:\301\341z\214\301=\312\213Cq=\262@=\n\327\276\205\353\321\276\327\243\260\300q=\302\300\244p\215\300\211A\"\301=\n\217\30033\303\300\366H\215C)\\?@\303\365\010A\341z$@\270\036%@\205\353!\300\270\036E\300=\n\267\277\376\324\344\300\244p\275\277\205K\215C\n\327\243<\327\243@@\256G\tA\217\302%@ff&@\327\243 \300\n\327C\300\341z\264\277\'1\344\300=\312\215C\244p}?\256G\201?\000\000\200@\270\036\031A\270\036e@\217\302e@\\\217\302\277\341z\004\300=\n\327\276\2329\220C\n\327\233@\037\205\273@\366(\274@\205\353\rA=\ngA33\007A)\\\007AffV@333@\217\242\217C=\n\227\277\366(l@\217\302\225@ff\226@{\024\366@\366(TA\327\243\350@\303\365\350@H\341\n@\000\000\217C\\\217\242\277\315\314\034\300H\341\032@q=Z@\037\205[@\244p\315@\n\327?A\000\000\300@\354Q\300@\000 \217C\000\000\200>\\\217\202\277\315\314\014\300H\341*@q=j@\037\205k@\244p\325@\n\327CA\000\000\310@\2329\220C\315\314\014@\315\314\034@=\n\227?\000\000\000\000\n\327\233@\037\205\273@\366(\274@\205\353\rA=\ngA\024\216\217C\037\205\253\277\366(\\?{\024\216?\n\327#\276\037\205\253\277\205\353a@\327\243\220@\256G\221@\303\365\360@\\o\223C\354Q\370@\244p\315@\205\353\tA\205\353\rA33\363@\244p\315@\327\2434A\341zDA\315\314DA\354\261\223C\270\036\005?\341z\004A{\024\336@q=\022Aq=\026A\205\353\001A{\024\336@\303\365<A\315\314LA\205\213\225C\315\314l@=\n\207@\024\256?Aq=*A\244pMA\244pQA\270\036=Aq=*A\366(xA\270\336\232Cff*A\232\231eA\205\353mA=\n\265A\354Q\252A\205\353\273A\205\353\275A\217\302\263A\354Q\252A\n\327\233C\354Q\370?\244pIA\354Q\202A\341z\206A\\\217\304A\n\327\271A\244p\313A\244p\315A\256G\303A\000\200\227CH\341\n\301\024\256\327\300q=z@\037\205\363@{\024\002Aq=~A\315\314hA\000\000\206A\000\000\210A\\O\227C\\\217\302\276\303\365\020\301\n\327\343\300\205\353a@)\\\347@\000\000\370@\366(xAR\270bA\303\365\202A\232\031\226CH\341\032\300333\300\024\2567\301\327\243\030\301{\024\216?\205\353\231@\\\217\252@\244pQA\000\000<A\037\345\227C\217\302e@\217\302\225?q=J?\341z\374\300ff\276\300ff\226@ff\006AR\270\016A\244p\205A{\364\231C\n\327\203@R\270\366@\256G\251@\270\036\235@\256Gq\300q=\352\277\270\036\rA\354QHA\327\243PA3\363\233C)\\\177@\217\302\001A33;A\341z\024Aff\016A\256Ga>q=\n@\303\365LA{\024\204A\\\257\233C\024\256\007\277\244p]@\\\217\362@R\2702A\000\000\014A\205\353\005AR\270\236\276\327\243\320?\341zDA\024\256\235C)\\\177@\244p]@ff\356@\270\0369A\\\217rA\n\327KA\217\302EA\037\205k@\n\327\263@\327#\235Cq=\212\277q=:@\354Q\030@\n\327\313@\n\327\'A\256GaA\\\217:A\341z4Aff&@R\370\234C{\024\256\276\217\302\265\277\341z$@\\\217\002@\303\365\300@ff\"A\n\327[A\270\0365A=\n/A\000\000\231C{\024\376\300\341z\004\301\217\302\025\301\n\327\253\300\315\314\274\300\341z\364\277\244p\r@\232\231\271@\354QX@\\\317\232C\024\256g@q=\212\300\270\036\225\300\024\256\267\300\000\000\340\277\205\353\021\300H\341\332?\\\217\272@R\270\026A\341:\236CH\341\332@)\\\'A\256G!@\037\205\013@\315\314\214?H\341\242@\205\353\221@\315\314\010AR\270JA\nW\237C{\024\016@\303\365\020AH\341JA\024\256\227@\315\314\214@\341zT@\205\353\351@\303\365\330@\354Q,A\000\200\233C\217\302\365\300R\270\256\300\327\243\260?\000\000\240@\366(<\300\205\353Q\300\037\205\213\300\244p\275\276fff\277\341Z\233C\341z\224\276=\n\377\300\000\000\270\300\037\205\213?R\270\226@R\270N\300\341zd\300\315\314\224\300\303\365(\277\000`\234C\\\217\002@\000\000\340?\217\302\275\300\244pm\300\354QH@\000\000\330@\354Q\230\277\n\327\303\277=\n\'\300\270~\234C\217\302u>\205\353\021@R\270\376?{\024\266\300{\024^\300\024\256W@\024\256\337@33s\277\270\036\245\2773S\233C\217\302\025\300ff\006\300\217\302u\27533\263\276\341z\000\301\205\353\271\300\n\327\203?\315\314\224@\\\217R\300\315\014\231C\232\231\221\300\341z\334\300\315\314\324\300\037\205\223\300\315\314\234\300\256GI\301\217\302%\301\256Ga\300\315\314\314=)|\226C\366(\244\300H\341\032\301\354Q@\301\341z<\301\n\327\033\301\341z \301\024\256\215\301\n\327w\301ff\n\301R\270\224C\205\353a\300\\\217\n\301)\\S\301\315\314x\301\303\365t\301\354QT\301\303\365X\301\205\353\251\301\366(\230\301\354\021\224Cff\246\277\\\217\232\300)\\\037\301\366(h\301\315\314\206\301H\341\204\301\270\036i\301\217\302m\301\354Q\264\301\000\200\230C\217\302\rA\205\353\361@\303\365\200@\315\314\214\277\315\314\264\300\024\256\377\300\000\000\370\300R\270\266\300\000\000\300\300\327\243\227C\366(\334\277\341z\344@H\341\272@\n\327\023@\341z4\300\n\327\353\300)\\\033\301\037\205\027\301\217\302\355\300\232Y\232C\244p\255@\315\314l@\303\365HA\366(4A)\\\367@ff&@\232\231\371\277\256G\211\300\232\231\201\300\232\231\227C\000\000\260\300\n\327\243\275ff\346\277\205\353\341@\354Q\270@R\270\016@\232\2319\300ff\356\300\327\243\034\3013\363\251C\315\314\022B\232\231\371A\341z\022B\232\231\013B=\n/B\n\327)BR\270\033B33\007B\000\000\352A3S\256C\000\000\014A\315\3145B\315\314\037B\341z5B\232\231.B=\nRB\n\327LBR\270>B33*B{t\255CR\270\336\277\354Q\340@\n\327.B\n\327\030B\037\205.B\327\243\'B{\024KBH\341EB\217\3027BR\270\261C\341z\010A\256G\331@\327\243xA\303\365PB\303\365:B\327\243PB\217\302IB33mB\000\000hB\256\207\260C\354Q\030\300\315\314\304@\270\036\215@\\\217RA\244pGB\244p1B\270\036GBq=@B\024\256cB\303\025\263C\037\205\243@R\270.@\366(4A\354Q\030A\366(\222AH\341[BH\341EB\\\217[B\024\256TB\354\021\272C\037\205_A\327\243\230A\232\231\205A\n\327\311A\205\353\273A\303\365\000BH\341\211B\217\302}BR\270\211B\244\260\275C\024\256\347@\024\256\251A\\\217\322A\037\205\277AH\341\001B\n\327\365A\205\353\035B)\\\230B)\\\215B\n\327\275C\232\231\231>\256G\361@{\024\254A\303\365\324A\205\353\301A{\024\003Bq=\370A\270\036\037B\303\365\230B\232\371\300C\327\243\310@q=\322@\303\365\\Aq=\336A\\\217\003B{\024\364A\366(\034B33\025B338B\n7\303C)\\\217@\000\000,A\315\3140A\354Q\222A=\n\001B\341z\025B\303\365\013B{\024.B\270\036\'B\327\203\305C33\223@\256G\021A\232\231uAffzA\270\036\267A\244p\023BH\341\'B)\\\036B\341z@B3\363\302C\366(\244\300\024\256\007\277\315\314|@\037\205#A\354Q(A{\024\216A\n\327\375A)\\\023B\n\327\tB3\223\275C\000\000,\301{\024~\301\341z4\301\232\231\331\300\024\256\007\277\037\205k\276\354Q\340@\n\327\247AR\270\320A\315\214\303C33?A\232\231\231?\037\205{\300\037\205+?\315\314\244@R\2706A\037\205;A\024\256\227AR\270\003B33\303C333\277\000\0004A\000\000\000?\366(\224\300\217\302\365\274ff\216@\037\205+A\354Q0A{\024\222A)|\306Cq=\322@\n\327\273@\\\217\216Aq=\342@\354Q\370?\256G\321@\354Q0A\354Q\212AR\270\214Aff\304C\244p\205\300\232\231\031@\232\231\331?ffZA\232\2319@R\270\016\300\024\256\027@33\333@\205\353QA3\023\307C33\253@=\n\227?\000\000\370@\232\231\341@\000\000\230A\000\000\004A\024\256G@=\n\367@33CA\232\271\311C\232\231\251@ff*A)\\\317@\315\314PA\232\231EAff\302A\315\314XAR\270\006A\354QPA\341\032\310C)\\O\300\n\327\003@\270\036\355@)\\O@\303\365\034A\217\302\021A\341z\250A\303\365$A\217\302\245@\024\256\314Cff\022A\270\036\275@)\\3A\341z\204Aq=FA\024\256\227A{\024\222A\024\256\361A\024\256\233A)<\320C\037\205\343@{\024\202A\354QPA\\\217\222A)\\\275A\000\000\234A\\\217\320A\303\365\312A\256G\025B\024n\323C\341z\314@\000\000XA33\265A\256G\233A\024\256\305A\341z\360A\270\036\317A\n\327\001B{\024\376A\\O\326C\354Q\270@ffBA{\024\232A\256G\343A)\\\311A\217\302\363A\256G\017B33\375AH\341\030Bq\275\323C\341z\244\300R\270\036?\354Q\340@\205\353aA\366(\272Aq=\240A\327\243\312A\244p\365A{\024\324A\037\305\311C\037\205\237\301\327\243\310\301\\\217\232\301H\341N\301q=\272\300\270\036U@\354Q\270=\341z\254@\n\327+A\315t\312C\024\256\257?=\212\224\301\366\250\275\301{\224\217\301\205\3538\301\354Q\216\300\341z\226@33\273?ff\330@\210\013\317Cs\327\022A6\315(A\010=\026\301xzh\301\203Q\014\301HP\030\300\373\\\227@\344\024^A\331=*A\232\331\320C\232\010g@\232\231LA\\\217bA\303\365\270\300R\270.\301\270\036\245\300\244p\235?\244p\005A\205\353\213A\315\354\312C\232\231=\301s\327\003\301\000\000p?\n\327\023@=\n\215\301\366(\266\301{\024\210\301\205\353)\301\327\243`\300\037E\312C\024\256\247\277\\\217R\3016\315\030\301R\270\276\276\000\000\200?\037\205\227\301\327\243\300\301\\\217\222\301H\341>\301)\034\312C\n\327\243\276\327\243\320\277\024\256W\301\356\353\035\301\256G1\277{\024.?{\024\232\30133\303\301\270\036\225\3013S\315C\217\302\315@\037\205\303@\232\231\231@\232\231\341\300\231*\\\300\232\231\267@\037\205\343@\256GM\301\217\302\217\301\232\231\314C\232\231\271\277)\\\237@\270\036\225@ffV@\000\000\010\301\263{\234\30033\211@\270\036\265@\341zd\301VN\316C5^Z@\321\"\373?\242E\006A\351&\001ANb\330@\345\320\242\300a2\275\277Nb\366@\351&\021A\270\276\320C\223\030\234@\327\243\004AH\341\332@\354QTA33OAq=:A=\nW\276\366\227Y@q=IA\341z\321C\366(\274?\321\"\313@\366(\034A\303\365\004A\n\327kAR\270fA\217\302QA\256G\241?9\326\233@\327C\323C\341zd@\256G\241@!\260\036A\256GUA{\024>A\341z\222A\205\353\217A\244p\205A\\\217\232@3\023\327C\n\327\363@=\n3A\\\217JA\323M\214A\232\231\247A\000\000\234A\244p\317AH\341\314Aff\302A\315L\324C\232\231\261\300\341z\004@\341z\264@\037\205\343@\331\316?AffvA33_A=\n\243A\341z\240A\270\336\326C\341z\244@\205\353\321\276R\270\346@\341z,A\000\000DA%\006\211A\354Q\244AR\270\230A\366(\314A=*\325Cq=Z\300\244p\335?\341zt\30033s@\n\327\353@\244p\rA\356|[A=\n\211AH\341zA\037\005\330CR\270\266@33\023@{\024\356@\205\353\361?\366(\030A\256GQA\315\314hA\213l\233AR\270\266A\nw\327C{\024\216\27733\223@\354Q\230?\\\217\312@\024\256G?ff\006A\037\205?A=\nWAD\213\222A\354Q\324C\256G\311\300\315\314\354\300\354Q\330\27733\243\300\n\327#=\354Q\260\300=\n\007@\217\302\265@\315\314\344@RX\325C33\003@\024\256\207\30033\253\300\354Q\270>33C\300\217\302\005@\244p]\300\270\036\205@)\\\367@3\023\322C\256G\321\300\024\256\217\300\341z,\301q=>\301\217\302\305\300\244p\031\301ff\216\300\000\000 \301\354Q\030\300\024n\317C\256G\251\300\256G=\301\341z\034\301\\\217\200\301\244p\211\301\037\2057\301{\024n\301\n\327\033\301\327\243t\301q\235\331C\303\365\242A\256GqA\327\243\010A\244p)A\232\231\211@\366(L@ff\016A\024\256\257@{\024*A\270\236\336C\366( A=\n\363AR\270\310Aff\224A\315\314\244A\303\365dA33SA\256G\227A\000\000xA\270\236\341C\000\000\300@{\024\200A\037\205\021BR\270\370Aff\304A\315\314\324A\341z\242A\232\231\231A\256G\307A{\324\350CR\270fA)\\\243A\244p\363A33KB=\n6BH\341\033B{\024$B\205\353\nB\341z\006B6s\351C\231\273\236?\305\217zA\343G\255A]\\\375A\020)PB\032\000;B$\327 BX\n)Bb\341\017BH\341\352C\232\0107@33\203@\366(\224A\366(\304A\270\036\nB\232\231[B\244pFB\256G,B\341z4B\244\320\353C)\\\357?W[\227@=\n\277@\270\036\243A\270\036\323A\232\231\021B{\024cB\205\353MB\217\3023B\244\320\347C\000\000\000\301\366(\304\300RIQ\300\205\353\001\300q=FA\270\036\223A33\343A{\024CB\205\353-B\000 \351C\024\256\'@\366(\254\300\327\243`\300\364l&\277=\n\027?\366(pA{\024\250A\366(\370A\\\217MB\024\216\351C\366(\\?R\270^@\327\243\220\300\232\231)\300\007\360V>\232\231\271?\205\353}A\303\365\256A=\n\377Axt\336C\316\231\261\301\206\270\252\301\304\302\225\301\304\302\325\301\001\315\306\301\356\353\257\3014\000\246\301.\220\312\300\336\002\251\276\3668\332C;p\007\301\354Q\365\301\244p\356\301\341z\331\301q\275\014\302\217B\005\302\013\244\363\301R\270\351\301R\270l\301\345\272\307C\212\360\023\302\230\3145\302\300L\207\302n\224\205\302\375V\200\302\375V\220\302\214\231\214\302H\341\206\302Yf\204\302\000\300\325C\267Q\340A\270\036\017\301zG\213\301\244p\036\302\000\000\033\302\037\205\020\302\037\2050\302=\n)\302\264\231\035\302\327\203\335C\341zxA\224G.BR\270\322@\220\240\360\277\327\243\300\301\217\302\271\301\315\314\244\301\315\314\344\301\n\327\325\301\000\200\330C\341z \301\000\000\260@\334(\006B\341z\\\300\363\216>\301\244p\010\302\000\000\005\302=\n\365\301\037\205\032\302\354!\331C\205\353\241?q=\014\301\341z\330@88\013B\037\205\013\300\203Q*\301Ha\003\302H\341\377\301\205\353\352\301\270\276\330CffF\277H\341\372>\327\243\030\301\024\256\277@\236\036\010B\270\036=\300\351\2676\301\341z\006\302=\n\003\302\366h\325C\244p\325\300q=\356\300\217\302\305\300\024\256\201\301{\024.\277\023\341\332A\000\000\032\301\035\270\220\301\366(!\302~T\330C\031\342\272@TtT\277]m\315\277_\007\256\276\034\353%\301\212\037\245@\315\314\004B\315;r\300.\377C\301\327\343\310Cr\n\367\301\354Q\310\301\024\256\375\301\244\360\001\302\217\302\371\301\000\000%\302\217\302\315\301>y\024@\366\250\n\302\037\005\306C\024\256\267\300\373z\022\302q=\366\301\315\314\025\302f\346\030\302\n\327\023\302\303\365;\302\024\256\373\301\353\342Z\300\n\307\276C\217\302g\301\315\314\241\301\237kL\302\\\0175\302q\275O\302\n\327R\302\256\307M\302f\346u\302\256\3077\302\315\214\300CH\341b@=\n/\301\244p\205\301\213=>\302H\341&\302\\\217A\302\366\250D\302\232\231?\302R\270g\302\303\365\267C\244p\211\301\366(Z\301\303\365\340\301\244p\007\302\356z\201\302\232\231k\302\327#\203\302\244\260\204\302\366(\202\302=\212\270C\341z\224?\366(\200\301\232\231G\301\024\256\327\301\315\314\002\302\006R~\302\303\365f\302\354\321\200\302\270^\202\302\217b\263C\303\365$\301ff\022\301\327\243\322\301\256G\266\301{\024\025\302=\n,\302\273\307\223\302\232\031\210\302\244p\225\302\024N\265C\217\302u@=\n\317\300\205\353\251\300\205\353\263\301\\\217\227\301R\270\005\302\024\256\034\302\247\031\214\302\205k\200\302\232\331\254C\256G\207\301\270\036Q\301=\n\273\301\217\302\261\301\232\231\035\302\205k\017\302)\\I\302\354Q`\302\222\353\255\302\366\250\253C\354Q\030\300\354Q\232\30133w\301{\024\316\301\315\314\304\301\270\036\'\302\244\360\030\302H\341R\302\n\327i\302\2440\253C\327\243p\277\341zT\300\n\327\241\301\270\036\203\301\232\231\325\301\354Q\314\301H\341*\3023\263\034\302\327\243V\302\341:\267C\327\243\300A\270\036\271A{\024\246Affv@{\024\366@\024\256\'\300H\341\272\277\270\036\225\301\037\205q\301\000`\270C\\\217\022@\303\365\322A\244p\313Aff\270A\341z\304@\024\256\037A\303\365\250\276\341zT?\315\314\202\301\205K\267Cq=\n\300\270\036\005>\024\256\301A\366(\272A\270\036\247AR\270~@q=\372@)\\\037\300q=\252\277\270\276\266C\315\314\214\277\327\243P\300\354Qx\277H\341\270A)\\\261A\354Q\236A\354Q8@=\n\327@\217\302e\300\366\010\275C\256GIA\024\2567A\270\036\025A\217\3029A\217\302\016B\000\000\013B\341z\001B)\\wAff\232A3\263\274C\037\205+\277\\\217>A\303\365,Aff\nA=\n/A{\024\014B\354Q\010B\232\231\375A\327\243lA\0000\303C\232\231OAH\341DA{\024\307A\256G\276A\000\000\255A\354Q\277A\341\372?BR8<B3\2632B\\O\265C=\n\336\301\341zl\30133w\301\024\2567\300{\024~\300\366(\304\300\217\302u\300\205\353\241Aff\232Aff\266C\037\205\013@\232\231\314\301\232\231I\301\354QT\301\327\2430\277\270\036\345\277\315\314|\300\341z\324\277)\\\263A\2329\274Cff:A\256G]A\315\314^\30133s\277)\\\317\277)\\/A\217\302\035Aff\366@\n\327\037A\n\027\275C\244p\335?{\024VA\303\365xA\270\036C\301\024\256G?\256G\341==\nKA\244p9AH\341\026A\315\014\270C\256G!\301\232\231\005\30133S@)\\\257@33\262\301\315\314\024\301\037\205\037\301=\n\'@\256G\301?\2329\266C\232\231i\300\024\256[\301\000\000@\30133\263\276q=\352?ff\317\30133O\301\205\353Y\301\270\036\205\277\244\360\260C\270\036)\301\037\205c\301ff\302\301\\\217\264\301R\270.\301\n\327\013\301\341\372\021\302\366(\274\301\037\205\301\301\000\200\253C{\024.\301\232\231\253\301\315\314\310\301R\270\014\302\315\314\005\302ff\256\301\303\365\234\301\000\200=\302\232\231\t\302\000\300\250C\000\000\260\300=\n\203\301\232\231\327\301\315\314\364\301R\270\"\302\315\314\033\302ff\332\301\303\365\310\301\000\200S\302\256\207\250C\256G\341\276{\024\276\300\\\217\206\301\270\036\333\301\354Q\370\301\341z$\302\\\217\035\302\205\353\335\301\341z\314\301{\224\257C\232\231aA\\\217ZA\\\217\002A{\024.\300\327\243T\301\037\205\207\301\366(\330\301\354Q\312\301q=Z\301\000@\254C\270\036\325\300{\024\356@\000\000\340@\000\000\300?{\024\026\301\232\231\237\301\315\314\274\301R\270\006\302\232\231\377\301\217b\251C)\\\267\300q=F\301H\341\332?\\\217\242?)\\\207\300\217\302q\301\244p\315\301\327\243\352\301\327\243\035\302\037\345\251C\\\217\202?R\270\226\300\205\3535\301R\270.@\\\217\022@\244pM\300\244pa\301\256G\305\301\341z\342\301R\030\256Cff\006AR\270\026A\366(l@{\024>\300{\0242A=\n+A{\024\246@{\024\266\300{\024\202\301\303\365\251C\354Q\004\301\270\036\005>33\223?\\\217\222\300\n\3273\301=\n7@H\341\032@\270\036E\300)\\_\301)\034\252C\232\231\231>=\n\377\300\366(\334>\232\231\271?\303\365\210\300=\n/\301q=J@{\024.@\205\3531\300\354\361\252C\217\302\325?\366(\374?\232\231\311\300ff\006@\024\256G@=\n\'\300\354Q\024\301\\\217\232@\341z\214@f\346\266C\256G\277A\327\243\314A=\n\317AH\341\214A{\024\320Aq=\330Aff\252Aq=jA\205\353\345AR\330\270C\303\365x@ff\336A\217\302\353A\366(\356A\000\000\254A33\357A)\\\367A\037\205\311Aq=\224A\232\231\274C\354Q\360@ff6Aq=\rB\205\353\023B\270\036\025B{\024\350A\327\243\025BR\270\031B\315\314\002Bq}\305Cq=\216A\354Q\312A\244p\351A)\\TB=\n[Bq=\\B\366(;B\217\302\\B\n\327`BR8\302C\256G\321\300\n\3273A\000\000\226A\270\036\265A33:BH\341@B{\024BB\000\000!B\232\231BB\000\000\303C\024\256\307?)\\\237\300\315\314LA\341z\242A\232\231\301A\244p@B\270\036GB\354QHBq=\'B\232\331\302C\232\231\231\276\256G\241?\303\365\250\300\000\000HA{\024\240A33\277Aq=?B\205\353EB\270\036GB\205+\312Cq=jA\244peAff~A\217\302\025A\270\036\331A\232\231\nB\366(\032B\315\314yBq=\200B\270\376\313C\232\231i@\354Q\222A\205\353\217Aff\234A\366(PA\354Q\366A33\031B\217\302(B33\204B\n\227\315C\366(L@H\341\332@\n\327\253A\244p\251A\205\353\265A\232\231\201A\205\353\007B\303\365%B\037\2055B{\024\313C\327\243\240\300q=\352\277\303\365\350?\024\256\203A\256G\201A\217\302\215AH\3412A\024\256\347AH\341\021B\2440\320C\037\205#Aff\246@q=\006A\327\243@A\244p\325A=\n\323A\037\205\337A33\253AR\270\034B{\324\314C=\n\327\300\000\000`@\\\217\302\277\217\302\325?q=\252@\024\256\237A\256G\235A\217\302\251AH\341jA\232y\314C\217\3025\277\217\302\355\300\\\2172@R\270\016\300\217\302u?\037\205\223@\000\000\232A\232\231\227A{\024\244A{\024\311C\256G\331\300\000\000\360\300\037\205c\301\000\000\200\300\354Q\020\301\\\217\272\300\037\205\013\300)\\GA\\\217BA\366h\313C\270\036\225@\354Q\010\300\217\3025\300\303\365\030\301\303\365(?\037\205\213\300\217\302\225\277R\270\036@\303\365\210A\270\036\312C\270\036%\300\270\036\005@R\270\226\300\244p\255\300q=B\301\217\302\365\277{\024\336\300\000\000p\300\315\314\314\275\000@\315C\354Q\310@\037\205k@\244p\005Aff\306?=\nW?\366(\274\300H\341\212@{\024.\277\327\243 @\000\200\317C\000\000\220@\366(,AH\341\002A\244pMA\232\231\301@H\341\252@\327\243\260\277\244p\rA\341zt@\315\214\332C\315\314\260A\315\314\324A\244p\003Bq=\362A\217\302\013B33\341A\037\205\333A\217\302\245A\037\205\367A\000@\334C\232\231Y@\000\000\314A\000\000\360A=\n\021BR\270\006B)\\\031Bff\374AR\270\366A\303\365\300A{\224\325C\244pU\301=\n\037\301\\\217BA\256G\205A)\\\267AR\270\242A\000\000\310A\024\256\221A\000\000\214A)\374\324C\354Q\230\277\341zh\301{\0242\301\037\205/A\037\205wA\n\327\255A33\231A\341z\276A\366(\210A\327\003\322C{\024\276\300\366(\344\300\217\302\243\301\\\217\210\301\303\365\240@\341z\030A\327\243|A)\\SA\303\365\216AR\370\320C\217\302\005\300\341z\000\301\037\205\023\301\341z\264\301\256G\231\301\366(<@{\024\356@33[A\205\3531A3s\307C\354Q\230\301=\n\251\301\\\217\330\301{\024\342\301ff&\302\315\314\030\302\315\314\200\301\232\2319\301H\341\252\300ff\305C33\203\300\270\036\271\301\n\327\311\301)\\\371\301\244p\001\302\315\3146\30233)\302\232\231\241\30133{\301\303\025\305C\256G!\277)\\\227\300\366(\276\301H\341\316\301ff\376\301\303\365\003\302\354Q9\302R\270+\302\327\243\246\301\000`\305C\341z\024?\315\314L\275\315\314\204\300\037\205\271\301q=\312\301\217\302\371\301\327\243\001\302\000\0007\302ff)\302f&\305Cff\346\276\270\036\005>\000\000\000\27733\223\300\270\036\275\301\n\327\315\301)\\\375\301\244p\003\302\315\3148\302\327c\305C\217\302\365>\217\302\365<\366(\034?\n\327\243\274\n\327\203\300\256G\271\301\000\000\312\301\037\205\371\301\037\205\001\302ff\314C\354Q`A\000\000hA\315\314`A{\024jA\000\000`Aff\036Aq=\022\301\024\2563\301)\\\211\301q}\311Cq=\272\30033\003AH\341\nA\024\256\003A\303\365\014AH\341\002A\\\217\202@)\\o\301ff\210\301\000\200\301C\024\256\177\301ff\256\301\303\365\370\300\232\231\351\300\000\000\370\300\244p\345\300\232\231\371\300ff>\301\037\205\367\301\244\020\273C\205\353M\301\315\314\346\301\024\256\n\30233\245\301)\\\241\301\303\365\244\301\354Q\240\301)\\\245\301\366(\306\301\232\031\274C\341z\004@\315\314,\301q=\326\301ff\002\302\327\243\224\301\315\314\220\301ff\224\301\217\302\217\301\315\314\224\301f\246\271C\315\314\234\300\270\0365\30033{\301\244p\375\301\000\000\026\302\n\327\273\301\000\000\270\301\232\231\273\301\303\365\266\301\000@\273C\315\314L@\232\231\331\277\244p\275>\000\000H\301\n\327\343\30133\t\302q=\242\301ff\236\301\000\000\242\301\270~\271C\327\243`\300R\270\236\276R\270\246\300\303\365H\300{\024\200\301\205\353\377\301q=\027\302\354Q\276\301\341z\272\301\217\002\271C\354Qx\277)\\\217\300\n\327\243\277\217\302\305\300\037\205\203\300\n\327\207\301\n\327\003\302\270\036\033\302{\024\306\301\232y\271C{\024n?\n\327#\27533c\30033\263\276\000\000\250\300\037\205K\300ff\200\301\270\036\000\302ff\027\302=\312\273C\366(\224@\205\353\261@H\341\222@q=\212?\303\365\210@R\270\036\277\232\231\271?R\2706\30133\333\301\000\240\276C\244p\265@\315\314$A\024\2563A\366($A\000\000\330@33\037A\232\231\241@\n\327\343@\000\000\270\300\270~\277CR\270\336?\270\036\355@\327\243@A\037\205OA\000\000@A\n\327\007A=\n;A\256G\331@\217\302\rA\315\254\276C\205\353\321\277\315\314\314=\327\243\270@ff&A\256G5A\217\302%A33\333@\315\314 A\315\314\244@R\370\271C\\\217\026\301\315\3140\301\303\365\024\301\303\365h\300\244p}?\217\302\365?33s?\n\327#\300\n\327#?\366\350\271C\217\302\365\275\341z\030\301R\2702\301H\341\026\301\327\243p\300R\270^?ff\346?\341zT?\037\205+\300\\O\277C\315\314,AH\341*A\\\217\242?\244p\275\276)\\\257?\256G\341@R\270:A\232\231IA{\024:AR\270\275C\037\205K\300\n\327\363@\000\000\360@\341z\364\27733c\300\024\256\347\277=\nw@\n\327\007AR\270\026AR8\273C\000\000\240\300H\341\002\301\024\256\'@\000\000 @\270\036\335\300\315\314\010\301\205\353\331\300\205\353\221\277)\\_@\270\376\302C\315\314xA\315\314(A\n\327\353@)\\\221Aff\220Aq=\nA\000\000\340@\n\327\013A\\\217fAHA\301CR\270^\300\270\036AAq=\342@\303\365x@=\nkA\270\036iA\270\036\245@\256Ga@\354Q\250@f\246\304C\256G\331@\n\327S@H\341\226A\217\302]AH\341*A\n\327\253AH\341\252A33?A\303\365$A,%\302C\245N\240\300&\344\343?~\214\331\277=\233]A=\233\rA\353s\265@a\303\203A\237\315\202A\302\027\336@\037\305\276CG\003\330\300\366(<\301=\n\237\30033\007\30133\343@ff\006@q=\212\277\037\205\033A\232\231\031A3C\301C\037\205\237@\241\370\341\277\315\314\330\300\217\302u<\217\302]\300)\\AAR\270\342@\205\353y@\256GkA\3541\300C\327\243\010\300ff6@\'\240y\300\\\217\016\301\024\256\007\30033\263\30033\037Aff\236@\\\217\342?\000\200\303C\037\205\323@33\217@)\\\027A\026j-@33\023\300\024\256\217@\256G\201?\341z\204A\303\3658A\232Y\303C\232\231\231\276\205\353\311@\232\231\205@\\\217\022A\3436\032@ff&\300{\024\206@\217\3025?{\024\202A\354\021\302C\n\327#\300=\n7\300\000\000p@R\270\316?33\323@u\002\032\276\270\036\245\300\327\243\320?\315\314\354\277\303\225\301C\354Qx\277\205\353a\300\270\036u\300\205\3531@\270\036%?\366(\264@Di\217\277\366(\304\300\303\365(?\244\020\311C)\\oA\n\327_AH\3416A{\0242A\205\353\215A\024\256yAR\270\244A\000o]A\256G\rA\232\371\307C\037\205\013\300\341zLA\303\365<A\000\000\024A33\017A\303\365xA\315\314VA\256G\223A\271\215:A\024n\312C\270\036\235@R\270.@\037\205\215A\217\302\205A\\\217bA\217\302]A\217\302\243A\024\256\222A\\\217\272A)\034\312C\n\327#\277\327\243\210@\217\302\005@ff\210A\327\243\200A\354QXA\037\205SA\327\243\236A\\\217\215A\366(\311C33\363\277\\\217\"\300\024\256\027@\\\217B>ffrAH\341bA\205\3539A\270\0365A\244p\217A\024\016\313C\\\217r@\205\353\361?\000\000\240?\270\036\305@R\270~@\037\205\227A\217\302\217A\\\217vA\217\302qA\256\347\320C33;A\n\327wA\244pYA33OAH\341\216AH\341zA\270\036\365A)\\\355AH\341\330A=\252\321C\\\217\302?\037\205SA{\024\210A\217\302qA\037\205gA=\n\233A\232\231\211A\327\243\000B\037\205\371A\232\231\323C\024\256w@\341z\254@R\270\210A=\n\247A\n\327\227AR\270\222A\000\000\272A\\\217\250A\270\036\020B\341\272\322CR\270\336\277\354Q\010@\232\231i@\232\231uA\270\036\231A\205\353\211A\315\314\204A{\024\254A\327\243\232AR\230\323C\244p\335?\n\327#\274=\nw@\366(\254@\327\243\210A\303\365\246A\217\302\227A\327\243\222A\205\353\271A\2329\322C)\\/\300\256G\201\277\000\0000\300)\\\217?\303\365(@\244peA=\n\221A\n\327\201A\244pyA\232\031\321C\000\000\020\300\024\256\237\300\327\243P\300\000\000\240\300\327\243\220\277\024\256\307>\244pAA{\024~A\024\256_A\256G\324C\037\205\313@\037\205\203@)\\\257?ffF@{\024\256?)\\\247@\000\000\330@\232\231\223A\205\353\261A\000\240\320C\205\353\351\30033s\277\315\314L\300{\024\276\300R\270\206\300ff\276\300\270\036\005\300)\\\017\277q=2A=j\314CR\270\006\301\024\256{\301\205\353\025\301\205\3539\301\217\302e\301{\024J\301\205\353e\301\000\000(\301\024\256\017\301\000\300\311C\\\217\252\300\000\000\\\301\341z\250\30133k\301\232\231\207\301\037\205\235\301\024\256\217\301\232\231\235\301\256G}\301\354\361\313C\341z\214@\327\243p\277\217\302\025\301)\\\205\301\303\365$\301\303\365H\301\315\314t\301\270\036Y\301\303\365t\301f\206\311CH\341\232\300ff\346\276\303\365\270\30033c\301{\024\254\301ffr\30133\213\301\270\036\241\301\256G\223\301\000\200\307C\232\231\201\300q=\016\301\000\000\220\300\256G\035\301\000\000\222\301\341z\314\301\232\231\231\301\232\231\253\301\037\205\301\301\\\217\301C{\024>\301H\341~\301\366(\246\301=\n\203\301\024\256\255\301=\n\361\301\217\302\025\302\327\243\370\301\354Q\005\302\323\r\303Cd;?@\242E\016\301o\022O\301\211A\216\301\242EV\301\250\306\225\301\321\"\331\301\331\316\t\302j\274\340\3013s\303C\203\300J?\205\353q@\232\231\001\301ffB\301\205\353\207\301\232\231I\301\244p\217\301\315\314\322\301\327\243\006\302\024\256\302C\270\036\305\277\356|?\277)\\\017@q=\032\301=\n[\301q=\224\301q=b\301\217\302\233\301\270\036\337\301\000\300\300C=\nw\300\315\314\254\300\274t\223\300)\\\317\277\000\000X\301ff\214\301\270\036\263\301\000\000\220\301\327\243\272\30133\277CffF\300R\270\336\300\000\000\010\301\360\247\366\300=\n\227\300\315\314\204\30133\245\301\205\353\313\301\315\314\250\301\\\017\302C=\n\267@\024\256\'@R\270\236\277\205\3531\300\311v\376\277\000\000\200?{\024.\301H\341n\301\366(\236\301\315L\301C\\\217\302\277ff\206@\315\314\214?\327\2430\300\232\231\211\300\022\203`\300\270\036\005\277ffF\301\232\231\203\301H\301\273C\244p1\301\217\302I\301\341z\334\300\n\327\037\301\232\231]\301q=v\301h\221i\301\217\3029\301\205\353\273\301q\235\267C\341z\004\301\303\365\232\301\270\036\247\301R\270r\301\366(\222\301=\n\261\301)\\\275\301%\006\267\301\270\036\237\301\354\261\273C\\\217\002A\217\302\365\275)\\3\301\024\256K\301\354Q\340\300\217\302!\301\037\205_\301\366(x\301\356|k\301\315\354\272C\270\036\305\277\n\327\323@\341z\324\277\000\000L\301\354Qd\301\315\314\010\301ff:\301\366(x\301ff\210\301\232\371\274C33\203@\n\327#@\037\205+A\366(\034@ff\n\301R\270\"\301ff\216\300\232\231\361\300\\\2176\301\000\200\276C33C@\315\314\344@\037\205\263@\354Q\\A\024\256\257@33\263\300\n\327\343\30033\263\277\000\000\220\300Rx\274C\205\353\201\300\256G\201\277\217\302E@ff\306?)\\\033A=\n\267?\\\217\032\301H\3412\301R\270\256\300\232\031\273C)\\/\300\232\231\331\300\000\000p\30033\263>\354Q\230\277=\n\337@\024\256\247\277ffF\301R\270^\301\000@\270Cff\266\300=\n\007\301\000\000H\30133\027\30133\253\300\341z\334\300\\\217\242?\354Q\340\300\315\314\220\301\n\267\270C{\024n?\327\243\230\300\354Q\360\300\270\0369\301\354Q\010\301\244p\215\300R\270\276\300\315\314\014@\\\217\302\300)|\276C\327\2438A\037\205GA\327\243\330@\303\365\200@\217\302\365\274\256GA@\n\327\343@\\\217\262@\n\327[A)\334\301C\000\000\330@\354Q\222A\217\302\231A\354QXA\341z,A=\n\327@\354Q\034A\205\353]A\256GEAf\346\300C\217\302\365\277\\\217\232@\303\365\202Aff\212A\232\2319A\217\302\rA\232\231\231@33\373@33?A\024\256\277C\366(\034\300\037\205\213\300\303\365\030@H\341^A\217\302mA\\\217\022A\244p\315@=\n\027@\270\036\255@f\246\274C\205\353\301\300\000\000\010\301R\270&\301H\341j\300\n\327\373@\315\314\014AffF@\354Q\270>\315\314l\300\037%\275C\244p}?q=\242\300\354Q\360\300H\341\026\301\037\205+\300\217\302\rA\327\243\034AH\341\202@\315\314\254?\n\267\272C\037\205\233\300\024\256w\300H\341\036\301\205\353E\301\327\243d\301\256G\361\300\000\000\200@\217\302\235@\270\036E\277q\335\272C\232\231\231>\205\353\221\300\341zd\300{\024\032\301\270\036A\301\n\327_\301\024\256\347\300\232\231\211@)\\\247@H\241\272C\327\243\360\276{\024.\276\303\365\240\300\256G\201\300\232\231!\301\327\243H\301)\\g\301R\270\366\300\270\036u@\232y\276C{\024\366@=\n\347@\327\243\360@q=*@\232\231i@q=\032\30033\233\300\327\243\330\300\n\327\243\274\232y\275C\000\000\000\300{\024\266@=\n\247@\327\243\260@\303\365(?33\323?\270\036\215\30033\333\300\354Q\014\301\000`\276Cff\346?\315\314L\276\024\256\357@\327\243\340@q=\352@\244p\035@\315\314\\@=\n\'\300\232\231\241\300\327C\275C{\024\016\300=\n\327\276H\341\032\300\327\243\250@\232\231\231@33\243@\217\302u>\244p\235?\\\217\232\300\315L\275C)\\\217=\232\231\t\30033\263\276ff\026\300H\341\252@\n\327\233@\244p\245@R\270\236>ff\246?\024.\300C\354Q\270@\\\217\272@=\ng@\270\036\255@q=Z@\232\2311A{\024*AH\341.Aq=\302@\354\021\276C=\n\207\300\270\036\305?{\024\316?\366(\034\277\354Q\230?)\\O\277\366(\334@\270\036\315@R\270\326@\270>\275C33\323\277\n\327\273\300\256G\341\275\n\327#\275\327\243\020\300\037\205\353\276\244p\035\300)\\\247@\354Q\230@\315\354\274C\n\327#\277\\\217\022\300\354Q\320\300\000\000@\277{\024.\277\232\2319\300\315\314\214\277ffF\300H\341\222@\205\013\300C\024\256\307@33\263@\315\314|@q=\212\276\024\256\257@\205\353\261@\217\302U@\341z\244@\303\365H@3\363\303C\205\353\371@\315\314`A\\\217VA\366(<A\256G\361@\315\314TA\205\353UAff2A33OA\366H\313CR\270jA\n\327\263A\217\302\345A\327\243\340A\244p\323A\024\256\261A\217\302\337A\354Q\340A\\\217\316Aq\375\311C\217\302%\300\256GAA\270\036\237A=\n\321A\205\353\313AR\270\276A\303\365\234A=\n\313A\232\231\313A\244\360\314C\315\314\274@\n\327S@\n\327\217A\354Q\316A\270\036\000B\270\036\373A\205\353\355A\366(\314Aq=\372ARX\317C\205\353\231@)\\+A\205\353\001A\354Q\266A\315\314\364A)\\\023B\315\314\020B33\nB\327\243\362A\256\347\311C{\024.\301q=\302\300{\024.\276\327\2430\300\\\217>A\217\302\235A\024\256\317A\\\217\312A)\\\275A\000\200\306C\205\353\331\300\037\205\215\301{\024N\301)\\\337\300\270\036\031\30133\243@\\\217NA33\231A{\024\224A\315l\313C\232\231\035A\\\217B@H\341\372\300\205\353A\300\024\2567@)\\\217>33oA{\024\266A\000\000\350A\327\343\311C\341zD\300\303\365\330@\217\302\365\274\\\217.\30133\303\300\315\314L\276\\\2172\300{\024>A\037\205\235Aq\375\311C\315\314L>\024\2567\300)\\\337@{\024.>)\\+\301\315\314\274\300\000\000\000\000\217\302%\300\256GAA\\o\313C\303\3658@\217\302E@\n\327\243<\205\353\035A\n\327C@q=\372\300\327\243@\300\303\3658@\232\231\231>\303u\311C\315\314|\300\024\256\207\277\366(\\\277\037\205{\300\244p\275@\n\327c\277\354Q<\301R\270\336\300\024\256\207\277=\312\311C\303\365(?\\\217R\300\315\314\314\276\315\314L\276\256GQ\300\\\217\322@\037\205k\276\217\3021\301\232\231\311\3003\363\310C=\n\327\277\\\217\202\277=\n\237\300\270\036\005\300\327\243\360\277ff\236\300\315\314\234@\341z\364\277\327\243L\301R\270\310C\037\205\353\276\303\365\010\300\244p\275\277\217\302\255\300\\\217\"\300\217\302\025\300\270\036\255\300{\024\216@\024\256\027\300\037\005\312Cff&@\303\365\010@\037\205\353>)\\\217?\270\0365\300\217\302u=\270\036\205>\n\3273\300\256G\341@\232\331\317C\\\217:A\366(dA\315\314\\A\205\353AA\341zLA\256G\rA\037\205;AR\270>A\232\231\rA\256\347\315C\303\365x\300\327\243\370@\205\353%A\\\217\036A\024\256\003Aq=\016A{\024\236@\\\217\372@\341z\000A\000@\322C=\n\013A\232\231\231@\024\256\203A\341z\230A\315\314\224A)\\\207A\327\243\214A{\024ZA\366(\204A\000\200\326C\000\000\010A\037\205\211A\315\314TA\024\256\307A\341z\334A\315\314\330A)\\\313A\327\243\320A=\n\261A3S\325Cff\026\300\315\314\304@\244pmA33/AH\341\264A\024\256\311A\000\000\306A\\\217\270A\n\327\275A\000@\325C\232\231\031\276\000\000 \300\000\000\300@=\nkA\315\314,A\024\256\263A\341z\310A\315\314\304A)\\\267AR\270\325C\327\243p?q=J?\024\256\307\277{\024\336@{\024zA\n\327;A33\273A\000\000\320A\354Q\314Af\246\325C)\\\017\276\315\314L?ff&?\232\231\331\277\232\231\331@\n\327wA\232\2319A{\024\272AH\341\316A\000\340\322C\232\231\261\300{\024\266\300\000\000\230\300\315\314\234\300\000\000\350\300\000\000\240?=\n\037A\232\231\301@\024\256\215A\354Q\322C{\024\216\277\270\036\325\300\232\231\331\300\037\205\273\300\354Q\300\300\217\302\005\301)\\\017>\256G\rA{\024\236@\256\247\321Cq=\252\277\366(\034\300\024\256\377\300{\024\002\301{\024\346\300H\341\352\300=\n\033\301\354Q\230\277\000\000\360@\256\007\325C\000\000\330@\244p\255@\205\353\211@R\270\236\277\327\243\260\277\256G\341\276=\n\027\277\366(<\300\205\353\261@\303\325\345C\244p\006B\244p!B\270\036\034B\024\256\027B\341z\001B\205\353\000B\024\256\004B{\024\004B)\\\365A\327c\360CH\341\250AH\341ZBH\341uB\\\217pB\270\036lB\205\353UB)\\UB\270\036YB\037\205XB\256\247\354C=\n\357\300q=ZA\000\000=B\000\000XB\024\256RBq=NB=\n8B\341z7Bq=;B\356L\363C\360\247TA\242E\272@\260r\327A\374)rB\376\224\206B\010\354\203B\266\263\201B94mB\335\244lB\315\214\362C\305 \300\277\327\243<Aq=\212@\244p\313A\366(lB{\224\203B\205\353\200Bff}B33gB\232\231\355Cff\036\301\177j6\301\205\353\361?\\\217\262\300\341zxA\\\217DB\\\217_Bq=ZB\315\314UB\366H\356C)\\\257?\341z\010\301\372~ \301\327\243P@R\270\206\30033\207A=\nJB=\neBR\270_B\3541\356C\354Q8\276\354Q\230?)\\\013\301B`#\301\270\036E@\341z\214\300\217\302\205A\354QIB\354QdB\000\300\351Cq=\016\301\270\036\021\301ff\366\300\315\314\214\301\331\316\230\301\205\353\271\300\341zT\301\\\217\372@\217\302%B{\364\352Cq=\032@)\\\317\300\270\036\325\300\256G\251\300=\ns\301+\207\205\301\232\231Y\300\205\353-\301\n\327#A%\346\353C\374\251\361?7\211\211@\252\361\222\3009\264\230\300^\272Y\300\376\324T\301\027\331l\3017\211\301\277F\266\017\301\232y\356C/\335\244@\256G\341@33\027A)\\\017?\\\217\302>\000\000\340?ff\002\301\177j\032\301\303\365h@\366H\354C\366(\214\300\313\241E?q=*@q=\242@\341zt\300\000\000\200\300\354Q(\300\341zH\301\372~`\301\000\200\355C\037\205\033@\232\231\371\277\221\355L@H\341\242@\000\000\360@\205\353\261\277\303\365\310\277\315\314L\276\232\231!\301\244P\354C\024\256\027\300\217\302u=q=\212\300\364\375T?{\024.@\366(\244@\327\243p\300\366(|\300\341z$\300f\306\354C\037\205k?\232\231\271\277H\341z?\232\231Y\300\211A\340?\303\365h@\232\231\301@\217\3025\300\256GA\300\327\203\360C)\\\357@ff\006A\303\365\300@)\\\007A\\\217\202@F\266\023A\205\3531A\341zXA\341z\224@f\246\364C\354Q\004A\000\000|A)\\\205A\315\314dA\n\327\205A\232\231EA\031\004\214A\270\036\233Aff\256A\n\367\365C\354Q(@ff.A=\n\223Aff\232A\244p\207AH\341\232A\024\256oAV\016\241A\366(\260A3\363\367C{\024~@33\323@\205\353mA\315\314\262A\366(\272A33\247A\327\243\272A\232\231\227A\345\320\300A\037e\371C\303\3658@\037\205\333@\n\327\027A{\024\216A\205\353\311A\256G\321A\354Q\276A\217\302\321AR\270\256Af\206\367C)\\o\300\232\231Y\277\024\256G@\000\000\270@\354Q`A\000\000\254A)\\\263Aff\240A\n\327\263A3\323\376C\232\231iA\217\302-A\000\000\\A\217\302\215A\315\314\242A\303\365\344Aff\020B{\024\024B\232\231\nBH\001\376C\205\353\321\277)\\OA\037\205\023A\217\302AA\327\243\200A\024\256\225A\n\327\327A\n\327\tB\037\205\rB\000\200\374C\327\243@\300\315\314\224\30033\037AR\270\306@\232\231\021A\270\036QA33{A\217\302\277A\232\231\373A\000`\362C\000\000\242\301{\024\272\30133\307\301\315\314$\301\327\243`\301ff2\301\217\302\345\300\232\231\221\300{\024n@\000\300\364C\000\000\230@\000\000x\301{\024\224\30133\241\301\232\231\261\300\327\243\024\301\315\314\314\300\037\205\033\300\315\314L>3S\362C33\233\300\315\314\314\275\315\314\242\301H\341\272\301\000\000\310\301ff&\301q=b\301\000\0004\301\303\365\350\300\256g\362C\n\327#>{\024\226\300\217\302u=\037\205\241\301\232\231\271\301R\270\306\301\n\327#\301\024\256_\301\244p1\301ff\360C\354Q\200\300ffv\30033\013\301\315\314|\300\232\231\301\301\024\256\331\301\315\314\346\301\000\000d\301\205\353\217\301\315l\362C\232\231\201@\n\327#=\315\314L>\315\314\224\300\315\314\314=33\241\301\256G\271\301ff\306\30133#\301\000\200\363C\232\231\t@ff\306@\366(\014@ff\026@\000\000 \300\000\000\020@\000\000\220\301{\024\250\30133\265\301\341Z\364CH\341\332?=\nw@\270\036\375@\232\231y@\205\353\201@q=J\277\244p}@\354Q\202\301ff\232\301\354Q\361Cq=\302\300\037\205\213\300\244p\r\300\037\205\353?H\341\n\300\327\243\000\300\037\205\333\300=\n\007\300H\341\262\301\024\016\362C\366(\274?33\223\300\303\3658\300\244p=\277\n\327S@333\277q=\n\277\341z\254\300\n\327#\277\n\367\361C\354Q8\276\270\036\245?\303\365\230\300\341zD\300\037\205k\277\354QH@\256Ga\277\354Q8\277q=\262\300\327\343\360C\232\231\t\300\270\036\025\300\366(\\\277\217\302\335\300=\n\247\300\341zD\300H\341z?\205\353A\300\024\2567\300\270~\357C\\\2172\300{\024\236\300\n\327\243\300\232\231i\300\037\205\033\301\366(\000\301\037\205\273\300\024\256\347\277q=\272\300\\\017\361C\354QH@{\024\256>\024\256\347\277R\270\376\277\270\036\005\277H\341\322\300\366(\234\300R\270.\300\303\365\250?f&\360C\303\365\350\277\024\256\247?\244p\275\277\354Qh\300\n\327s\300\217\302\025\300\\\217\006\301ff\326\300\232\231\221\300ff\347C\000\000\214\301\\\217\232\301\037\205\201\301\n\327\227\301=\n\251\301\341z\252\301R\270\236\301\256G\317\301\232\231\301\301\244P\352C\\\217\272@R\270:\301\n\327W\301\217\302%\301ffR\301\315\314t\301\024\256w\301\366(`\301\327\243\240\3013s\347C)\\\267\300\315\314\314=33\213\301\217\302\231\301R\270\200\301=\n\227\301q=\250\301\024\256\251\301\205\353\235\301\232\031\344Cff\326\300H\341F\30133\323\300\315\314\300\301)\\\317\301\354Q\266\301\327\243\314\301\n\327\335\301\256G\337\301=\312\343CR\270\036\277q=\352\300\315\314P\301=\n\347\300\217\302\305\301\354Q\324\301\256G\273\301\232\231\321\301\315\314\342\301\327\303\344C\232\231\371?q=\252?\n\327\253\300\232\2311\301\327\243\250\300\366(\266\301R\270\304\301\024\256\253\301\000\000\302\301\327\003\352C\000\000(A33GA\256G=A\366(\244@\232\231\031\277)\\\247@\354QD\301\244pa\301)\\/\301\256G\347C=\n\257\300\303\365\240@)\\\337@\037\205\313@{\024\256\276q=\302\300\217\302u\276\205\353\215\301\341z\234\301q=\346C\270\036\005\300\232\231\361\300\315\314<@\315\314\234@\303\365\210@H\341\032\300ff\002\301\341z\024\300\\\217\236\301\205\313\351C\037\205\343@\303\365\240@\256G\341\276\303\365 A\366(@Aq=6A{\024\226@\270\036\205\277\256G\231@H\241\361CR\270zAq=\266A\232\231\245A\024\256sA\n\327\315A\244p\335A\341z\330AH\341\242A{\024jAR\230\363C\037\205{@\315\314\234A\024\256\325A=\n\305A\256G\231A\256G\355AH\341\374A\205\353\367A\354Q\302A=\312\361C=\ng\300\n\327\243>\n\327\177A\315\314\270A\366(\250A\315\314xAff\320A\000\000\340A=\n\333A\000\300\362C\217\302\365?\354Q\330\277)\\\017@\256G\217A\366(\310A\037\205\267A\217\302\213A\217\302\337A)\\\357A\341\272\364C\244p}@\366(\274@\256G\021@ff\306@\303\365\256A\n\327\347A33\327A\244p\253A\244p\377A)\334\371C\366($A\037\205cA\270\036\201A\341zHA\024\256\203A\037\205\000B\303\365\034B\327\243\024B\037\205\375A\000\200\374C\303\365\250@\327\243xA\000\000\234A)\\\253A\341z\216A\205\353\255A\327\243\025B{\0242B\217\302)B\327#\374C\354Q8\277\205\353\221@\270\036mAq=\226A\232\231\245AR\270\210A\366(\250A\217\302\022B33/B\327\243\370C\000\000\340\300=\n\367\300\366(\034\300q=\372@\341z<A33[A\244p!A\354Q`A\037\205\355A=\352\363C33\027\301\232\231\203\301)\\\211\301q=>\301\327\243\320\277\270\036\025@\000\000\210@\n\327#?q=\222@\000\340\364C\217\302\365?\303\365\360\300\341zh\301\000\000t\301\037\205\037\301\341z\224>\000\000\210@\244p\305@\n\327#@\205k\360C\\\217\016\301\024\256\337\300\037\205\203\301\037\205\273\301\256G\301\301=\n\227\301\205\353\t\301\270\036\225\300)\\/\300f\206\357C\270\036\345\27733+\301\341z\014\301\n\327\221\301\n\327\311\301\232\231\317\301)\\\245\301\\\217&\301ff\316\300\366\210\371C\366(\240A\n\327\221A\270\036\025A\n\3273A\270\036\345?R\270\246\300\217\302\275\300ff&\277\217\302\031A\205\013\364C\024\256/\301\327\243\020A\000\000\350@\341z\324\277\270\036\205>=\n\023\301\037\205\201\301\256G\207\301{\024:\301\205\353\367C\000\000\370@R\270N\300\354Q\206A\000\000pAH\341\302@\366(\000A\354Q\270\277=\n\007\301\\\217\022\301)<\366C\024\256W\300\366(\214@33\323\300R\270VA{\024:A{\024.@\341z\224@\205\353\231\300\303\365<\301\366(\367C\315\314\354?\\\217\302\277)\\\307@\000\000\230\300\354QtA\024\256WAq=\222@\024\256\317@\244p=\300\000\300\372C\217\302\345@\341z\020A\270\036\265@\\\217VA\037\205\033@\232\231\263A\256G\245A\000\000<AR\270ZA\000\340\360C\000\000\236\301\270\036I\301\037\205+\301\244pa\301H\341\312\300\\\217\212\301\315\314,@\303\365h?\000\000\000\301\000\300\360C\000\000\200\276\000\000\240\301\270\036M\301\037\205/\301\244pe\301H\341\322\300\\\217\214\301\315\314\034@\303\365(?{\224\351C\244pe\301\244pi\301)\\\t\302\256G\331\301\341z\312\301\244p\345\301\244p\247\301\256G\377\301q=>\301q\275\353Cq=\212@\354Q \301\354Q$\301\366(\360\301R\270\266\301\205\353\247\301H\341\302\301H\341\204\301R\270\334\301H\001\353C\366(\274\277ff6@\n\3277\301\n\327;\301\205\353\373\301\341z\302\301\024\256\263\301\327\243\316\301\327\243\220\301\327\203\353C\\\217\202?ff\346\276\024\256w@\037\205\'\301\037\205+\301\217\302\363\301\354Q\272\301\037\205\253\301\341z\306\301\354\361\346Cq=\022\301\205\353\001\301\244p\031\301\327\243\250\300H\341\234\301H\341\236\301\244p\036\302R\270\001\302\327\243\364\301\037%\345Cfff\300\n\327K\301\037\205;\301=\nS\301\205\353\r\301\024\256\271\301\024\256\273\301\n\327,\302\270\036\020\302\315\214\345C)\\O?\\\2172\300H\341>\301\\\217.\301{\024F\301\303\365\000\30133\263\30133\265\301\232\231)\302\n\367\350C\\\217\332@\341z\364@\256G\201@33\243\300\\\217\202\300\232\231\261\300\244p\235\277\270\036y\301\270\036}\301)\274\346CR\270\216\300\024\256\027@\037\205K@=\n\327\276\303\365\030\301\327\243\010\301\366( \301{\024\266\300q=\240\301R\370\352C\037\205\007A\354Q\200@\244p-Aff:A\315\314\000A\037\205\213\277)\\\217\275\270\036\305\277\205\3531@\315\014\354Cq=\n@{\024*A\244p\305@\000\000PA\303\365\\A)\\#A\303\365\210?\217\302\005@R\270\036?\024\356\355C\327\243p@\244p\275@q=fAH\341\036A{\024\206A\\\217\214A\037\205_A\\\217\232@33\273@\315\354\355C\n\327#\274\000\000p@\270\036\275@{\024fAR\270\036A\000\000\206A\341z\214A)\\_Aq=\232@\\O\353C)\\\247\300\024\256\247\300\244p\275\277{\024.?ff\022A{\024\226@\354Q8A\256GEA\024\256\013A\nw\350C{\024\266\300R\270.\301H\341.\301\244p\345\300\354Q\240\300\244p]@\000\000\200\277\\\217\272@\341z\324@\217b\340C\256G\201\301\315\314\256\301\327\243\330\301R\270\330\301\327\243\272\301)\\\251\30133K\301\256G\211\301\256G%\301\232\271\340C{\024.?\024\256w\301)\\\251\30133\323\301\256G\323\30133\265\301\205\353\243\301\354Q@\301\n\327\203\301q\035\340C\366(\234\277q=\n\277\232\231\205\301\270\036\263\301\303\365\334\301=\n\335\301\303\365\276\301\024\256\255\301\n\327S\301\nW\333C\315\314\030\301\354Q,\301\244p!\301\000\000\322\301\037\205\377\301\024\256\024\302R\270\024\302\024\256\005\302{\024\372\301\366x\334C\303\365\020@\270\036\351\300{\024\010\301ff\372\300H\341\277\301ff\355\301\270\236\013\302\366\250\013\302q=\371\301f\306\344C\n\327\204A\303\365\226A\270\036\025A\232\231\001A\341z\014A\366(\354\300\270\036Q\301ff\222\301\341z\222\301\354\321\343C\341z\364\277\270\036kA\024\256\207A\270\036\355@{\024\306@\n\327\333@\327\243\024\301\024\256o\301\024\256\241\301)\\\343C\037\205k\277\270\0365\300ff\\A\354Q\200A\024\256\317@\327\243\250@ff\276@)\\#\301ff~\301\341z\342C\256G\341\277\037\205+\300H\341\222\300q=@A\341zdA)\\\227@\327\243`@{\024\206@\037\205?\301\000`\343C\270\036\345?\217\302\365<\n\327c\277333\300H\341\\A\\\217\200A\327\243\320@\232\231\251@)\\\277@\327\203\335C\037\205;\301H\341\036\301=\n;\301\217\302I\301\354Qh\301\244p\005@33\213@ff\246\300\244p\315\300\000\000\340C=\n\237@\000\000\330\300R\270\236\300=\n\327\300\341z\364\300\315\314\030\301\217\302\341@\270\036\025A\037\205k\276R\030\337C\024\256\347\277q=J@\303\365\010\301\327\243\330\300\341z\010\30133\027\301\217\3025\301\n\327\247@\354Q\360@\315l\334CH\341\252\300\315\314\344\300\037\205\013\300ff^\301\217\302A\301\205\353]\301\327\243l\301\232\231\205\301\\\217\302\275q\235\337C\366(\314@\270\036\205?\270\036E\277ff\206@\327\243\360\300)\\\267\300\024\256\357\300\\\217\006\301\270\036%\301\327\243\336C\232\231\371\277\217\302\215@\303\365h\277{\024.\300\000\000\020@\037\205\027\301\217\302\365\300=\n\027\301\217\302%\301fF\344C\354Q4A\270\036\025A33{A\217\302%A\315\314\010A\354QXAff\346?\217\302e@q=\352?\037\005\347C\024\256\257@{\024\206A\303\365lA\037\205\251A\232\231}A\327\243`A{\024\230A\256G\351@\256G\021A=\352\346C=\nW\276\303\365\250@ff\204A\232\231iA\n\327\247Aq=zA\256G]Aff\226A\\\217\342@\000\200\350CH\341J@\244p=@33\007A\217\302\235A\366(\216A33\301A\341z\226A\000\000\210A\217\302\257A\\\317\347C\327\243\260\277\270\036\345?q=\312?q=\342@R\270\222A\270\036\203A\366(\266A\244p\213A\205\353yA\244\360\346CR\270\336\277\024\256G\300\315\314L=\n\327#\276\\\217\252@\315\314\204AffjAq=\250A=\n{A\303u\346C\217\302u\277\315\314,\300\\\217\202\300\303\365h\277)\\\217\277\n\327\213@q=zA=\n[A\\\217\240A{\024\345C\327\2430\300{\024n\300R\270\256\300H\341\332\300H\341j\300\354Qx\300{\024\316?{\024NAH\341.A\327C\345C\244p\275>\303\365\030\300ffV\300H\341\242\300=\n\317\30033S\300\327\243`\300\244p\375?\000\000TA\315L\354C\270\036aA=\ngAH\341:A\037\205+A\024\256\017A33\363@\354Q,A\303\365(Aff\200A\217\202\353Cq=\312\277\n\327GA\217\302MA\232\231!Aq=\022A\315\314\354@\327\243\300@=\n\023A\024\256\017AH\301\353CH\341\372>\037\205\213\277\024\256OA\232\231UA\244p)A{\024\032A\341z\374@\354Q\320@H\341\032A\341\032\352C33S\300\n\3273\300\341z\214\300H\341\032A\315\314 A\256G\351@\\\217\312@H\341\222@\244pM@\000@\351CH\341\332\277\354Q\240\300\327\243\220\30033\303\300=\n\377@\244p\005A\\\217\262@\n\327\223@\354Q8@\327C\350C\366(\374\277\037\205k\300)\\\337\300\024\256\317\300\270\036\001\301\000\000\300@\n\327\313@=\ng@\232\231)@\354\261\351C=\n7@\n\327c?\205\353Q\277\n\327\203\300\354Qh\300R\270\246\300\217\302\rA\024\256\023A=\n\317@\037%\351C\315\314\214\277\256G\341?=\nW\276\217\302\365\277=\n\247\300)\\\227\300\205\353\311\300\354Q\370@{\024\002A\217\"\355C)\\\377@\366(\334@\n\327\033A\327\243\370@\205\353\301@\327\2430@\000\000P@\217\302\325?\n\327{Aff\354C\366(\274\277\354Q\320@\270\036\255@\354Q\004A\232\231\311@H\341\222@\270\036\245?\n\327\343?\315\314L>H\001\356C\244pM@R\270\336?\037\205\033A\205\353\tA\024\2567A\366(\030A\232\231\371@\000\000\220@\024\256\237@3\323\353C\037\205\213\30033\223\277\024\256\'\300\037\205\253@\354Q\210@\n\327\343@\315\314\244@\366(\\@)\\\017>q=\361C\256G-A=\n\317@H\341\032A)\\\003A\037\205\201A\244pqA\232\231\217A\024\256\177A\354QdA=\212\357C\232\231Y\300\217\302\355@\341zD@\303\365\310@\205\353\231@\327\243LA=\n;A\315\314hA\256GIA\327\303\356Cff\306\277ff\236\300\366(\274@\\\217\302?)\\\227@\327\243P@\n\3273Aq=\"A\000\000PA\270\376\356C\037\205\353>\037\205\213\277\024\256\217\300H\341\312@\244p\375?{\024\246@{\024n@33;A\232\231)A\n\227\360C\366(L@\232\231i@ff\006@ff\246\277\341z\030A\244p\245@{\024\006A\270\036\335@q=nAH\201\357CH\341\n\300\\\217\202?\244p\275?)\\\217\275{\024^\300\037\205\353@\000\000@@R\270\306@\024\256\227@\244\260\353C\366(\364\300\315\314\034\301\037\205\323\300\315\314\304\300ff\366\300\232\2311\301q=\212\276\366(\224\300\217\302\265\277\000\200\352C\354Q\030\300\366( \301H\341B\301\n\327\017\301\341z\010\301\256G!\301\024\256W\301\232\231)\300\354Q\340\300\327\343\350C{\024N\30033\263\300\024\256S\301ffv\301)\\C\301\000\000<\301\315\314T\301\232\231\205\301\n\327\273\300q\235\354Cff\356@)\\\207@\315\314\354?\303\365\270\300ff\376\300\354Q\230\300\232\231\211\30033\273\300\000\000\024\301\\\217\353C=\n\007\300H\341\252@\024\256\007@\270\036\205\276\341z\374\300\303\365 \301\n\327\333\300\270\036\315\300R\270\376\300\217\242\351Cffv\300R\270\276\300R\270\276?\244p\335\277\037\205\203\300\n\327;\301\\\217^\301\037\205+\301\366($\301\256g\351C\037\205\353\276\205\353\211\300\244p\315\300\n\327\203?\366(\014\300q=\222\30033C\301\205\353e\301H\3412\301\000\240\352C\366(\034@\244p\375?)\\\357\277R\270~\300{\024^@\000\000\200>\354Q\010\300\366(\034\301H\341>\301)\274\346C\303\365\370\300H\341\252\300\232\231\271\300ff\032\301\366(<\301\205\353\211\300\303\365\360\300\\\217\036\301\354Q\214\301\270^\351C\327\243\250@\327\243 \300)\\\217\275\024\256\007\277\366(\214\300\024\256\317\300\217\302u?\327\243\020\300\341z\224\300\327\343\346CR\270\236\300R\270\236>=\n\357\300\303\365\240\300\024\256\257\300\244p\025\301337\301\000\000\200\300=\n\347\300\000\000\345C\205\353q\300\n\327\013\301{\024^\300\000\0004\301\303\365\014\301\354Q\024\301\205\353Q\301\024\256s\301\303\365\370\300\024N\354C\217\302iA\256G-A\n\327\273@q=2A=\nW@\232\231\271@H\341\252@R\270\276?R\270\036\277\341z\353C33\323\277)\\OAH\341\022A=\n\207@\n\327\027AH\341\332?\315\314\204@\366(l@\n\327#\276\366(\353C\n\327#\277\\\217\022\300\270\036EA\327\243\010A\270\036e@\232\231\rA\303\365\210?\327\243`@33C@\315L\353C)\\\217>\354Q\270\276\327\243\000\300\232\231IA\270\036\rA=\nw@{\024\022A\315\314\254?\\\217r@\024\356\355C\354Q\250@\256G\261@\315\314\234@\000\000P@H\341\216A\256GaA\205\353\021Aq=fA\037\205\323@)\374\354C\205\353\361\277\024\256W@\232\231i@\327\243@@{\024\256?\037\205\177A=\nCA)\\\347@\000\000HA=*\355C\354Q\270>\n\327\303\277R\270n@\354Q\200@\024\256W@\366(\334?\327\243\202A\315\314HAH\341\362@\217\302\361C=\n\023A\315\314\030A\270\036\365@R\270NA33SA\303\365HA\\\217.A\366(\314A\205\353\255A\024\216\363C\217\302e@\341zLAq=RA\000\0004A{\024\204A\354Q\206A33\201A\000\000hAH\341\350A\315L\371C\n\3277A\256GqA\366(\302A=\n\305A\205\353\265A\000\000\340Aq=\342A\270\036\335A\205\353\317AZ\364\370C`\3450\277\264\310,AX9fA\313\241\274A\022\203\277AZd\260A\325x\332AF\266\334A\215\227\327A\3212\372Cd;\037@\031\004\346?\215\227TA\031\004\207A7\211\320A\177j\323A\307K\304AB`\356A\262\235\360A\366\210\375C7\211\325@u\223\022A\037\205\007A\024\256\237Aff\274A\303\365\002Bff\004B\024\256\371AH\341\021B\303\265\001D\354Q<AD\213\223A\260r\247A\205\353\241A\n\327\375A\256G\rB=\n2B\341z3B\205\353+B\000\220\001D=\n\027\277H\3412A\362\322\216A^\272\242A33\235A\270\036\371A\205\353\nB\024\256/B\270\0361B\327\303\000D\366(L\300\205\353q\300\024\256\377@\246\233jA?5\211A\024\256\203A\232\231\337A\354Q\374A\205\353\"B\\\337\000D\366(\334>\327\2430\300ffV\300R\270\006A\356|qA\343\245\214A\270\036\207A=\n\343A\217\302\377A\205\253\377C\315\314\204\300{\024n\300\270\036\335\300\000\000\360\300\327\243\210@\207\026/A`\345VA\n\327KA\n\327\301A\217b\374Cq=\322\300\037\205+\301\327\243$\301\024\256W\301\270\036a\30133\023\300\236\357\213@P\215\333@\244p\305@\270\236\374C\327\243\360>33\303\300\000\000$\301\270\036\035\301\366(P\301\232\231Y\301q=\352\277\333\371\232@\215\227\352@\205k\373C\232\231\031\300=\n\367\277\000\000\010\301ffJ\301\037\205C\301\\\217v\301\000\000\200\301)\\\207\300\035Z\034@\354\361\374C33C@ff&?)\\\217?ff\256\300\232\231\031\301R\270\022\301\217\302E\30133O\301=\n\227\277\315\314\000D\303\365\024A\217\302EA)\\\037AH\341&A=\nw@\341z\224\276)\\\017>33C\300\303\365h\300\327\223\000D\n\327c\277R\270\006A\037\2057A\270\036\021A\327\243\030A{\024>@=\n\227\277\000\000@\277\366(|\300)\374\376CH\341\212\300)\\\247\300\\\217\202@\366(\344@)\\\227@ff\246@)\\\257\277\327\243\260\300H\341\242\300\n\207\000D\341z\204@\315\314L\276\037\205\213\277\037\205\003A\354Q4A\205\353\rA\244p\025A\256G1@\327\243\260\277\270>\003D\205\353-A\366(pAR\270*A\341z\034AR\270\230A\270\036\261A\205\353\235A\024\256\241Aq=ZA\341\332\003D\366(\034@\303\365TA\232\231\213A\217\302QA\037\205CAq=\254A\327\243\304A\244p\261A33\265A\244\220\004D\217\3025@\303\365\250@33\201A\354Q\242A33\177A\303\365pA\303\365\302A)\\\333A\366(\310A\217\222\003D{\024~\300\327\243\220\277\024\256\247?H\341BA\\\217\202A\024\256?A\244p1A33\243A\232\231\273A\244@\003D\n\327\243\277\000\000\250\300q=\032\300\217\302\365<ff.A\327\243pA33+A\303\365\034A\303\365\230A\316\254\002Dg\325\023\300\354\300e\300\263\352\361\300l\t\227\300\342\351\021\300\rq\tA}\256KA\331=\006A\322\000\360@R\230\004D\276\301\365@\n\327\253@H\341\202@\217\302\365=\244p=@\315\314\254@\366(\202A\256G\243A\\\217\200A\303\225\005D\244p}@\010=:A\256G\025A\315\314\000A\\\217\202@\244p\335@\217\302\025A\n\327\241A\303\365\302ARh\007D\256G\351@\000\0004Aop\227A\303\365\204A\244puA\205\3535A)\\cA33\205A\366(\334A\232\331\006DR\270\016\300\205\353\241@\354Q\020Ae\231\205Aq=fA\217\302QAq=\022A\024\256?AR\270fA\327\243\007Dq=J@{\024n?\037\205\003AH\341BA\023\341\236Aff\214A\366(\202A\315\314DAq=rA\303\325\007D\024\256G?\366(|@H\341\332?\000\000\020A)\\OA\204\036\245A\327\243\222Aff\210A\256GQA\024\036\010D\327\243\220?\341z\364?q=\242@\217\3025@{\024\"A\244paA\301(\256A\024\256\233A\244p\221A\037U\010D\366(\\?R\270\376?\256G1@\217\302\275@\315\314l@\n\327/A33oA\t\n\265A\\\217\242A=\n\nD\\\217\332@{\024\366@\270\036\rA\232\231\031A\366(LA\341z(A\\\217\216Aq=\256A\340\255\353A\\?\nD\341zT?\270\036\365@\354Q\010Aff\032AH\341&A\244pYA\217\3025A33\225AH\341\264A\000\300\nD\327\243\000@\217\3025@R\270\032A\341z(A\\\217:A=\nGA\232\231yA\205\353UA\256G\245A\000`\tD\000\000\260\300)\\_\300q=*\300\244p\205@\303\365\240@\270\036\305@{\024\336@\232\231!A\n\327\373@\303%\tD\303\365h\277\270\036\315\300\315\314\214\300\341zd\300\327\243P@\n\327\203@\000\000\250@\303\365\300@=\n\023A\256\007\002D\217\302\343\301=\n\353\301\037\205\013\302\341z\003\302\366(\000\302\024\256\311\301\315\314\302\301\217\302\271\301\037\205\263\301\244 \000D\037\205\363\300\354Q\020\302\303\365\023\302\303\365)\302\205\353!\302\232\231\036\302\256G\003\302\024\256\377\301\327\243\366\301\002\200\000D\231\273\276?9\326\303\300\017\\\n\302\346\377\r\302\346\377#\302\250\365\033\302\275\243\030\302\243\243\372\301[\302\363\301H\341\376C\346\256\207\300\000\0000\300\217\302%\301\354Q\033\302\303\365\036\302\303\3654\302\205\353,\302\232\231)\302\256G\016\302\000\000\376C\256G\341\277\322\000\300\300\354Q\220\300\205\353A\301)\\\"\302\000\000&\302\000\000<\302\303\3653\302\327\2430\302\354\361\377C\303\365x@\354Q\010@\341\013\007\300R\270\036\277\024\256\003\301\315\314\022\302\244p\026\302\244p,\302ff$\302\n\007\001D=\n\207@\217\302\001A33\313@\232\010\007@fff@\354Q\200\300\205\353\001\302\\\217\005\302\\\217\033\302\000\000\377C\037\205\303\300\205\353\361\277\000\000\000@\217\302u>\322\000\200\300\327\243 \300\205\353!\301)\\\032\302\000\000\036\302)<\000D\366(<@H\341J\300ff\206?{\024\236@\037\205K@[\261\207\277\366(\334>\217\302\345\300\232\231\016\302H\201\377C=\n\367\277\256G\201?33\243\300\256Ga\277\327\243@@\000\000\240?\314]?\300\000\000\300\277\217\302\021\301\000\200\373C\366(\000\301=\n\037\301\000\000\340\300\217\302Q\301q=\016\301\000\000\240\300\354Q\330\300i\0000\301\366(\030\301\000\000\377C\000\000\340@\256G\201\277\366(<\300\000\000\000\000\037\205\303\300\205\353\361\277\000\000\000@\217\302u>\322\000\200\300H\001\001D\327\243\300@\354QPA\354Q\240@\270\036E@\327\243\300@\354Q\270\275\366(\204@\354Q\000A\354Q\310@\354q\003D\366(\034A\341z|Aq=\266A\354QlA\244pMA\341z|AR\270\032Aq=^Aq=\216A\270\256\000D\315\3140\301\270\036\245\277)\\\227@\024\256;A{\024n@\270\036\345?)\\\227@\327\243\260\277\217\3025@\000\360\000D\\\217\202?\341z \301q=\212\276\000\000\270@\000\000LA\024\256\227@\n\3273@\000\000\270@\354Q\270\276\000\340\000D\000\000\200\276\270\036E?\341z$\301\270\036\005\277\000\000\260@\000\000HA\024\256\217@\n\327#@\000\000\260@\315L\376C\315\314\334\300\315\314\344\300\366(\304\300\244p\211\301\244p\355\30033\263\27733\263@q=\032\300H\341\212\300f\306\370C\315\3140\301\232\231\217\301\232\231\221\301\244p\211\301\n\327\341\301\217\302\223\30133G\301ff\256\300)\\W\301\217\302\365C\303\365\300\300\327\243\210\301\n\327\277\301\n\327\301\301\024\256\271\301=\n\t\302\000\000\304\301\n\327\223\301\024\2567\301\037\005\372C\354Q\010A)\\\037@\303\365\010\301)\\w\301)\\{\301=\nk\301\205\353\315\301\024\256\177\301)\\\037\301\303\365\370C\024\256\007\300\315\314\314@\244p\275>H\341*\301\327\243\214\301\327\243\216\301\341z\206\301H\341\336\301\315\314\220\301\024N\375C=\n\013Aq=\322@\244pqA\303\365\020AR\270\376\277q=\016\301q=\022\301\205\353\001\301)\\\231\301\0000\000D\341z\304@\256GmA)\\KA\n\327\251A33sA\315\314\204@\000\0000\300\000\000@\300\244p\375\277)\014\000D)\\\017\277\\\217\262@\354QdAffBA)\\\245Aq=jA\217\302e@\n\327S\300\n\327c\300\000\300\000D\n\3273@\000\000\020@q=\006A\327\243\210A)\\oA\n\327\273A\232\231\213A\315\314\314@\000\000\000\277\244P\000DR\270\336\277\303\365\210?\\\217\002?\315\314\324@\244puA\037\205SA\205\353\255A)\\{A\270\036\225@33\375C\037\205\333\300\232\231\t\301\256G\271\30033\313\300=\nW\276\024\256\007A\037\205\313@{\024nA\232\231\rAR8\000D)\\\317@\\\217\302\276\024\256\007\300\327\2430?\270\036\005>\327\243\310@)\\oA\244pMAH\341\252A3\263\377C\244p\275\277\000\000\240@{\024\356\277fff\300q=J\277\315\314\254\277\256G\231@\024\256WA\217\3025A\000\320\000Dffv@\024\256\027@\232\231\rAR\270\376?\000\000\200>\n\327C@\000\000 @q=\nA\327\243\212A\232I\003Dff\036A\000\000\\A\354QDA\000\000\226Aq=>Aff\"A)\\OAffFA\354Q\224A3\363\003D\232\231)@\315\314HA33\203AR\270nA33\253A\327\243hA\315\314LA\217\302yA\315\314pAH\341\002D\303\365\210\300\327\243\320\277\354Q\004A\205\353AAq=*A\303\365\210A\366($A\354Q\010A\256G5Af\326\001D\244p\205\30033\007\301\232\231\271\30033\203@ff\376@=\n\317@33OAH\341\302@33\213@\270\236\000D\n\327\233\300\327\243\020\301\270\036U\301R\270*\301\270\036E\277\270\036E@\315\314\314?\256G\001A\366(\234?\037U\002D33\333@\244p\375?\366(\014\300=\n\317\300\341zt\300\\\217\302@H\341\036A33\007AH\341nA\232\251\002D\303\365\250?R\270\002A33S@R\270^\277\315\314\244\300\000\000 \300\315\314\354@\000\0004A\354Q\034A\3541\003D\354Q\010@\315\314\\@\315\314$A\217\302\255@\256G\241?\256GA\300\244p\275\276\341z\030A{\024VA\0000\004D{\024~@33\303@\244p\355@\354QdAff\026A)\\\247@33s?fff@\000\000XA3S\003D\315\314\\\300\270\036\005?\232\231)@{\024~@\270\036-Aff\276@\n\327\343?\000\000 \300\232\231\031>H\321\005D\037\205\037A\327\243\320@\n\327\'A\205\353IA=\n_A\354Q\246AR\270~A\000\000<A=\n\357@f\266\010D\256G9Aff\254A\315\314\220A\\\217\260A\232\231\301A\366(\314A\341z\001B\000\000\334A\327\243\272A\0375\nD)\\\277@\341z\214Aq=\334A\327\243\300Aff\340A\244p\361A\000\000\374Aff\031B\205\353\005Bf\006\014D\327\243\350@\000\000TA\327\243\306A33\013B\315\314\372A\256G\rB\315\314\025B{\024\033B\341z6BH\001\016D\244p\375@=\nsA)\\\251A\000\000\003BH\341*B{\024\035B\303\365,B\341z5B\217\302:B\000@\016DH\341z?ff\016A)\\\201A33\261A\205\353\006B\315\314.B\000\000!BH\3410Bff9B=\n\016D=\nW\277)\\\017>\303\365\000A\256GuA\341z\252A\\\217\003B\244p+B\327\243\035B\037\205-B\000\340\rD\303\365(\277\000\000\300\277\270\036\005\277\315\314\354@R\270jA33\245A\205\353\000B\315\314(B\000\000\033BH\321\rD\037\205k\276\n\327c\277\244p\335\277\000\000@\277\244p\345@=\ngA)\\\243A\000\000\000BH\341\'B2\243\021DxztAd\314pA\010=fAd\314XAxzhAe\231\263A[\302\355A\263\314\016B\236\036=B\366\030\022Df\210\353?\303\365\210A\270\036\207A\n\327\201Aq=vA\303\365\202A\354Q\302A\341z\374A\366(\026BF\001\022D\277}\275\276\366(\274?\314\377\205A\301(\204A\'\302}A\203QpA\227\377\177A\365[\277A\352\204\371A\354\301\020DC\255\237\300\037\205\253\300\013Fa\300\366(<A\341z8A\205\353-A\341z A\366(0A\244p\227A3\203\024D\354QpAJ{ A\\\217\032Ai\0008Aq=\326Aff\324A\270\036\317Aff\310Aq=\320A\256g\030D\270\036yAR\270\364A\001\315\314A\n\327\311A\221\217\330Aff)B\341z(B\n\327%B\341z\"B\327\313\031D{\024\262@{\024\251A\270\236\020B R\371A)\\\366AX\212\002B\366\250?Bq\275>B\232\031<B\366X\034D\256G#A\354Q|AR\270\372A\244p9B\373z%B\000\000$BC\\+B\341zhB\\\217gB\000\200\033D\303\365X\300{\024\332@{\024FA\232\231\337AH\341+B\237\353\027B\244p\026B\347\314\035B\205\353ZB\366X\037Dq=vA\000\000@A\327\243\261A\366(\336A)\\-B\244piB\373zUB\000\000TBC\\[B\n\007\033Dq=\212\301\205\353\361\277\303\365\250\300\232\231\235@\n\327\'A\341z\320A\354Q$BC\\\020BH\341\016B\000\000\032D\037\205\203\300\270\036\253\301\000\000\300\300q=\026\301\327\243P?\366(\314@\232\231\257AH\341\023B?\327\377A\270^\036D\n\327\213A\205\353UAq=z\300\024\2567A\244p\001A)\\\222AH\341\276AR\270\035B\315\314YB\256\347\037D\341z\304@\303\365\274A{\024\234AR\270\016@\303\365\214A\024\256cA\341z\303A\000\000\360A\256G6Bq-!DH\341\242@\024\2563A\024\256\345A\315\314\304Aq=\352@\024\256\265A\\\217\232A33\354A)\\\014B\000\260\"D\256G\301@{\0242A\366(\212A\000\000\013B\270\036\365A\217\302UA\000\000\346AH\341\312A\217B\016BH\361(D\366(\310A\341z\370A\232\231\020B\366()B{\024oB\327\243^B\037\205\031B{\024WB\037\205IB{\364(D\315\314L=\\\217\310AH\341\370A\315\314\020B)\\)B\256GoB\n\327^BR\270\031B\256GWB\244 \'D\205\353\351\300\354Q\350\300{\024\216Aff\276A\270\036\347A\270\036\014B=\nRB\232\231AB\303\365\370Af\246(DH\341\302@\366(\234\277\217\302\225\277\315\314\276A\270\036\357A\205\353\013B\341z$BffjB\303\365YB\270\316)D\366(\224@\037\205+Aq=Z@\244p]@\n\327\343A{\024\nB\244p\036B\000\0007B\205\353|BH\261-D\327\243xA)\\\241A{\024\322A\232\231\227A\000\000\230A{\0240Bq=HB\232\231\\B\366(uB\000\3000D\024\256CA\366(\336A\232\231\001B\303\365\031B\244p\371A\n\327\371A\000\000aB\366(yB\217\302\206Bq\315/D\\\217r\300=\n\007A\n\327\277AH\341\344A\315\314\nB\270\036\333A\037\205\333A\n\327QB\000\000jB\000\3201D\327\243\000A\000\000\210@\n\327\203A{\024\000B\232\231\022B\303\365*BR\270\rB\205\353\rB\000\000rB\232i5DfffA\037\205\263A33\225A=\n\367A\024\2569B33LB\\\217dB\354QGB\037\205GB\217r9D\270\036\201A\354Q\364A\354Q\032B\366(\013B{\024<Bq=zBHa\206B\\\217\222B\244\360\203B\'<7D\002\232\r\301\334F\351@\352\204\255A\326\326\355A\352\204\317A\372\255\030B\360\326VB\017\\iB\034\334\200B\303u-DLf\034\302\315\314?\302\341z\376\301\256G\213\301\205\353\025\301\\\217R\301{\024n\277\217\302iA\205\353\231A\024\376%D\303\365\356\301\227\360\211\302\327\243\233\302R\270v\302\270\036=\302\303\365\034\302\270\036,\302ff\366\301\366(t\301{\004\036D33\377\301{\024w\302d\275\311\302\244p\333\302\366(\273\302)\\\236\302\256G\216\302)\334\225\302\315\314z\3023#%D\n\327\343AH\341Z\300\366(\005\302\241\307\220\302\341z\242\30233\202\302\315\314J\302\327\243*\302\315\3149\302\205k D\303\365\226\301\217\302\031A\354Q\262\301\327\243P\302\022\205\266\302R8\310\302\244\360\247\302\327#\213\302\270\036v\302\232i\035D\341z@\30133\367\301H\341\032\300\256G\t\302Ha\200\302n\224\316\302\256G\340\302\000\000\300\30233\243\302Rh\036DR\270~@\315\314\000\301)\\\327\301\024\256\307?R\270\362\301\n\327p\302\253\236\306\302\354Q\330\302=\n\270\302fv\034D\303\365\370\30033s\300\256G}\301\315\314\n\302=\n\307\300\341z\030\302\341\372\207\302\007.\326\302H\341\347\302\217\"\"D\037\205\265A\\\217nA\270\036\227A\037\205\333@\366(@\301\217\302\203AH\341v\301335\302\300\314\250\302H!%D\024\256?A\024\256\nB\270\036\327A\303\365\366AR\270\226A\217\302\365\274\232\231\343A\315\314\\\300\256G\005\302\315,)D\244p\201A\256G\341AffKB\256G,B33<B{\024\014B33\201A\037\2052B\024\256KA\000\200&D33+\301)\\\257@\024\256\213A\232\231 B\341z\001Bff\021B\\\217\302Aff\256@R\270\007B{d(Dq=\362@\354QH\300\315\314PAq=\310AH\341>B\217\302\037B\024\256/B\270\036\377A\354QPA\244\020-D\037\205\225A{\024\322A\303\365xA\205\353\375AH\341.B\354\321\204B\037\205jB\244pzB\354QJB\000@.D\024\256\227@\244p\273A\000\000\370Aff\242A\205\353\021B\n\327AB\315L\216B\341z}B3\263\206B\000@-D\000\000\200\300\244p=?\244p\233A\000\000\330Aff\202A\205\353\001B\n\3271B\315L\206B\341zmB\354a*D\037\2057\301\037\205w\301\024\256+\301R\270\376@\341zxA\\\217\232@{\024\250A\303\365\003BR\270^B=\n+D\354Q(@\244p\r\301\244pM\301\232\231\001\301\244p)A\256G\221AR\270\356@\270\036\275A\341z\016B\244\240.D\232\231eA\n\327\207A\354Q\260@\256G\301?\000\000\310@\037\205\307A=\n\002B\341z\256A\303\365\027B\244\3202D\000\000\206A\315\314\370A\205\353\006B{\024\262A{\024\222A\000\000\270A\217\302&B=\nEBq=\032B\256\2672D\024\256\307\276H\341\202A\024\256\365A)\\\005B\303\365\256A\303\365\216AH\341\264A33%B\341zCB\341\2323D33c@q=J@\256G\237A=\n\tB\\\217\023B)\\\313A)\\\253A\256G\321Aff3B\016\315.D^\272\231\301\360\247z\301\260r\200\301\374\2511?9\264pAZd\215A+\207\306@V\016\r@?5\336@f\326.D\006\201\025>\\\217\230\301\354Qx\301\\\217~\301=\nW?=\nsA\\\217\216A33\313@ff\026@3\203-D\232\231\251\300\221\355\244\300\303\365\302\301\\\217\246\301\024\256\251\301R\270\216\300q=\036A\354QHAff\206?q},DH\341\202\300q=\026\301m\347\023\301\024\256\343\301\256G\307\301ff\312\301\315\314\010\301\232\231\271@H\341\006A\270N\'D\n\327\245\301\\\217\306\301\303\365\360\301\301\312\357\301\217\302D\302\\\2176\302\270\0368\302q=\352\301H\341n\301fV(D\n\327\203@H\341\204\301\232\231\245\301\000\000\320\301\376\324\316\301\256G4\302{\024&\302\327\243\'\302\256G\311\301\256W)D\327\243\200@q=\002A\244pI\301\244p\205\301\n\327\257\301\010\254\256\30133$\302\000\000\026\302\\\217\027\302)l,D\270\036EAR\270\202A\024\256\243Aq=\212\276\037\205\213\300\\\217\032\301X9\030\301\n\327\345\301\244p\311\301),.D\000\000\340@\\\217\232AR\270\272A\024\256\333A)\\\327@\303\365(@q=*\300`\345 \300\n\327\255\301\270./D\256G\201@\327\2430AH\341\272A=\n\333A\000\000\374A\354Q,A\217\302\325@\327\243\260?\370S\303?\303\2651D\217\302!AffbA33\251AH\341\005B\303\365\025B\244p&B=\n\247A\354Q\206A\n\3277A\\//D\232\231!\301\n\327#<\232\231\201@\315\3140A\303\365\272A\270\036\333A{\024\374A\341z,A{\024\326@\354\241/D\270\036\345?\303\365\004\301ff\346?H\341\272@\244pMA\256G\311A\244p\351A33\005B\270\036IA\270\336,D\315\3140\301\366(\024\301H\341\232\301\000\000\024\301R\270\246\300\270\036\345?\217\302aA=\n\221A\000\000\262A)L+D\256G\311\300R\270\212\301\315\314x\30133\315\301\327\243x\301\000\0008\301\000\000\220\300q=\372@\244p=A\037U+D)\\\017>\315\314\304\300\232\231\211\301\\\217v\301{\024\314\301ffv\301\217\3025\301\037\205\213\300R\270\376@\000@$D\327\243\342\301\037\205\341\301\205\353\t\302\270\0366\302\303\365.\302)\\W\302\205\353.\302\217\302\036\302\217\302\002\302\000P\"D\000\000\370\300\354Q\020\302\217\302\017\302\205\353(\302\270\036U\302\303\365M\302)\\v\302\205\353M\302\217\302=\302\203\353\035D\221\217\214\301\221\217\312\301\264\231V\302X\nV\302M3o\302@\263\215\302\305\036\212\302\371Q\236\302\247\031\212\302\315L#D*)\254A\315\314|@33s\300\037\205\000\302\205\353\377\301\270\036\031\302\354QE\302\366(>\302\\\217f\302\270\256!D=\n\317\3006\315pA\256G!\300\354Q$\301ff\032\302\n\327\031\302\000\0003\30233_\302=\nX\302\000\220\037D\024\256\007\30133o\301B>\322@\000\0000\301\000\000\226\301\354Q<\302\217\302;\302\205\353T\302\\\217\200\302{t#D\270\036yAH\341\342@R\270\036?\355\036\261Aq=\222@\037\205K\300{\024\374\301\303\365\372\301\327\243\026\302\232i\037D)\\\201\301\232\231\031\277\256G\021\301\315\314x\301\017\013\277@\232\2319\301\315\314\232\301R\270>\302\366(>\302\315\374\031D\232\231\255\301\341z\027\302ff\262\301q=\366\301\000\000\025\302\254\255{\30133\005\30233$\302\217\302\212\302\2172\026D\\\217r\301\244p\023\302\270\036T\302\n\327\025\302\217\3027\302\327\243Q\302\204\036\367\301\n\327A\302\n\327`\302\000\020\026Dq=\n\27733{\301\232\231\025\302\256GV\302\000\000\030\302\205\3539\302\315\314S\302op\373\301\000\000D\302f\026\022Dff~\301\037\205\203\301\315\314\374\30133U\302\244\360\212\302\232\231W\302\037\205y\3023\263\211\302\321Q=\302\260\'\tDk\353\016\302\005\205N\302\372\255P\302\351\250\206\302O\017\262\302Yf\322\302\202B\263\302E8\304\302\351(\321\302\\\237\017D\216\365\316A\217\302\035\301{\024\316\301ff\322\301\n\327%\302\327\243|\302\366\250\236\302=\n\177\302\341z\220\302\232\231\rD\244p\001\301<=\216A\232\231\217\301ff\007\302\\\217\t\30233F\302\000\200\216\302\n\327\256\3023\263\217\302\270\376\nDR\270&\301{\024\224\301M\204\353@\303\365\342\301{\0241\302q=3\302H\341o\302\nW\243\302\024\256\303\302H\241\tDR\270\256\300{\024~\301\217\302\277\301\354/\363?\354Q\007\302\205\353F\302{\024I\302)\334\202\302\217B\256\302H\021\tD\000\000\020\300R\270\366\300=\n\221\301\217\302\321\301O@\263\276\354Q\020\302\205\353O\302{\024R\302)\\\207\3023\023\rDq=\200A\341z\\A\270\036\005Aff\006\300=\n#\301\337\340zAff\240\301\315\314\017\302\303\365\021\302\232\371\000D\232\231A\302\341z\001\302\341z\n\302\354Q \302\000\000J\302)\\j\302b\341\002\302f\346\210\3023\263\250\302\n\267\367C\217\302\243\301q\275\211\302)\\S\302)\\\\\30233r\302\244\360\215\302\270\036\236\302\252\302T\302\n\327\261\302Vf\375Cy\3515A\246\233\021\301\203\000f\302\313\341%\302\313\341.\302\325\270D\302\351fn\302\211a\207\302KH\'\302\341\332\372C/\335\242\300\303\365\310@=\nc\301)\\z\302q=:\302q=C\302{\024Y\302Ha\201\302\\\217\221\302\232y\374C)\\O@j\274\354\277\354Q\030A33/\301ffm\302\256G-\302\256G6\302\270\036L\302\315\314u\302),\001D\n\327;A\024\256oA}?\036A{\024\252Aq=J?\244p>\302\327\243\374\301\354Q\007\302\366(\035\302=J\002D=\n\217@\024\256\201A\232\231\233A\234\304eA\n\327\315A\354Q\250@\\\217,\302H\341\330\301H\341\352\301\303\205\001D\341zD\30033\263?q=RA=\n\203A\343\2454A\256G\265A\366(\014@\n\3278\302\244p\361\301\256\247\005Dq=\204A)\\WA\244p\217A)\\\355A\327\243\003Bb\220\336A\217\302\034B\217\302\225A\244p\355\301\000\020\005D\024\256\027\300\\\217bA\244p1A\303\365xAff\332A\354Q\364A\240\232\313A\256G\023B\315\314\202A\366h\004D=\n\'\300)\\\237\300\315\3148A\024\256\007A33OA\037\205\305A\244p\337AX\271\266A\n\327\010B\232y\376C\037\205\245\301ff\272\301)\\\315\301q=\022\301)\\C\301\024\256\367\300\000\000\200@\024\256\347@\313\241\t@\000\200\376C\315\314L=\270\036\245\301\000\000\272\301\303\365\314\301\244p\021\301\\\217B\301{\024\366\300\232\231\201@\256G\351@\024n\373C\341z\304\300H\341\302\300q=\326\301\270\036\353\301{\024\376\301\024\256s\301ff\222\301\256G]\301\217\302\005\300f\346\375C{\024\236@\232\231\231\27733\223\277R\270\256\301\232\231\303\301\\\217\326\301\327\243$\301\217\302U\301q=\016\301R8\363CH\341\252\301)\\\203\301\341z\264\301{\024\264\301\315\314,\302q=7\302R\270@\30233\375\301H\341\n\302R\030\350C\000\000\262\301\244p.\302\024\256\032\302q=3\302=\n3\302f\346\202\302\270\036\210\302)\334\214\302\232\231W\302\024n\354CR\270\nA\256GY\301\217\302\013\302\000\000\360\301\\\217\020\302)\\\020\302\270\036c\302\\\217m\302=\nw\302\354\261\355C\205\353!@333A\315\3140\301\327\243\001\302\217\302\333\301\244p\006\302q=\006\302\000\000Y\302\244pc\302\n\227\353CR\270\206\300=\n\327\277\024\256\337@\366(t\301\341z\022\302\244p\375\301\256G\027\302{\024\027\302\n\327i\302\217\202\344C\\\217b\301\303\365\222\301\244p}\301\244p\345\300)\\\353\301\270\036K\302)\\7\302\205\353O\302R\270O\302\315L\336CR\270F\301\327\243\324\301\354Q\366\301{\024\342\301R\270\234\301)\\\'\302\315\314|\302=\ni\302\315\314\200\302\226\331\337C\303dF@!\037\025\301?\327\273\301S\205\335\301\343G\311\301\272\353\203\301\335\365\032\302\201fp\302\361\243\\\302\232Y\330C\227\377o\301ff>\301\\\217\302\301\205\353\031\302\217\302*\302\327\243 \302\205\353\373\301\303\365V\30233\226\302\315\254\330Cff&?1\231e\301\000\0004\301)\\\275\301\354Q\027\302\366((\302=\n\036\302R\270\366\301)\\T\302\\\317\316C\n\327\235\301\327\243\230\301\321Q\010\302\n\327\367\301\232\231-\302q=f\302{\024w\302\303\365l\302\256GJ\302\202\353\333C[\302\321AC\255\317@\020z\344@\037\205\373\300\275R\230\300\330p\211\301\206\270\372\301M3\016\302\225\024\004\302\n\027\334C\226!\256>\341z\324A\\\217\332@)\\\357@\005\243\360\300\244p\215\300R\270\206\301\000\000\370\301\n\327\014\302H\201\335C\270\0365@\353\342J@\270\036\353A\\\217\032A\303\365$A\251\023\226\300\037\205\313\277\366(`\301)\\\341\301\303\365\332CH\341\242\300\327\243\020\300H\277\365\277ff\302Aq=\222@=\n\247@xz\034\301\217\302\325\300\315\314\230\301\\\357\321Cff\220\301\270\036\271\301\341z\242\301[\302\237\301\000\000\310@\024\256W\301\256GM\301\243\243\336\301\n\327\305\301{\224\333C\354Q\232AR\270\236?ffv\300\\\217\202\277\355\r.\277\354Q\314A\205\353\271@R\270\316@n\243\010\301\000\000\330C\270\036\345\300{\024BA\244p\275\300\366(0\301H\341\002\301v\340\372\300=\n\223A\315\314\254\277333\277f\306\330Cff\306?\037\205\263\300H\341ZA\n\327\213\300)\\\027\301\366(\324\300\334F\311\300\244p\237A\315\314L>\256G\346C{\024\330A\341z\344A33\253A\217\302\"B\270\036\265Aff\214A=\n\243A\304\302\245A\217\302;B\327c\341C\341z\034\301\n\327\211Aq=\226A\205\3539A\256G\367A\217\302MA\327\243\370@\232\231)A\246\n/AR\030\345C\270\036\355@\024\256\027\300\270\036\305A\037\205\321Aq=\230A\256G\031B\366(\242AH\341rA{\024\220A=\n\336C\217\302a\301ff\326\300\n\327\203\301\341z(A\256GAA\244p\235@\024\256\301A\270\036\305@\303\365\210?=\n\333C\000\000\300\300H\341\240\30133K\301\n\327\263\301\303\365\220@\\\217\302@q=\212\277\024\256\221A\n\327#>)<\334C\303\365\030@=\ng\300\217\302\215\301\303\365$\301R\270\240\301\244p\335@\037\205\007A\024\256\247?\315\314\244A\341\332\350C\205\353\311A=\n\335A=\n\255A\327\243\360@H\341nA\315\314\244@\327\243\000B\n\327\006Bff\324A\232\331\350C\n\327#\274\n\327\311A\303\365\334A\303\365\254A\354Q\360@R\270nA\341z\244@\232\231\000B\315\314\006B\\\217\343C\256G)\301\244p)\301ffjA\354Q\210A\327\2430A\341zD\300H\341\212@{\024\256\300\\\217\254A\205\213\353C\037\205\177A\341z\254@\366(\254@\303\365\364A=\n\004B{\024\330AffNA\341z\242A\341z(A\366h\356C)\\\267@\232\231\255A\205\3531A\217\3021Aff\021B\303\365\032B\303\365\002B=\n\225A\354Q\320A\256\347\351C\366(\020\301\205\353Q\300=\nKA=\n\007@ff\006@R\270\332A\n\327\355A\n\327\275A\205\353\031AR\030\350C\024\256g\300{\024J\301\315\314\334\300\270\036\021A\256G\301\277\\\217\302\277\217\302\275AH\341\320AH\341\240A=\212\352C\341z\234@\\\217\242?\024\256\367\300\327\243\000\300)\\_A\354QX@\024\256W@H\341\344A\000\000\370A\232\271\344C{\024:\301\024\256\327\300\217\302%\301\303\365\232\301q=Z\301\270\036\025@\000\000\004\301\366(\004\301\n\327\207A{\324\341C\256G\271\300)\\\213\301\341zH\30133\201\301\256G\311\301\244p\233\301\244p]\300\327\243`\301\315\314`\301\205k\337Cq=\232\300\217\302)\301\205\353\261\301\315\314\212\301\217\302\247\301\n\327\357\301\000\000\302\301\341z\004\301H\341\226\301\327\203\343C=\n\003A\024\256W@H\341\032\300\315\314`\301\\\217\022\301\341zL\301\354Q\256\301\341z\200\301\354Q\270\275\037\305\340C\024\256\257\300\315\314,@\024\256\007\300\270\036\375\300\354Q\234\301ffj\301\366(\222\301q=\332\301ff\254\301=\332\006Dq\275\263B\217\302\250B\327#\271B\000\200\257B\205\353\243B\366\250\214B\244p\226B33\217B)\\zB\217r\006D)\\\317\277\000\200\260B\037\205\245Bf\346\265B\217B\254B\024\256\240B\205k\211B33\223B\303\365\213B\000\300\nD\024\256\211A\244pyA\205\353\322B\244\360\307B\354Q\330B\024\256\316B\232\031\303B\n\327\253B\270\236\265B\\\237\010D\366(\010\30133\013A\\\217\342@f\346\301B\205\353\266B\315L\307B\366\250\275B{\024\262B\354\321\232B\217\302\007D\315\314\\\300)\\?\301\000\000\250@\354Qh@\000\000\273B\037\005\260Bff\300B\217\302\266B\024.\253B\327\003\010D\\\217\202?\037\205\033\300=\n/\301\327\243\310@\315\314\224@=\n\275B\\\017\262B\244p\302B\315\314\270B\256\007\nD\303\365\000A\256G\021A\366(\264@\354Q8\300\256GeA)\\KA\366(\315B\024.\302B\\\217\322B\024\236\013D33\313@\\\217fAH\341vA\024\256?A{\024^@\244p\245A\341z\230A)\334\331BH\341\316B\217\222\017D\270\036}A)\\\261A\n\327\361A\000\000\372Aff\336A\354Q\232A\000\000\022B\037\205\013B\000\200\371B\037E\024D\354Q\226A\244p\nB\n\327#B{\024DB\366(HB)\\:B\354Q\030B\366(]B\024\256VB\217R\021D\327\243<\301\000\000\340@\\\217\266A)\\\351A\205\353\024B\000\000\031B33\013B\354Q\322A\000\000.B\232\271\024D\217\302YA\303\365\350?H\341\244AR\270\021B\270\036+B)\\KB\244pOB\327\243AB\232\231\037B\n\227\022D\327\243\010\301q=\242@=\n\327\300\270\036AA\270\036\337A\303\365\010B33)B\256G-B\341z\037B\000\300\020D\037\205\353\300ff~\301\\\217\022\300\256Ga\301R\270\226@q=\244A=\n\327A\217\302\013B\n\327\017B\244\300\021D\354Q\200@ffV\300q=>\301\366(\334?\270\036!\301\037\205\013A\354Q\304A\270\036\367A\315\314\033B\315L\017D\303\365\034\301\232\231\271\300\\\217R\301\232\231\255\301\244p\001\301=\n\237\301\037\205\213\277\024\256kA\327\243\250A)<\022D\n\327;A=\n\367?{\024\276@\217\302\265\277)\\\037\301\232\231i@q=\002\301ff*A\217\302\323A\000\300\021D\354Q\370\277\315\314\034A\n\327#\274\000\000\200@=\nW\300ff>\301H\341\332?\256G!\301)\\\013A3\023\020Dff\326\300q=\n\301ffF@R\270\326\300\315\314,\300\303\365 \301\315\314\224\301\024\256\237\300q=\206\301\000@\021Dff\226@\000\000\000\300\366(|\300\232\231\371@\327\243\000\300\000\000\000@\037\205\253\300ff^\301\341z\224\276}\004\021D\355\rn\277RIq@{\203;\3009\326\233\300\334\327\333@R\'<\300\t\371\210?\334F\311\300EGm\301Ha\020D\3274#\300R\270^\300\366(\234?)\\\257\300\244p\355\300q=\212@\024\256\257\300\244p\275\277\244p\r\301f\246\020Dq=\212?=,\274\277\232\231\031\30033\023@\315\314\214\300H\341\312\300\315\314\254@\270\036\215\300\315\314\314\276\\\177\tDH\341\344\301q=\334\301\013\244\360\301{\024\370\301\341z\322\301=\n\004\302\315\314\013\302\024\256\271\301{\024\004\302q]\tD\024\256\007\277\270\036\351\301\341z\340\301|\341\364\301\354Q\374\301R\270\326\301\366(\006\302\205\353\r\302\205\353\275\301\256\'\010DH\341\232\300\n\327\253\300\205\353\007\302\232\231\003\302\347\314\r\302\037\205\021\302\244p\375\301\037\205\031\302\256G!\302\2329\014Dq=\202A=\n7A\\\217.A\232\231\215\301\303\365\204\301]\\\231\301\315\314\240\301ffv\301\315\314\260\301\\\017\016DH\341\352@\303\365\274Aq=\226A\000\000\222A\217\302%\301\341z\024\301\027H=\301\366(L\301\303\365\000\301\000\300\021D\366(lA\315\314\260A\037\205\031B\366(\006B=\n\004B\315\314\214@)\\\257@{\203;@\000\000\000@3s\022D333@\341z\214A33\307AR\270$B)\\\021Bq=\017Bff\346@\341z\004AW[\267@\000\300\017D\315\314,\301\000\000\000\301\354Q\330@\232\231aA=\n\363A\354Q\314A{\024\310Afff\300\256G!\3003\323\rDff\366\300\000\000\224\30133{\301\327\243p\277\315\314\314@\244p\265AR\270\216A\341z\212A\315\3144\301\024\016\017D\244p\235@\205\3531\300\256GY\301\341z,\301R\270~@\270\0365A\315\314\334A{\024\266A\n\327\261A3\223\022D\256GaA\000\000\230A\315\3144A\000\000\000?33S@\341z\220A33\313AR\270&B)\\\023B\000\300\rDff\232\301=\n\247\300\232\231\231\276\000\000\000\301ff\226\301\000\000\200\301R\270\236\27733\303@=\n\263A\256w\013D{\024\022\301\244p\343\301\232\231e\301H\341\026\301=\n\211\301\244p\337\301=\n\311\301\205\353%\301\205\353A\300\341\212\nD\315\314l\300\256GM\301\037\205\000\302ff\220\301{\024R\301\327\243\246\301=\n\375\301\327\243\346\301\270\036a\301\315L\010D\037\205\017\301R\270J\301ff\256\301ff$\302\366(\330\301\315\314\260\301ff\356\301ff\"\30233\027\302\315<\nD\000\000\370@\366(\234\277\244p\235\300\315\314`\301ff\005\302\366(\232\301\232\231e\301ff\260\301ff\003\302\244\340\016D\341z\224A\341z\322AR\270\212Aq=ZA\354Q\220@\327\243l\301\217\3025\277R\270\206@)\\_\300\3273\017Dff\246?H\341\236AH\341\334A\270\036\225A=\noA\205\353\271@\n\327W\301=\n\027?\354Q\260@q]\016DffV\30033\003\300{\024\204A{\024\302A\327\243tA\244p9A\244p\035@R\270\206\301\327\2430\300R\230\014D\\\217\342\300H\341&\301{\024\022\301H\341\026A\244p\211A)\\\003A\354Q\220@\n\327\223\300)\\\277\301\315\014\014D\037\205\013\300\366(\024\301\217\302I\301\303\3654\301\000\000\350@\000\000pA\303\365\300@\270\036\025@\232\231\331\300\205\233\010D\354Q\\\30133\177\301q=\270\301=\n\323\301\327\243\310\301\327\243\320\300\244p\235?\024\256\367\300=\n7\301qM\010D\366(\234\277\n\327o\301)\\\211\301\000\000\302\301\315\314\334\301ff\322\301\024\256\367\300\n\327#<)\\\017\3013\223\007Dq=:\300\366(\204\30033\217\301\327\243\240\301\256G\331\301{\024\364\301\024\256\351\301ff*\301\232\2319\300\000\300\tD33\013A\256G\271@q=\222@33\023\301{\0246\301\024\256\223\301\341z\256\301{\024\244\301\232\231\371\277{4\004D\244p\261\301\024\256W\301\270\036\203\301H\341\214\301=\n\373\301q=\006\302\\\217\"\302\303\365/\302\217\302*\302{\004\004D\000\000@\277\244p\267\301\024\256c\301\270\036\211\301H\341\222\301\037\205\000\302q=\t\302\\\217%\302\303\3652\302\341\232\003D33\323\277\232\231\031\300\327\243\304\301{\024~\301\354Q\226\301{\024\240\301\270\036\007\302\n\327\017\302\366(,\302\270\256\005D\303\365\004A\270\036\325@\270\036\275@\366(\202\301q=\362\300\024\256\'\30133;\301\217\302\313\30133\335\301\217\302\003D{\024\366\300R\270\036?\n\327\203\277\n\327\343\277\024\256\277\301\366(t\301)\\\221\301\270\036\233\301\327\243\004\302\000@\006D)\\\037A\256G\021@\256G)AH\341\016AH\341\002A\000\000`\301\232\231\251\300)\\\003\301H\341\026\301=\372\007D\270\036\335@\303\365\206AH\341\022A\205\353\213A\244p}A\244pqAH\341\342\300{\024\316?ff\246\277\354\241\nD\205\353)Aq=\214A\205\353\333Aff\236AH\341\340A\024\256\323A\024\256\315A\205\353a@\024\256CA3c\007D\024\256O\301=\n\027\300\232\231\221@\366(hAq=\332@{\024rA\024\256WA\024\256KA33\027\301{$\007DH\341z\277)\\_\301\217\302U\300\341zd@\341zXAH\341\272@ffbA\000\000HA\000\000<A3s\005D\327\243\330\300\000\000\370\300\n\327\245\301\217\302!\301\315\314L\300\354Q\330@{\024n\277\366(\354@)\\\267@\256g\002DH\341B\301\232\231\227\301\244p\237\301\327\243\003\302\354Q\262\301{\024v\301\244p\255\300\217\302Q\301\232\231\231\300\303\005\001D\303\365\260\300\024\256\215\301\n\327\303\301\024\256\313\301\217\302\031\302\\\217\336\301\256G\247\30133/\301\270\036\225\301f\346\005D{\024\234A\024\256_Aff\346?=\n\237\300ff\276\300\244p\227\301\303\365\004\30133\263\277\303\365\010A)\\\005Dq=\n\300\315\314\212A\270\036=A\354Q\270\276\366(\344\300\217\302\001\301R\270\250\301\037\205\'\301\n\327c\300\366\250\360C\341zP\302\270\036Y\302{\024\013\30233!\302\205\353Q\302\000\000m\302\205\353p\302\205k\222\302)\\z\302ff\352C\354QH\301\256G\201\302\232\231\205\302\366(=\302\256GS\302\000\000\202\302=\212\217\302\000\200\221\302\303u\253\302\024\216\356C\303\365\004AR\270\206\300\354Qa\302\303\365i\302\205\353\033\302=\n2\302\217\302b\302\n\327}\302H\341\200\302)\234\364C\217\302AA)\\\243A\315\314\374@H\3410\302\037\2059\302\303\365\326\301\232\231\001\302\354Q2\302ffM\302\\\317\355C\232\231Y\301R\270\276\277q=\332@ff\266\300\256Gg\302\205\353o\302H\341!\302\000\0008\302R\270h\302q\375\365CH\341\202A\327\2430@\205\353mA\244p\271A\\\217*A\n\327%\302\341z.\302H\341\300\301\270\036\355\301\\\217\356C\217\302m\301\000\000\300?\232\231A\301\n\327#<\270\036\005Aff\206\300\256Ga\302\205\353i\302H\341\033\302\024\216\361C\024\256\277@\205\353\r\301\024\256\357@\037\205\303\300\000\000\300@\303\365dA\270\036\345?\354QI\302\303\365Q\302\232Y\361C\205\353\321\276\\\217\262@\341z\024\301\\\217\342@\327\243\320\300H\341\262@ff^A\327\243\260?\303\365J\302\000\340\354C33\017\301\217\302\025\301\024\256W\300\n\327\221\301)\\\357\277\037\205w\301=\nW\300ff\236@q=\362\300\024\356\351C\341z\274\300\244pm\301\000\000t\301\366(\024\301\303\365\300\301\354Q\370\300H\341\252\301\000\000\024\301\327\243p\277\000\200\347C\037\205\233\300\000\000,\301\232\231\235\301H\341\240\301\205\353a\301\n\327\347\301\205\353I\301\217\302\321\301\217\302a\301\315\354\357C\315\314\206A\n\327?A33\303@ff6\300\327\243P\300R\270.@{\024B\301)\\\207@\205\353\025\301\205+\363C\024\256\317@R\270\272A\n\327\223A\244pIA\303\365h@R\270N@\037\205\023A\341z\264\300\037\205+A\\\217\357C=\n\347\300H\341:\277\303\365\200A\366(4A\n\327\253@\270\036e\300)\\\177\300\000\000\000@\217\302M\301H\201\367Cq=~AR\270\nA\\\217rA=\n\000B33\331A{\024\252A\303\365DAff>A\270\036\217A\205k\372C\\\217\272@\217\302\255A\000\000hA\205\353\247A)\\\027B\205\353\003BR\270\330A\270\036\221A\n\327\215A\024N\373C\\\217\342?33\363@\205\353\273A\366(\202A{\024\266A\244p\036B\000\000\013BH\341\346A\256G\237A\327\003\372C\270\036%\300)\\O\277\327\243\240@\256G\247A=\n[A\244p\241A\270\036\024B\024\256\000Bq=\322A\270\276\374CR\270\256@\354Q8@\315\314\224@\024\256\'A\303\365\322A33\231A\270\036\315A\303\365)B\037\205\026B3\023\377C\270\036\225@\205\353!A\256G\361@\303\365\024Aq=rAq=\370A\341z\276Aff\362A\232\231<Bf&\371C\232\231=\301{\024\346\300\244p\335\277\205\353\211\300\\\217\"\300\\\217R@\244p\231A)\\?A\232\231\223A\000@\365C\232\231\371\30033\235\301\n\327o\301\341z\030\301\217\302A\301\244p%\301\354Q\220\300{\0246A\270\036\205@\000\200\362C\000\000\260\300\315\314T\30133\311\301\205\353\243\301\341zp\301H\341\214\301\244p}\301\366( \301\366(\274@\327C\363C\n\327\303?{\024~\300\354Q<\301\303\365\274\301\024\256\227\301\000\000X\301\327\243\200\301\303\365d\301\024\256\007\301\205K\365C\205\353\201@H\341\262@\354Q\270=R\270\366\300\341z\234\301ffn\301=\n\027\301\354Q@\301\000\000$\301H\201\361C\\\217\362\300\256Ga\300R\270\376\277\024\256\357\300\327\243t\301\270\036\331\301\n\327\263\301\366(\210\301\315\314\234\301{\024\355C\232\231\r\301\244p\203\301\205\353E\301\244p-\301R\270\202\301\270\036\301\301\303\365\017\302\327\243\372\301\303\365\316\301=J\352C\\\217\262\300H\341f\301{\024\260\301\232\231\217\301)\\\203\301)\\\257\301\217\302\355\301\256G&\302\327\243\023\302\327\343\354Cff\246@\\\217\302\276\024\256\023\301\341z\206\301\000\000L\301\037\2053\301\217\302\205\301\366(\304\301\341z\021\302\037\245\347C\n\327\'\301\256G\251\300\205\353-\301\217\302\235\301ff\332\301\205\353\271\301\024\256\255\301\024\256\331\301=\n\014\302\000\240\350CH\341\372?\341z\010\301\270\036U\300\\\217\016\301{\024\216\301R\270\312\301q=\252\301\000\000\236\301\000\000\312\301{4\350C=\nW\277)\\\217?\205\353\025\301\244p\205\300\000\000\034\301\315\314\224\301\244p\321\301\303\365\260\301R\270\244\301H!\341Cffb\301\n\327o\301\341zP\301\366(\274\301\\\217\222\30133\277\301\000\000\003\302\354Q!\302{\024\021\302\000 \336C\354Q\300\300\256G\241\301\000\000\250\301\354Q\230\301q=\354\301\327\243\302\301\256G\357\301=\n\033\302)\\9\302\232\371\321Cff\302\301\341z\362\301\n\3271\302335\302)\\-\302\354QW\302\037\205B\302\n\327X\302q=|\302{T\321C\270\036\245\277R\270\314\301\315\314\374\301\000\0007\302)\\:\302\037\2052\302\341z\\\302\024\256G\302\000\000^\302{\024\317C\000\000\220\300\256G\271\300R\270\360\301ff\020\302\000\000I\302)\\L\302\037\205D\302\341zn\302\024\256Y\302\000\340\330CR\270\234A\244pqA\315\314\\A\000\000(\301{\024\204\301\256G\365\301\000\000\374\301\354Q\354\301\270\036 \302{\324\332Cq=z@\000\000\274A\000\000\230A\024\256\215AH\341\322\300\232\231I\301\000\000\326\301R\270\334\301=\n\315\301\024\356\330C33s\300\256G\341=\232\231\235A33sA\\\217^Aq=&\30133\203\301ff\364\301\270\036\373\301\nw\335C\270\036\021A\327\243\250@H\341\022A\366(\346A\366(\302A\n\327\267A\303\365\250\277\\\217\352\300\n\327\253\301\270>\317C\037\205\343\301\303\365\232\301)\\\271\301{\024\232\301\303\365\250>\244p\205\300R\270\256\300{\024\356\301{\024\017\302=\212\333CR\270\304Affv\300=\n\247@\217\302\265?\\\217\252@)\\\307A)\\\243A=\n\231A\244p\245\3003\223\340C\270\036!A\327\243\nB=\n\307@\327\243tA\n\3277AffvA\303\365\013B\205\353\363A\232\231\351A\354\021\327C{\024\230\301=\n\017\301ffzA\327\243L\301{\024n\300\327\243\360\300=\ng\300\024\256\177A\024\2567A\217\242\326CR\270^\277=\n\237\301\303\365\034\301\341zlA\\\217Z\301H\341\222\300q=\006\301)\\\217\300\217\302qA\024\216\331CH\341\272@=\n\237@\327\243`\301{\024~\300\303\365\244Aq=\372\300\000\000\240?33#\300{\024\256?\315\314\333C\024\256\217@\256G%A)\\\027A\315\314\030\301\270\036\005?H\341\310A\270\036U\300\024\256\267@\354Q\370?\037\205\327C\303\365\010\301q=\202\300\\\217\342?fff?H\341\220\301\327\243\000\301ff\204Aq=>\301\341z4\300\000\200\276C\366(H\302ffj\302\244pX\302{\024A\302\\\217D\302\315L\210\302\354Qh\302\303\365\005\302R\270w\302\217B\310C\366(\234A\366(\364\301\354Q\034\302)\\\n\302\000\000\346\301\303\365\354\301\037\205B\302q=\032\302\037\205_\301)\334\315C333A\217\302\365A\\\217\232\301=\n\337\301\270\036\273\301ff\214\301)\\\223\301R\270\025\302H\341\332\301\270>\303C\n\327\251\301\341z \301\n\327\027A33\"\302\244pD\302\341z2\302\270\036\033\302\232\231\036\302\327\243j\302{t\301C\270\036e\300\341z\306\301\217\302Y\301\270\036\275@\037\2050\302\217\302R\302\315\314@\302\244p)\302\205\353,\302\341\232\271C33{\301q=\232\301=\n\"\302\341z\352\301\327\243\034\301\354Qo\302\256\307\210\302\232\231\177\302q=h\302H\001\255C\232\231\311\301\232\231#\302\205\3531\302\205k\203\302=\nZ\302\303\365\013\302\\\017\252\302\024.\273\30233\262\302\024\016\251C\315\314\374\300ff\004\30233C\302\037\205Q\302R8\223\302\327\243y\302\\\217+\302)\334\271\302\341\372\312\302q}\244C{\024\022\301q=\210\301\205\353(\302R\270g\302=\nv\302\341z\245\302{\024\217\302{\024P\302\270\036\314\302\000\000\246C\256GA@\037\205\303\300\366(`\301\n\327\034\302\327\243[\302\303\365i\302\244p\237\302=\n\211\302\000\000D\302\217\202\276C{\024DB\366(PB\327\243+B=\n\014B\303\365\034A\341z\274\300\037\205\027\301\232\231\365\301\000\000\234\301\341Z\265C\341z\222\301\024\256\365A\205\353\006B\315\314\304A\232\231\205A\000\000\010\301\232\231\301\301q=\336\301=\nD\302\303\225\251C\354Q\274\301ff\'\302\244p\345@=\n#A\024\256\207?H\341\332\300\366(\000\302\303\365>\302\256GM\302\217\202\260C\232\231]A=\n\033\301\000\000\340\301\366(\250A\354Q\300A\\\217nA\354Q\340@\037\205\221\301\\\217\007\302\037E\272C\366(\234A\341z\005B\256G\035A\024\256\007\301\366(\"Bq=.BR\270\tBq=\324Aq=\252?\366\250\275C\303\365\330@ff\322A\232\231 BH\341\204A\232\231\331\277\256G=B)\\IB\n\327$Bq=\005B\000`\265C\\\217\204\301\327\243\034\301\024\256\033A\327\243\274A\n\327#=\366(\222\301\000\000\366A{\024\007B\270\036\305A\303\325\261C\\\217\342\30033\275\301\303\365\206\301\232\231)@\000\000\204A\256G\341\300\315\314\312\301)\\\275A\037\205\325A\366(\260CffV\300H\341&\301\000\000\330\301\217\302\241\301333\277ffRAq=&\301\232\231\345\301\\\217\242A\037\245\251C\341zP\301=\n\203\301\024\256\273\301\270\036 \302\000\000\005\302\024\256[\301\217\302\365=)\\\273\301\205\353&\302\270\276\244C\315\314\034\301\327\243\266\301\244p\321\301=\n\005\302\354QG\30233,\302q=\274\301H\341\032\301H\341\004\302\000`\270C=\n\035B\024\256\353A\244p\203A\256GQA\000\000\300@\270\036)\301\\\217r\300\024\256{A\327\243\354A\000\000\263C\000\000,\301{\024\344A\024\256\225A\217\302\265@\270\036\025@\000\000\230\300\\\217\252\301\327\243h\301)\\\237@R\330\263C\354Q\330?\303\365\020\301\232\231\361A33\243A\n\327\353@\327\243\200@\n\327C\300=\n\235\301\232\231M\301\024\256\263C\303\365\250\276{\024\256?q=\026\301\303\365\356A\\\217\240A\256G\341@\366(l@\303\365X\300\024\256\237\301\270>\255C\205\353M\30133S\301\366(8\301{\024\262\301\000\000\210Aff\346@\\\217\272\300H\341\022\301{\024\202\301Rx\267C\232\231\243A\\\217\362@\000\000\350@=\n\017A\024\256\347\277\315\314\025B33\335A\205\353iA\354Q4A\270\036\253C\232\231\305\301\000\000\210\300\303\365\210\301\232\231\213\301\366(|\301{\024\324\301\000\000LA\315\314<@\256G!\301)\234\245C\354Q0\301H\341\016\302\354Qt\301\270\036\341\301\217\302\343\301q=\326\301\270\036\026\302\244p\335?\270\036\001\301\354\221\245C\n\327\243\275\232\2311\30133\017\302\232\231u\301\217\302\341\301ff\344\301H\341\326\301\244p\026\30233\323?\327c\237C\217\302E\301=\nG\301\024\256\273\301\327\243@\302\024\256\335\301\354Q\"\302\327\243#\302H\341\034\302H\341G\302\341\272\233Cq=\352\300\244p\235\301{\024\236\301q=\366\301\205\353]\302\270\036\014\302\232\231?\302\205\353@\302\366(:\302\000\200\221C\024\256\243\301q=\336\301\\\217 \302H\341 \302\303\365L\302H\341\227\302\303\365]\302R\270\210\302Ha\211\302=\n\234C\327\243\250AR\270\036?ff\326\300\341z\230\301\270\036\231\301\256G\361\301\244p[\302\327\243\t\302\270\036=\302\217\002\233C\n\327\003\300\366(\230A\354Q\270\277\366(\014\301\303\365\250\301\232\231\251\301H\341\000\302\024\256c\302H\341\021\302\\\017\226Cff\036\301)\\?\301\205\353\021A\244p5\301\256G\225\301\366(\370\301\315\314\370\301\341z(\302\327\243\205\302\303\265\224C\315\314,\300\232\231I\301\\\217j\301\244p\315@\327\243`\301H\341\252\301H\341\006\30233\007\302\256G3\302\n\027\214C\205\353\211\301\037\205\237\301R\270\356\30133\377\301\270\036-\301q=\372\301ff\032\302\n\327K\302\366(L\302\256\307\201C\303\365\244\301\244p\027\302q=\"\302\n\327I\302{\024R\302\037\205\373\301\232\231O\302H\341l\302\366(\217\302\n7\203C\024\2567@\000\000\216\301\303\365\013\302\217\302\026\302)\\>\302\232\231F\302\\\217\344\301\270\036D\302ffa\302R\270\200C\024\256\237\300\024\256\007\300\205\353\265\301\205\353\037\302R\270*\302\354QR\302\\\217Z\302q=\006\302{\024X\302f\006\215CH\341\304A\303\365\234A\205\353\263A)\\\357?\205\353u\301\\\217\220\301\217\302\337\301q=\360\30133\017\301\205\013\222C\327\243 A\232\231\nB\256G\355A\270\036\002B\\\217>A\\\217\252\300\341z\000\301\244p\217\301\205\353\237\301\341z\222CR\270^?\\\217.A{\024\016Bq=\364A\232\231\005B\341zLAR\270\216\300\270\036\345\300\341z\210\301\270\376\204C\217\302\327\301\315\314\320\301\341z\200\301\315\314\010A\n\327c@\217\302\315@=\nc\301\244p\373\301\037\205\010\302\024\216\211C\205\353\021A\315\314\216\301\n\327\207\301{\024\336\300)\\\215AH\341JA\315\314xAq=\242\300\341z\262\301\n\267\213Cq=\212@=\nWA\341zX\301\\\217J\301\024\256\'\300\205\353\257A\000\000\210A\303\365\236A\000\000@\277\205+\211CH\341\242\300\270\036E\277\232\231\005A\303\365\224\301\000\000\216\301R\270\366\30033\207A\\\217>A\341zlA\270\376\215Cff\032A\205\353\221@{\024\016A\000\000\220A\037\205\017\301\232\231\001\301\354Q\370?ff\324A\341z\254A\024\016\227C\303\365\220A\366(\336A\244p\265A\000\000\330A\341z\020Bff\022A\354Q A\341z\240A\024\2562B)\374\230C=\nw@\n\327\257A=\n\375A\354Q\324AH\341\366A\205\353\037B\366(PA{\024^A)\\\277A\366h\232Cff6@R\270\326@\327\243\306A\205\353\tB\270\036\353A\n\327\006B\354Q+B\217\302}A\n\327\205A)\034\226C\232\231\t\301\000\000\270\300\205\353\361\277\n\327\201A=\n\317A\354Q\246AH\341\310A\205\353\010B\354Q\350@H\341\235C\327\243xA{\024\336@\327\243\034AffZA\366(\376A\024\256%B\354Q\021B\232\231\"B{\024GB\303U\233CH\341\242\30033\'A\315\314\354?ff\226@\303\365\010A\244p\325A\354Q\021B\205\353\371Aq=\016B\327\243\242C\217\302iA\354Q\030A\341z\310A\024\256\203A\341z\232A)\\\271A\366(%B\217\302KBff7B\270\236\235C\327\243 \301q=\222@\270\036\005\277\354QpA\244p\315@\354Q\024A{\024RA\000\000\372A\232\231#B\327#\233CR\270\236\300\000\000p\301\024\256\307\276)\\\257\300\303\365 AH\341\272?\205\353\211@R\270\002A\354Q\322A\303\025\233C\256G\341\275q=\242\300\217\302q\301\000\000\000\277H\341\262\30033\037A\315\314\254?ff\206@\303\365\000A\024\216\224C\303\365P\301R\270R\301=\n\221\301)\\\341\301\303\365X\30133\225\301=\nG\300)\\;\301\217\302\r\301\217\002\225C\303\365h?ffB\301\366(D\301\217\302\211\301{\024\332\301ffJ\301\205\353\215\301\315\314\014\300\315\314,\301\232y\227C\217\302\235@H\341\272@=\n\347\300\\\217\352\300\327\243D\301\327\243\262\301=\n\367\300\303\365L\301R\270.@\024.\226C\217\302%\300\217\302\025@\000\000P@\303\365\034\301R\270\036\301{\024n\301)\\\307\301\303\365$\301ffv\301\303\265\224C\366(<\300\303\365\260\300\232\231\031\277R\270\236>\000\000L\301\217\302M\301\\\217\216\301H\341\336\301\000\000T\301\024\216\227C{\024\266@\000\0000@\n\327#>H\341\242@\000\000\300@\205\353\341\300\244p\345\300{\024B\301)\\\261\3013\323\231C\256G\221@\024\256#A\256G\351@ff\226@{\024\032A\327\243(A\256G!\300\354Q(\300H\341\362\300\366\250\240CR\270ZA\024\256\221A33\277A\024\256\247A\303\365\222Aff\272A\024\256\301Aff2A\327\2430Af\006\244C)\\\327@33\243A\037\205\307A=\n\365A\037\205\335A\315\314\310Aq=\360A\037\205\367A=\n\217A\256\007\247C\354Q\300@\n\327KA\256G\323A\232\231\367A\\\217\022B\315\314\006BH\341\370A\366(\020B\315\314\023BH\001\241C\315\314@\301\256G\301\300\327\2430?\217\302eA33\227AR\270\304A33\255A\341z\230A\205\353\277AR\230\242C\037\205K@\205\353\r\301=\n7\300\024\256w@\354Q\214A\327\243\260A\366(\336A\327\243\306A\205\353\261A\366\210\235C\205\353!\301{\024\336\300\205\353\227\301\024\256O\301\000\000\310\300\244p\355@)\\?A33\215A)\\kARX\234C\354Q\030\300\000\000H\301\270\036\025\301\303\365\252\301\217\302u\301{\024\n\301\256G\241@\256G\031A\354QtA\366(\235C\327\243\320?\000\000@\277\205\353-\301{\024\366\300\205\353\235\301\024\256[\301\000\000\340\300\244p\325@)\\3A)|\226C\232\231U\301\037\205;\301\232\231a\301\217\302\301\301\354Q\250\301)\\\004\302\327\243\330\301\315\314\242\301\217\302\325\300\270~\225C\244p\375\277\256Gu\30133[\301\327\243\200\301\232\231\321\301\366(\270\301\256G\014\302\341z\350\301\327\243\262\301\303\325\225C{\024.?ff\246\277ffj\301\354QP\301ffv\301\366(\314\301R\270\262\301\\\217\t\302=\n\343\301\000`\215C)\\\207\301\205\353\201\301\217\302\221\301\\\217\374\301\037\205\357\301\256G\001\302\217\302)\302=\n\035\302q=M\302=\212\227C\327\243\242Aq=Z@H\341\202@=\n\007@\n\3273\301\217\302\031\301\n\327?\301H\341\260\301\244p\227\301\000@\231CH\341Z@\000\000\276A\\\217\332@\354Q\360@\303\365\260@q=\372\300{\024\306\300\270\036\t\301\037\205\225\301\232Y\242C\232\231\221A\303\365\254A\315\314\'Bq=\310A\024\256\315A\n\327\275A{\024&A\366(@A{\024\032A\\\357\241C\341zT\277\303\365\212A\354Q\246A\341z$B\232\231\301A=\n\307A33\267A\315\314\030AH\3412Aq\275\245C\037\205\363@\303\365\330@\n\327\307A33\343A\205\353BB\341z\376A\303\365\001B{\024\364A\256G\211A\303U\256C\037\205\211Aff\306A\217\302\277A\024\256(B)\\6B\n\327\203B\000\000DBR\270FB\315\314>B\366\250\253C33\253\300\244p=A\232\231\233A\303\365\224A\256G\023B\303\365 B\256GrB\232\231.B\354Q1B\327C\251C\256G\231\300q=\"\301\232\231\341@\\\217jA\256G]A\270\036\000B\315\314\rB\270\036_B\244p\033B\366H\252C\\\217\002@\000\0000\300\232\231\001\301\244p\021A\232\231\205A\205\353}A\256G\010B\303\365\025B\256GgB\2329\252C\217\302\365\275\217\302\365?\024\2567\300\037\205\003\301\037\205\017A\327\243\204A\000\000|A\315\314\007B\341z\025B\000\200\253C33#@\037\205\033@=\n\217@\n\327\243\276\244p\265\300\354Q8A=\n\231Aff\222A\000\000\022B)\334\260C\037\205+A\354QTAffRA=\nsAff&A\232\231\241@\205\353\261A\315\314\356A\366(\350A\327\243\271C\341z\214Aq=\342A\327\243\366A\024\256\365A\000\000\003B\024\256\337AH\341\264A33\037B\327\243=B\217b\275C\024\256\357@ff\310A{\024\017B\256G\031B\315\314\030B\303\365 B\315\314\rB\315\314\360A\366(=BHA\263C{\024\242\301\354QL\301\256G\231@\366(xA\341z\220A\037\205\217A\n\327\237A=\nsA\244p\035A\037\005\263C\327\243\360\276\n\327\245\301\n\327S\301q=\212@\327\243pAR\270\214A\217\302\213A{\024\234A\037\205kAf\206\265C\354Q\240@\256G\221@\037\205{\301\024\256\003\301\256G\025Aff\240A\315\314\264A\n\327\263A\366(\304A\n\327\262C\n\327\253\300\354Q\270\276\341zT\277R\270\250\301\232\231Y\301\244p}@H\341jA\n\327\211AH\341\210A{T\253C\354Qp\301\270\036\243\301{\024v\301\232\231}\301\244p\020\302\303\365\344\301\303\3650\301{\024\256\276\244p\r@\024\216\260C33\'Aq=\222\300=\n\037\301\217\302\235\300\315\314\254\300\256G\315\301)\\\221\301\366(\034\277\217\302!A\354Q\253C\037\205\'\301\n\327\243\274\327\243p\301\256G\243\301ffv\301\205\353}\301\037\205\020\302\270\036\345\301\256G1\301\2329\255C\n\327s@\270\036\325\300\\\217r@\024\2563\301\315\314\204\301\244p9\301\303\365@\301\256G\001\302\327\243\306\301\256\007\245C\270\036\203\301\256GI\301ff\270\301\232\231I\301\303\365\334\301\303\365\003\302\n\327\337\301\232\231\343\301\n\327B\302\232\271\254Cq=vA\000\000\200\277\n\3273@\270\036\365\300\\\2172@\024\256C\301\315\314\214\301\244pI\301\303\365P\301\354\321\252C\n\327s\300\256G9A\205\353\231\300\000\000\200\277\037\2057\301\\\217\202\277\354Q\200\301\256G\253\30133\203\301\n\227\250CR\270\216\300\354Q\004\301\n\327\343@\354Q\024\301R\270\256\300H\341~\301)\\\257\300\000\000\244\301\303\365\316\301\270\376\250C)\\O?\232\231i\300R\270\356\300\217\302\375@)\\\007\301\315\314\224\300\205\353q\301\244p\225\300\037\205\235\301{\224\243C\256G-\301\354Q \301\024\256g\301\354Q\222\301\232\2319\300\354Q\232\301\024\256w\301\232\231\317\301\000\000x\301q\275\242C=\n\327\277\366(H\30133;\301\256G\201\301\217\302\237\301\\\217\222\300\217\302\247\301\256G\211\301=\n\335\301\303u\237C\205\353\321\300\n\327\003\301\\\217\230\301{\024\222\301\217\302\265\301q=\324\301q=2\301q=\334\301\217\302\275\301\354\321\230C\341zT\301R\270\236\301\366(\254\301ff\001\302\354Q\374\301\000\000\020\302q=\037\302)\\\303\301q=#\302\366H\232C\037\205;@\232\231%\301\256G\207\301R\270\224\301)\\\353\301H\341\344\301\256G\004\302\037\205\023\302\205\353\253\301\354q\221C\244p\215\301\000\000l\301q=\340\301)\\\n\302{\024\021\302ff<\302\366(9\302\000\000K\302q=Z\302\303\025\232Cq=\212A\315\314\314\276\205\353!@\000\000,\301\341z\212\301\205\353\227\301\\\217\356\301{\024\350\301H\341\005\302{\364\236C\n\327\033A\366(\330A\244p\025A\354QDA\256G\201\277q=\362\300\000\000\024\301\327\243\240\301\366(\232\301\327\303\241C\n\327\263@\217\302uA\\\217\002B)\\oA\270\036\217A\037\205\223@\232\231\371\277\354Qh\300)\\g\301\3035\242C\n\327c?\354Q\320@\000\000\202A\270\036\006B\232\231}Aq=\226A\000\000\260@\024\256\207\277)\\/\300R\330\237C)\\\227\300\217\302u\300\n\327\343?\354Q8Aff\346A\205\3531A\315\314`A\270\036E?\256G\271\300\205\253\247CffzAR\270.A\303\365<A\244p\213A)\\\331A\315\3141B\366(\326A\232\231\355A)\\\203A\315\214\246C)\\\017\300\\\217VAH\341\nA\270\036\031A=\nsA\244p\307A\n\327(Bq=\304A\024\256\333AR\370\244Cq=J\300\315\314\254\300\000\000$A\327\243\260@\270\036\315@\341z@A\366(\256A33\034B\303\365\252A{\024\245C\256Ga>\366(<\300\217\302\245\300\037\205\'A\024\256\267@\366(\324@\000\000DA\205\353\257A{\024\035B\356L\256C+\207\223A\272I\225A\031\004xA\016-TA\272I\347A\260r\301Ah\221\310A+\207\365AX\271!B\366\250\255C\317\367\243\277\256G\211A=\n\213A\037\205cA\024\256?A=\n\335A33\267A\354Q\276A\256G\353A\366\010\254C\000\000P\300\364\375\220\300\\\217^A{\024bA\037\205/A\024\256\013A=\n\303A33\235A\354Q\244A\037\245\260C\037\205\023A=\n\277@J\014\226@=\n\271A\315\314\272A\037\205\241A\232\231\217Aff\006B\303\365\346A\232\331\255CH\341\262\300\354Qh@\\\217\302>\360\247f\277\354Q\214A{\024\216A\232\231iA\217\302EA{\024\340ARX\253C\354Q\240\300\232\231)\301\327\243\260\277\366(\224\300\351&\275\300\341zHA\000\000LA\244p\031A33\353@\256\007\256C\n\327\253@\354Q\270>)\\\247\300)\\\177@\244p=?\372~\n\27733\217A\303\365\220A)\\oA\205\013\261C\303\365\300@ff6A\341z\314@\315\314L?\354Q A\327\243\330@\343\245\257@\244p\277A33\301A\000@\265C\\\217\006A=\ngA\341z\236A\315\314lA)\\\023A\244p\223AH\341rANb^A)\\\001B\327\343\270C\303\365\350@=\n{A\217\302\255AR\270\330A\327\243\260A\205\353\203A\024\256\315A\024\256\263A\230n\251A\270\036\270C\270\036\305\277\024\256\267@ffbA\244p\241Aff\314A\354Q\244A33oA)\\\301A)\\\247A3S\263C\244p\031\301{\0242\301ffv\300\205\353\221@\244p)A)\\\177A33/A\037\205\253@\256GiA\000\000\265CffV@\024\256\307\300\303\365\370\300\000\000\000\277\270\036\375@=\n_A\341z\232A\315\314dA)\\\013A\000@\272C\000\000(A\232\231]A\354Q\210@{\024.@\000\000 A\256G\223A\037\205\303A\341z\356Aff\306A\024\016\275C\037\205\263@H\341\200A\024\256\233A\205\353\035A\256G\005A\217\302yA\366(\300Aff\360A\024\256\rB{t\270C33\023\301\217\302e\300\270\036\335@\366($A\037\205+?R\270^\277\270\036\315@\270\036mA\315\314\246A\000\300\275C\244p)A\205\353\261?\000\000\340@\000\000\214A\315\314\246A\366(4A\037\205\033A\000\000\210A\256G\313A\270^\302C\n\327\023A\327\243\236A{\024*A\205\353\201A\205\353\325AR\270\360A\000\000\244A\024\256\227A\205\353\321A\270\036\304C\000\000`@\n\327KA\327\243\272A{\024bA\205\353\235A\205\353\361A)\\\006B\000\000\300A\024\256\263Af\246\275C=\nO\301=\n\027\301\315\314L\276q=&A\354Q\230?\232\231\331@ff\212A33\245A\303\3650A)\274\276CH\341\n@\354Q,\301\327\243\350\300\366(\374?\303\365HA=\nW@\037\205\017A\217\302\233A\\\217\266A\024\356\277C\303\365\030@\205\353\221@{\024\006\301\366(\234\300\037\205\213@33oA\000\000\270@\217\3025AH\341\256ARX\300C\341zT?{\024N@\341z\254@\232\231\361\300\232\231\201\300{\024\246@\341z|A\\\217\322@=\nCA\270\276\302C\232\231\231@\366(\264@\354Q\000A=\n#A\000\0000\300\000\000@?\n\327\037A\327\243\244A{\0246A\232\371\300C\\\217b\300\256G\241?\217\302\005@)\\\217@\315\314\324@\256G\311\300\\\2172\300ff\316@\354Q\210A\341\332\277C)\\\017\300\303\365\270\300H\341z\277\232\231\031\276)\\\017@\270\036\215@\341z\010\301\303\365\240\300R\270\206@)\274\303C\354Q\370@\327\243\260@\244p\375?\303\365\330@\037\205\363@\000\000 AR\270BA\270\036E\277R\270.@)\374\305C\000\000\220@\366(DA\354Q A)\\\317@\341z4A\217\302AA\000\000hA)\\\205AR\270n@R\330\304C\205\353\021\300{\024\016@\024\256\037A\024\256\367@ff\206@\000\000\020A\256G\035A\037\205CAq=fAZ\375\310C\371\240\004A0L\300@\030&(A\207\'\222A\002<\200A,\324GA}P\212AT\364\220A\014\023\244A\270~\311C\236^\201?\315\314\024A\327\243\340@\354Q8Aq=\232A\354Q\210A\000\000XAff\222A=\n\231A)\274\311C\217\302\365>B\317\276?\341z\034A\000\000\360@\000\000@A{\024\236A\366(\214A\024\256_Aq=\226A\024N\306C\037\205\333\300\366(\314\300N\321\253\300H\341:@\n\327#?\341z\244@ffNA\\\217*A\n\327\343@=\252\313C\037\205+A=\nw@H\341\212@\3578\253@q=ZA\217\3025A\217\302}A\303\365\274A=\n\253Aq\375\313Cff&?\205\3535A\354Q\220@\024\256\237@\274\005\300@\327\243dA\366(@A{\024\204A\366(\302AH\201\307C\037\205\017\301\270\036\005\301\232\231\031@R\270\216\300R\270~\300\003\t>\300q=\252@\\\217B@\256G\361@\037\305\302C\037\205\027\301\037\205\223\301\354Q\216\301q=\342\300H\341^\30133W\301_\007G\301\315\314\204\300\217\302\315\300\000\300\301C\\\217\002\300\366(8\301\n\327\243\301\327\243\236\301\217\302\021\301\037\205\177\301\n\327w\3016\253g\301{\024\306\300\000\000\303C\000\000 @\037\205\353>\366(\020\301\n\327\217\301\327\243\212\301\037\205\323\300\037\205W\301\n\327O\3016\253?\301\205k\306CH\341\332@\244p\025A\232\231\351@H\341\n\300q=2\301\n\327\'\301\037\205k>\366(\324\300\315\314\304\300\244p\307C\\\217\002@{\024\016A{\0246A\244p\025A\270\036\005\276\232\231\021\30133\007\301\256G\021@H\341\222\300\n\227\306C\232\231\331\277{\024\256>\217\302\345@H\341\032A\341z\364@q=\352\277\315\314,\301ff\"\301\205\353\021?\000@\306C{\024.\277\354Q\030\300{\024\256\276\000\000\320@\000\000\020AR\270\336@\327\243 \300\024\2567\301\256G-\301\000\300\304C\000\000@\300\037\205k\300\366(\254\300\217\302U\300\000\000`@\000\000\300@\244p}@\354Q\260\300\024\256g\301\024.\312C\217\302-A\037\205\373@\217\302\345@)\\\257@\327\243\360@\217\302eAH\341\206A\270\036mA33\253@\256\307\312C\232\231\231?\303\365@A\303\365\020A{\024\006A\217\302\325@\037\205\013A\303\365xA\341z\220A\366(\200A33\315CH\341\232@\256G\301@33\207Aff^A\037\205SA\354Q8A\303\365XA33\243A33\267Aq\235\320C\\\217\332@R\270:A\205\353MA\n\327\275A\n\327\245Aff\240A\315\314\222A\270\036\243A\n\327\331A\256G\325C\256G\025A\256G\201A\000\000\250A\232\231\261Aq=\004B\341z\360A=\n\353A\244p\335A\217\302\355A33\326C\037\205\353?R\2702A\000\000\220AR\270\266A\354Q\300A\232\231\013B33\377A\217\302\371A\366(\354A3\323\327C\000\000P@H\341\242@R\270fA\000\000\252AR\270\320A\354Q\332A\232\231\030B\232\231\014BH\341\tB\327#\334C{\024\nA{\024>A\037\205[Aff\270A=\n\357AH\341\nB\024\256\017B\270\036;B\270\036/B\366(\336C\256G\201@R\270JAR\270~A{\024\216AR\270\330A\024\256\007B=\n\033B\n\327\037B\256GKB\217b\333C\232\231\261\300\256G\301\277\n\327\343@\205\353%A)\\CA\354Q\254A\303\365\342A\n\327\004B\327\243\tB\\\317\331C\232\231I\30033\013\301\270\036\225\300{\024~@=\n\347@\303\365\020A\270\036\223A\217\302\311A\341z\360A\315L\330C\256GA\300\244p\305\300\037\205;\301\217\302\365\30033s?ff\206@\256G\301@\205\353uA\232\231\261A\000\200\326Cfff\300\n\327\323\300\354Q\034\301\270\036u\301\341z4\301\232\231)\300\232\231\031?\366(\034@\354Q<A\205k\324C\270\036\205\300\354Q\370\300\341z,\301H\341^\301\n\327\233\301=\nw\301\205\353\331\300\n\327c\300\366(\334\277\217b\320C\270\036\001\301\024\256C\301\256G}\301\315\314\226\301\000\000\260\301ff\334\301{\024\274\301{\024n\301{\024:\301\000\000\320C\270\036E\277\244p\r\301\000\000P\301\315\314\204\301\303\365\234\301\366(\266\301\\\217\342\301q=\302\301ffz\301{\224\317C=\nW\277{\024\316\277H\341\032\301\244p]\301\037\205\213\301\024\256\243\301H\341\274\301\256G\351\301\303\365\310\301\256\007\317C\315\314\214\277\354Q\370\277\244p-\300\341z,\301=\no\301\354Q\224\301\341z\254\301\024\256\305\301{\024\362\301\205\013\322C\303\365\300@\217\302\235@H\341\202@\341zT@\000\000\230\300\\\217\016\301\366(H\301\341zx\301\244p\225\301\315\254\313C\n\327K\301R\270\326\300\205\353\371\300ff\n\301R\270\026\301\205\353\213\30133\255\301\000\000\312\301\366(\342\301\n\327\312C\217\302\325\277\\\217f\301{\024\006\301\024\256\027\301\270\036%\301\244p1\301\256G\231\301\\\217\272\301)\\\327\301\037\245\314C=\ng@\354Q\370?\315\314,\301\327\243\230\300\n\327\273\300R\270\326\300)\\\357\300\315\314x\301\024\256\235\301\217\342\317C)\\\317@\244p!AR\270\006Aq=\212\300H\341\332?\366(\034?\037\205k\276\000\000\200\277\270\036\021\301\366\250\324C\315\314\030Aq=\200A\270\036\235A\217\302\217A)\\\247@\366(4A\\\217\"A\270\036\025A\315\314\010A\354\021\324C=\n\227\277\205\353\005A\232\231mA\024\256\223A\354Q\206A\232\231\201@\256G!A\024\256\017Aq=\002A\205\313\322C33#\300R\270n\300q=\272@\315\314DA\\\217~A\n\327cA\000\000\300?\303\365\360@\217\302\315@\270~\321Cff&\300\315\314\244\300\\\217\312\300{\024N@33\033A\303\365TAq=:A\315\314\214\277\217\302\235@\270>\314C\000\000(\301\232\231Q\301ffz\301\327\243\206\301\303\365\350\300\315\314L\277\n\3273@\205\353\221?\232\2319\301\024\316\314C)\\\217?{\024\026\301\024\256?\301\341zh\301)\\{\301\270\036\305\300\n\327\243>\037\205{@\327\243\020@\244P\306C\024\256O\301\217\302=\301H\341\262\301\024\256\307\301{\024\334\301\037\205\345\301\270\036\231\301\\\217J\301\315\314\020\301\270>\311C\037\205\273@\n\327\343\300\000\000\300\300\000\000\204\301\315\314\230\30133\255\301\327\243\266\301\341zT\301\232\231\331\300\3541\315C\315\314\374@\366(\\A\024\256G?33\363?\232\231\t\301333\301\000\000\\\301H\341n\301\366(\254\30033\317C\354Q\200@\\\217>A\366(\216A\256G\231@\270\036\275@H\341\222\300{\024\346\300\n\327\033\301R\270.\301f&\324Cff\036A\\\217^A\341z\256A)\\\335A=\nkA\303\365|A\205\353\251@\244p-@\n\327#>RX\324C\024\256\307>\327\243$A\315\314dA\232\231\261A\341z\340A\256GqA\232\231\201Aff\266@ffF@\303\025\333C\024\256WA\205\353]A\366(\276Aq=\336AR\270\016B\366(&B\341z\344A\244p\355A\244p\231A\315L\335C\217\302\215@\256G\217Aff\222A\232\231\341A\n\327\000B\244p BH\3417B\303\365\003B\244p\010B\000 \327C\232\231E\301\244p\375\300\205\353\261@ff\276@\232\231}AH\341\236A{\024\336A\341z\006B\270\036\245A\303\025\327C\n\327\243\275H\341F\301\000\000\000\301)\\\257@\n\327\273@\354Q|Aq=\236A\244p\335A\366(\006B3\363\325C\256G\021\300ff\026\30033k\301\354Q$\301\244pM@fff@\000\000XA{\024\214A\256G\313AR\330\325C=\nW\276R\270\036\300\n\327#\300\\\217n\301\024\256\'\301\000\000@@\303\365X@\327\243TAff\212A\307\253\332C\230n\032Ao\022\027A\006\201\345@\252\361\342@\211A\250\300\317\367S\277\230nJA\010\254PA7\211\267A)\\\337CJ\014\026Aq=\230A\\\217\226Aff\204A\217\302\203A\n\327\203@\315\314\010Aq=\260A)\\\263Aff\336C\217\302\365\277\360\247\356@H\341\210A33\207A{\024jA\315\314hA\315\314\014@\366(\324@H\341\240A\315\354\333Cff\236\300\n\327\333\300\022\203 @\\\217BA33?AH\341\032A\232\231\031A\000\0000\300=\n\327?\270\036\332C=\ng\300\303\365\010\301\024\256\'\301V\016\215\277\315\314\010A\244p\005Aq=\302@\024\256\277@\037\205\313\300\354\321\336Cff\026A\256G\271@=\nW?q=\212\277\234\304\004A\232\231\217A\205\353\215A\037\205wAq=vAf\206\335C\217\302%\300\205\353\331@\315\314L@\000\000\340\277H\341j\300\360\247\266@\217\302uAffrA{\024NA\341\032\342C\\\217\022Aq=\322@\037\205\177A\217\302EA\270\036\355@\024\256\257@T\343mA\366(\304A\341z\302A\364\335\342Co\022\303?\252\361*A\006\201\001A\266\363\213A\335$^A\252\361\016A\260r\340@\321\"\203A\035Z\320A\354\221\341C\031\004&\300\303\365\210\277\244p\001A\000\000\260@ffnA\327\2434AH\341\312@\244p\215@\234\304\\A\024.\341C\024\256G\277\236\357W\300\315\314\354\277\205\353\351@=\n\227@\205\353aA\366((A\205\353\261@\303\365h@\315\214\344C\024\256\327@R\270\276@\213lW@\341z\234@\315\314`A)\\7AH\341\246A\000\000\212A\315\314DA\024N\344CH\341\372\276\000\000\310@=\n\257@b\0208@\315\314\214@\303\365XA\037\205/A\303\365\242A{\024\206A\317\367\342C\321\"+\300\372~J\300/\335d@\252\3612@\027\331N>\221\355\334?\016-.Aj\274\004Ah\221\215A=J\345C\246\233\224@\366(\374?\244p\275?\037\205\003A{\024\356@o\022\233@\n\327\313@\341zxA=\nOA\327#\347C\315\314l@\006\201\005A\244p\265@\217\302\245@R\270>Aq=2Aj\274\010A\270\036!A\n\327\231A\000\000\346C\205\353\021\300\217\302\265?J\014\302@\303\365X@\232\2319@q=\032A\217\302\rA\022\203\310@\256G\371@\354q\336C\217\302q\301\270\036\213\301=\n[\301j\274\020\301\037\205;\301)\\C\301=\n\257\300\000\000\310\300\006\201\r\301\327\243\336C\024\256\307>\037\205k\301\000\000\210\301\315\314T\301\372~\n\301\256G5\301\270\036=\301\\\217\242\300\037\205\273\300)\374\335C\024\256\247\277\037\205k\277q=\200\301\341z\222\301\217\302i\301\274t\037\301q=J\301{\024R\301\341z\314\300{4\346C\037\205\203A{\024rA\354QxA\205\353\321>)\\\357\277q=\352?\002+\317@33s@\n\327S@\270\236\350C\\\217\232@\366(\252A\024\256\237A\315\314\242A\024\256\247@\244p=@\270\036\325@/\3354A{\024\nAq]\352C)\\_@\270\036\005A{\024\306A\232\231\273AR\270\276A\024\256\013Aff\316@ff\"A9\264lA\\\257\353C\303\365(@\366(\304@)\\/A33\333AR\270\320A\n\327\323A\205\3535A\244p\021A\327\243LA\000\000\352C\024\256W\300H\341:\277\327\2430@H\341\362@q=\300A\217\302\265AH\341\270A\000\000\000A=\n\267@\256\007\351C\354Q\370\277\205\353\251\300H\341*\300\205\353Q?\315\314\264@R\270\260Aq=\246A)\\\251A\205\353\301@\000`\350C\024\256\247\277\000\000P\300\n\327\323\300R\270~\300H\341\372\276H\341\212@q=\246A\217\302\233AH\341\236A\303\325\346C\270\036E\300\341z\214\300\\\217\312\30033\033\301\205\353\341\300\341zd\300\256G\241?\232\231\215A\270\036\203Ah\341\343C\207\026\275\300\362\322\017\301\264\310$\301\362\322C\301w\276y\301\006\201O\301\374\251\027\301\234\304\224\300\360\247<AH\201\342Cb\0200\300\\\217\n\301\n\327;\301\315\314P\301\n\327o\301H\341\222\301\037\205{\301\024\256C\301\315\314\354\300\217\302\344C\354Q\220@\351&\341?\315\314\204\300)\\\347\300\327\243\010\301\024\256\'\301\232\231]\301)\\3\301=\n\367\300f\246\346C\205\353q@\327\243\004A}?\261@\244p\275\276\315\314\\\300\354Q\230\300ff\326\300\270\036!\301\217\302\355\300\\O\345C\037\205+\300\315\314\214?\037\205\263@\333\3716@33C\300\366(\304\300{\024\356\300{\024\026\301\000\000L\301)\374\347C33\253@H\341*@ff\316@)\\/A\020X\003A33\023@\024\256G\277\217\302\005\300\303\365\200\300Rx\353C=\n\337@\270\036EAq=\032AR\270VA\244p\217A/\335rA\354Q\024A{\024\306@\366(\234@\354\021\354C\232\231\231?R\270\002A\354QXA\244p-A\205\353iA=\n\231A1\010\203A\037\205\'A\341z\354@\\\217\355CR\270>@\217\302\205@ff2A\000\000\204A\270\036]A\315\314\214AH\341\260A;\337\232A33WA\037\305\356CH\341\032@\315\314\254@33\323@\270\036YA)\\\227A\205\353\201A\366(\240Aq=\304Ad;\256A\037%\364C\000\000,AR\270RA33\201A\315\314\212A\\\217\302A)\\\355A\205\353\327A\366(\366A\270\036\rB)\334\365C\037\205[@H\341bA\315\314\204A\327\243\234Aq=\246A\000\000\336Aff\004B)\\\363A\315\314\010B\341\272\365C\270\036\205\276H\341J@R\270^AR\270\202A\\\217\232A\366(\244A\205\353\333A)\\\003B\256G\361A\000\200\370C\256G\261@\303\365\250@)\\\013A\024\256\233A=\n\257AH\341\306A\341z\320A\270\036\004B\037\205\031B\256\207\371C\n\327\003@33\363@H\341\352@\354Q,A\366(\254A\037\205\277A)\\\327A\303\365\340A)\\\014B\341:\371C\232\231\031\277H\341\272?\000\000\340@\024\256\327@R\270\"A)\\\247AR\270\272A\\\217\322A\366(\334A\217b\370C\354Q\330\277\\\217\022\300\037\205k\276\205\353\251@\232\231\241@\024\256\007A\n\327\231A33\255A=\n\305Aq=\366C\256G\211\300)\\\277\300\\\217\322\300\327\243\220\300\\\217\202?\\\217B?{\024\206@=\noAH\341\212A\327C\371C\232\231\301@\256G\341?)\\\217=\024\256\007\277\n\327\303?q=\342@\205\353\331@\n\327#A\205\353\247A\327C\371C\000\000\000\000\232\231\301@\256G\341?)\\\217=\024\256\007\277\n\327\303?q=\342@\205\353\331@\n\327#A\315\354\367C\037\205+\300\037\205+\300\024\256W@\037\205k\277=\n\'\300\244pM\30033\223\277\341z\214@\366(\204@\232\231\363Cff\n\301\256G5\301\256G5\301\303\365\250\300\270\036\031\301\366(4\301\217\302=\301\315\314\034\301\354Q\210\300=J\362C\024\256\'\300\354Q4\30133_\30133_\301\315\314\374\300=\nC\301{\024^\301\024\256g\301R\270F\301\217B\364C\366(|@\303\365\250?\\\217\352\300\366( \301\366( \301\244p}\300\000\000\004\301=\n\037\301\327\243(\301\270^\371C\037\205#A\\\217bA\327\2438A\303\3658@=\nW>=\nW>\354Q\310@\366(\374?)\\\217>\217b\001Dff\226A\366(\350A\n\327\003BR\270\362A\037\205\255A{\024\230A{\024\230A\341z\310A\366(\246A\205\213\000D=\nW\300=\nwA\256G\315A\315\314\354A\n\327\327A\327\243\222AffzAffzA\232\231\255A\000\020\001D\341z\004@\270\036\245\277{\024\214A\n\327\335A)\\\375Aff\350A33\243A\217\302\215A\217\302\215A\217\002\003D\256G\371@\217\302\035A\000\000\320@ff\312A{\024\016B\n\327\035B)\\\023B\037\205\341A{\024\314A\n\207\003D\341z\004@\217\302\035AH\341>A\270\036\tA\303\365\332A)\\\026B\270\036&B\327\243\033B{\024\362A{\324\005D)\\\023A\341z4A\\\217\230A\270\036\251Aq=\216A\354Q\022B33;B\303\365JB\341z@B=z\004D\270\036\255\30033s@\n\327\273@\\\217ZA\024\256{A\205\353EA)\\\371A\\\217%B\354Q5Bfv\tD\037\205\237A\341zhA\205\353\275A\341z\316Aff\006B\024\256\016Bq=\001B\244pLB\354QuB\303\005\nD)\\\017@\244p\261A\366(\206A\n\327\317Aff\340A)\\\017B\327\243\027B33\nBffUB\024\356\tD\244p\275\276)\\\357?\341z\256A33\203AH\341\314A\244p\335AH\341\rB\366(\026BR\270\010Bf\306\tDR\270\036\277\244p}\277\000\000\240?\037\205\251A\341z|A\205\353\307A\341z\330Aff\013B\024\256\023B\303\205\nD)\\?@\024\256\027@\000\000\000@\024\256\207@\244p\301A\366(\226A\n\327\337Aff\360A)\\\027B)l\nD\315\314\314\276\217\302%@\366(\374?\315\314\314?\217\302u@q=\276A\303\365\222A\327\243\334A33\355Aq\215\nD\270\036\005?\217\302\365==\nG@)\\\037@\024\256\007@\037\205\213@ff\302A\270\036\227A\315\314\340A\217\022\tD\244p\275\300\315\314\254\300\232\231\271\300\n\3273\300\037\205[\30033s\300\024\256\307\277=\n\223A\037\205OA3\023\007D\024\256\377\300\\\217^\301q=V\301\327\243\\\301\315\314,\301R\2706\301\327\243<\301\315\314\030\301q=&A3\303\tD\000\000,A\327\2430@q=J\300\303\365(\300\\\217B\300\315\314L\275\037\205+\277\270\036\205\277\232\231\231?\256\007\006DH\341n\301\217\302\205\300R\270B\301R\270\220\301\\\217\214\301\217\302\217\301\024\256o\301\232\231y\301\037\205\177\301\\\177\005D\354Q\010\300\341z\210\301\205\353\311\300\315\314d\301\217\302\241\301\232\231\235\301\315\314\240\301H\341\210\301\n\327\215\301\217R\006D33S@\217\302\225?\366(\\\301\327\243@\300\000\0000\301)\\\207\30133\203\301ff\206\301\303\365\\\301\037\025\007D\\\217B@H\341\312@R\270\206@\037\205+\301\217\302\365<R\270\376\300{\024^\301\217\302U\301\366(\\\301\232)\tD\270\036\005A\217\3025A\\\217jA\341zHA\232\231\031\300\232\231\005A\354Q\270>\205\353\261\300\256G\241\300f\306\tD\315\314\034@\354Q,A\303\365\\AH\341\210A\024\256oA\315\314L=\315\314,A\n\3273@=\nG\300\244\240\014D\\\2176A\217\302]A\244p\261A\217\302\311A\366(\344A\270\036\323A)\\7A\024\256\261A\037\205cA\244\260\rD\000\000\210@\\\217zAH\341\220A\244p\323A\217\302\353A{\024\003B\270\036\365A)\\{A\024\256\323A\327\243\016D33s@\315\314\000A\024\256\233A\256G\257A\n\327\361A{\024\005B\256G\022B\217\302\tB{\024\234Af\366\rD\244p-\300\037\205\213?H\341\252@\000\000\206A\232\231\231A\366(\334A\341z\364A\244p\007B\n\327\375A3\003\017Dff\206@R\270\276?\256G\251@\327\243\030A\232\231\247A33\273A\217\302\375A=\n\013Bq=\030B\354\021\020D)\\\207@H\341\006A=\n\267@\354Q\030A\354Q\\A\244p\311A=\n\335A\315\314\017B\303\365\033B\\_\020DH\341\232?{\024\256@q=\032A\217\302\335@\024\256+A\024\256oA\270\036\323AR\270\346A\327\243\024B\232)\020D=\nW\277\244p\275>33\223@\315\314\014AH\341\302@q=\036Aq=bAff\314A\000\000\340A\\?\017Dq=j\300\000\000\220\300\\\217R\300\327\243p?\341z\244@\037\205\033@)\\\307@\024\256\'A\270\036\257A\262}\016D\374\251A\300\266\363\325\300\376\324\360\300\254\034\312\300\006\201\005\300\307K\007@u\223\030\277V\016M@+\207\356@f\226\021D\016-FA\217\302\025Aff\266@\037\205\233@q=\302@\315\314$A\000\000hA\327\243<A\244pyA\303\305\021D\244p=?\031\004RA\232\231!A{\024\316@33\263@\205\353\331@\327\2430A\n\327sA\341zHA\\o\022D\232\231)@\303\365X@\177j|A\000\000LA\244p\021A\000\000\004A)\\\027A=\n[A\270\036\217A\244\360\020D)\\\277\300\270\036U\300\217\302%\300j\274\034A\327\243\330@=\nG@\256G\021@R\270^@R\270\366@\000\300\021D)\\O@)\\/\300\354Q\270\275ff&?u\223PA\366( A33\313@\354Q\260@=\n\327@\256w\023D\n\327\333@\217\302!A\366(\204@\303\365\330@\327\243\360@}?\237A=\n\207A\037\205SA{\024FA\244\340\022D=\n\027\300\354Q\220@\000\000\370@\\\217\342?\244p\215@\270\036\245@5^\214A\354QhA\217\302-A\\o\022D\\\217\342\277\366(\204\300)\\/@)\\\277@\000\000\000\000\232\231)@\303\365X@\177j|A\000\000LA\244@\022DH\341:\277\000\000 \300\037\205\233\300\327\243\000@\000\000\250@H\341:\277\217\302\365?q=*@j\274pA\000\220\022DR\270\236?\\\217\002?\256G\241\277\024\256g\300\000\000P@\024\256\317@\\\217\002?q=J@\232\231y@3\303\022D\315\314L?\\\217\002@\024\256\247?\037\205\353\276\341z4\300\232\231\201@\256G\351@\024\256\247?\244p}@HA\023D\366(\374?\256G1@\354Q\200@\205\353Q@\256G\301?\232\231Y\277\327\243\300@\366(\024A\205\353Q@\000\340\023DR\270\036@ff\216@\000\000\250@\024\256\317@\354Q\270@)\\\177@\327\243\320?\000\000\010A\n\327;A\244\240\023D\244p}\277R\270\276?\244p]@\354Q\210@\000\000\260@\327\243\230@\000\000@@\n\327#?\354Q\360@\270\356\024D=\n\247@)\\\207@R\270\326@H\341\nA\024\256\027A\037\205+A\n\327\037A\037\205\003A\037\205\273@\366H\024D\217\302%\300\354Q(@\205\353\321?\n\327\203@H\341\302@\341z\334@{\024\002A\315\314\354@\366(\264@\244p\025D\n\327\223@\205\353\001@\000\000\350@\354Q\310@\n\327\013A)\\+A\366(8A\000\000LA\354Q@A)|\024D\341zt\300\315\314L?\270\036\345\277\037\205[@\366(\034@\244p\235@\341z\334@{\024\366@H\341\016A\341\032\025DR\270\036@\037\205\253\277\205\353Q@\327\2430?\270\036\275@\244p\235@\315\314\354@\205\353\025AR\270\"A\205\253\025D\327\243\020@\024\256\227@\037\205k?\256G\261@\315\314<@R\270\002A\217\302\345@\\\217\032A{\024:A\256G\026D\366(\034@ff\226@\217\302\345@=\nW@)\\\377@\341z\254@\217\302)A\205\353\031A\232\231AA\205\353\030D\303\365(A\000\000PA\366(tA\205\353\215AR\270^A\354Q\224A33\177A)\\\251A\244p\241A\270\236\032D\232\231\331@H\341\212Aff\236A\341z\260A\354Q\304A\217\302\245AR\270\312A\000\000\266A\217\302\337A\256\267\033D\341z\214@=\n3A\000\000\256A\037\205\301A\232\231\323A\244p\347AH\341\310A\n\327\355A\270\036\331A\232\331\032D{\024^\300\037\205k?=\n\367@q=\222A\217\302\245A\n\327\267A\024\256\313A\270\036\255A{\024\322A\270\256\033D\270\036U@)\\\017\276\000\000\210@\315\3140AH\341\254Aff\300A\341z\322A\354Q\346A\217\302\307A\270\376\032D\000\0000\300\341z\024?\303\3658\300\000\000\300?\315\314\004AH\341\226Aff\252A\341z\274A\354Q\320A\000\260\034D\327\243\330@\327\243\200@33\353@\354Qx@\354Q\004A\270\036qA=\n\315A\\\217\340A\327\243\362A\\\377\033D\327\2430\300\354Q\200@\256G\241?H\341\222@)\\\217?\354Q\260@\303\365DA\303\365\266A\341z\312A\244\020\030D\024\256{\301\205\353\223\301\037\205;\301\037\205g\301q=2\301\217\302i\301\037\205#\301H\341Z\300\341z\344@f\206\024D\\\217b\301\270\036\357\301\232\231\002\302=\n\317\301=\n\345\301ff\312\301\366(\346\301=\n\303\301\327\243\214\301H\201\026D\244p\375@\024\256\307\300\217\302\257\301\n\327\305\301\024\256\217\301\024\256\245\301=\n\213\301\315\314\246\301\024\256\203\301\nG\026D\303\365h\277\354Q\340@\315\314\344\300=\n\267\301\270\036\315\301\303\365\226\301\303\365\254\301\354Q\222\301{\024\256\301\270\236\023D{\024*\301\327\2438\301\024\256g\300q=\216\301=\n\006\302{\024\021\302\000\000\354\301\000\000\001\302)\\\347\301\303\305\022D\303\365X\300\354Q`\301H\341n\301\354Q\340\300)\\\251\301\232\231\023\302\327\243\036\302\\\217\003\302\\\217\016\302fv\023D\327\2430@\256G!\277\366(4\301R\270B\301\000\000\210\300\256G\223\301\\\217\010\302\232\231\023\302=\n\361\301\000\000\021D\232\231\035\301H\341\342\300\024\256\'\301H\341\250\301\366(\260\301\232\231a\301{\024\342\301\303\365/\302\000\000;\302\256\347\022D\n\327\363@R\270\016\300\024\256\007?=\n7\300\n\327W\301fff\301)\\\317\300\270\036\245\301\341z\021\302=\032\021DR\270\346\300\205\353\321>=\n\027\301\217\302\325\300\270\036!\301\232\231\245\301H\341\254\301=\n[\301\315\314\336\301\270\276\021D\341z$@\341z\224\300R\270>@\n\327\333\300\037\205\203\300\000\000\360\300=\n\221\301\354Q\230\301\205\3531\301\244\200\tDH\341\003\30233\363\301\244p\026\302\205\353\357\301)\\\037\302\354Q\024\302H\341!\302ffL\302=\nP\302\000\000\007D\366( \301\205\353+\302\327\243!\302\341z>\302\000\000 \302ffG\302)\\<\302\205\353I\302\244pt\302\341\232\007DH\341\032@H\341\362\300q=\"\302\303\365\027\302\315\3144\302\354Q\026\302R\270=\302\024\2562\302q=@\302f\206\007D\n\327\243\276ff\006@\270\036\375\300\037\205#\302q=\031\302{\0246\302\232\231\027\302\000\000?\302\303\3653\302\217\222\005D\205\353\371\300{\024\002\301R\270\266\300\037\205{\301\217\302B\302\341z8\302\354QU\302\n\3276\302q=^\302j|\004Do\022\213\300\372~B\301\262\235G\301`\345 \301+\207\240\301\335$T\302/\335I\3029\264f\302X9H\302HA\005D/\335D@\\\217\242\277\256G\021\301ff\026\301)\\\337\300\205\353\207\301\n\327G\302\\\217=\302ffZ\302\256\307\004D33\363\277+\207\226?H\341J\300\024\256/\301\315\3144\301{\024\016\301\270\036\227\301\244pO\302\366(E\302{4\007D33\033A\232\231\371@\031\004.A\303\365\320@\n\327\243\277\315\314\314\277\205\353Q?=\n\023\301\327\243(\302\313\261\003D\010\254`\301\252\361\212\300w\276\307\300\276\237J\300Nb\360\300\351&u\301\242Ez\301P\215S\301#\333\271\301\217\322\004DNb\220@\341z\030\301{\024.>\244p\335\277\272I\254?\000\000@\300\303\365,\301{\0242\301)\\\013\301\024^\005D\037\205\013@\335$\326@33\353\300ff\026@ff\346>\374\251a@\205\353Q\277{\024\n\30133\017\301)\034\006D{\024>@\315\314\244@\215\227\032A\366(\214\300q=\252@H\341Z@;\337\317@\232\231\t@\270\036\265\300{\234\005D)\\\377\277\232\231y?\205\353I@\020X\365@\000\000\314\300\315\314T@ff\266?1\010\220@R\270\036>\232\031\006Dq=\372?\n\327#\275\037\205;@\037\205\243@\266\363\031A\244p\215\300\303\365\250@\354QX@\215\227\316@\256G\005D\205\353Q\300\232\231\251\277\341zT\30033\263\276q=\352?\252\361\312@ff\366\300\000\000\000@\315\314\314=3S\007DH\341\002A\315\314\234@)\\\333@\037\205\233@\\\217\372@\366( A\035ZhA\217\302\365>H\341\"A?\215\006D\266\363E\300\264\310\242@\307K\347?\234\304p@\016-\342?\201\225\227@\020X\335@/\3356Ad;\'\300\024\316\007D\177j\240@\217\302\365?\232\231!Aq=\332@ff\014A\303\365\330@\000\000\034AH\341>A7\211\203A\3250\007D}?\035\300\201\225#@\325x\t\277u\223\364@\262\235\213@\016-\312@\004V\212@B`\351@h\221\027A3\263\007D5^\002@=\n\327\276\333\371\222@\000\000\300?H\341\032A\315\314\314@\024\256\005A\037\205\313@\256G\025A{\304\005D)\\\367\300\016-\266\300ff\002\301\234\304H\300)\\\307\300\232\231\371?q=\252\277\000\000 ?)\\\257\277\024\336\004Dfff\300\256G5\301!\260\024\301\000\000<\301\201\225\327\300\256G\035\30133\323\277\217\302\235\300ff>\300\205\233\003D\256G\241\300q=\n\301\303\365\202\301\370Se\301\354Q\206\301\230n<\301\205\353m\301{\024\326\300\037\205\037\3013\263\003D\244p\275>\244p\225\300\354Q\004\301\000\000\200\301sh_\301)\\\203\301\022\2036\301\000\000h\301q=\312\300),\005D\341z\274@\354Q\310@\366(\234?\354Q\030\300\217\302!\301\002+\001\301\341z(\301D\213\260\300\217\302\t\301\327C\007D\205\353\005A\366(dA{\024jA\244p\031A\024\256\277@R\270\336\277b\020\230>q=\n\300\215\2276@{T\010D\354Q\210@{\024JA\366(\224A\270\036\227A\232\231]A\000\000$A\256G!@\362\322\221@ff\006@\303\245\nD\354Q\024A\341zXA33\257A\354Q\336A\256G\341A\303\365\270A\366(\234A\327\243<Ad;]Aq\r\rD\205\353\031A\270\036\227A33\271A\366(\374A\327\243\025B\270\036\027B\303\365\002B\270\036\351A\256G\253A\270\236\014D\244p\335\277\341z\374@\256G\211A)\\\253A\354Q\356AR\270\016B33\020B{\024\370A\256G\333A)\014\014D\\\217\022\300\327\243\200\30033\263@\205\353mA=\n\231A\000\000\334A\\\217\005B=\n\007B\217\302\345A\315\034\020D{\024\202A\037\205_A\n\327CAH\341\256A=\n\371A\\\217\rB=\n/B\232\231FB{\024HB\366H\021D{\024\226@\232\231\247A\256G\225A\244p\207Aff\324A\256G\017B\354Q B\315\314AB)\\YB\217\342\020D\315\314\314\277\217\302E@\315\314\232A\341z\210A\256GuA\232\231\307AH\341\010B\205\353\031Bff;B\205\313\014DH\341\202\301\024\256\217\301\354QT\301)\\?@333?\n\327\203\277\244p\tAH\341\216A\303\365\260A\315L\rD\256G\001@\244pe\301=\n\177\301\000\0004\301\354Q\240@{\024.@\244p}?\217\302)A=\n\237A\327c\rD\354Q\270>\354Q\030@\024\256_\301\256Gy\301q=.\301\n\327\253@\270\036E@\315\314\254?\037\205/A\232\231\rD=\nW?\232\231\231?{\024N@q=R\301\n\327k\301\315\314 \301R\270\306@H\341z@\366(\014@\000\000\014D\315\314\314\300\205\353\261\300ff\246\300\037\205K\300\354Q\234\301\270\036\251\301\232\231\203\301\\\217B\276R\270\036\300\000`\013D\000\000 \300ff\016\301\303\365\000\301ff\366\300\217\302\265\300\354Q\260\301\270\036\275\301\232\231\227\301\366(,\300\000@\tD\000\000\010\301\000\0000\30133\213\301\341z\204\301\232\231\201\301H\341b\301\354Q\364\301\\\217\000\302\232\231\333\301\037U\013D\256G\005A{\024.\276H\341*\300\270\036\021\301\024\256\003\301\n\327\373\30033\273\300\024\256\261\301\341z\276\301R\270\014D\232\231\261@{\024^A\366(\254@\354Q8@\256Ga\300\037\205+\300\341z\024\300\232\231\231\276\256G\205\301)\254\014D\\\217B\276\037\205\253@=\n[A{\024\246@\366(,@\244pm\300\024\2567\300\327\243 \300H\341\372\276\315\234\014D\217\302u\276\366(\334\276\n\327\243@33WAff\236@\315\314\034@\315\314|\300=\nG\300\000\0000\300q\255\rD\354Q\210@\327\243\200@\270\036u@{\024\026A\024\256\215A)\\\023AR\270\326@R\270\236>33\223?\256\307\rD\205\353\321>\244p\225@\217\302\215@\024\256\207@\327\243\034A\303\365\220A\205\353\031A\n\327\343@\354Q8?33\016D=\n\327?\217\302\005@33\313@\037\205\303@\244p\275@\037\2057Aff\236A\315\3144A\315\314\014A\244\300\016D\244p\r@\303\365x@\232\231\211@\303\365\010A\270\036\005A{\024\002AH\341ZA{\024\260A\366(XA\024\016\016D\\\2172\300\341z\024\277\315\314\214?\256G\301?\327\243\270@\303\365\260@H\341\252@q=.A\217\302\231A\217\342\014D\217\302\225\300=\n\357\300\354Q\250\300\270\036e\300H\341J\300\037\205\213?\232\231Y?\303\365(?R\270\306@\\\337\rD\315\314|@H\341:\277\256Ga\300\024\256\247\277\244p\275>\024\256G?\256G\241@\232\231\231@\037\205\223@\024\216\rD\\\217\242\277\037\205+@\000\000\000\300\256G\231\300\270\036%\300fff\277H\341\372\276\256Gq@\205\353a@\270.\017D\354Q\320@\024\256\247@=\n\023A\354Q\220@\366(\334?\037\205{@\037\205\263@\327\243\300@\341z$AH\261\022D\327\243`Aff\244Aq=\232A\n\327\271Aff\224A\366(|A\217\302\217A33\235A\341z\240A\000@\023DR\270\016@\366(\202Aq=\266A{\024\254A\024\256\313Aq=\246A\205\353\217A\232\231\241A=\n\257A3\323\024D\232\231\311@\341z\010A\\\217\264A\327\243\350A\341z\336A{\024\376A\327\243\330A\354Q\302A\000\000\324AH\211\tD\270\2364\302\205k\033\302\000\200\022\302\024\256\264\301\232\231\200\301\217\302\212\301\354QV\301\232\231\220\301\205\353\246\301f\206\tD\354Q8\275\315\3144\302\232\231\033\302\024\256\022\302=\n\265\301\303\365\200\301\270\036\213\301=\nW\301\303\365\220\301\217\302\nD{\024\236@\327\243\234@=\n!\302\n\327\007\302\n\327\375\301\037\205\215\301H\3412\30133G\301\000\000\010\3013\223\nD\244p=\277ff\206@\303\365\204@\000\000$\302\315\314\n\302H\341\001\302\244p\223\301R\270>\301=\nS\301\327\303\010D\024\256\347\300)\\\377\300\\\217B\300\244pE\300\303\365@\302\217\302\'\302\n\327\036\302)\\\315\301\256G\231\301\\?\010D\341z\004\300\303\365\024\301\315\314 \301\037\205\243\300\303\365\244\300q=I\302=\n0\302\270\036\'\302\205\353\335\301\366\350\004D\232\231U\301R\270v\301\256G\265\30133\273\301\024\256\223\301=\n\224\301\327\243~\302\244pe\302\037\205\\\302\327C\004D\270\036%\300H\341~\301\000\000\220\301\205\353\311\301\n\327\317\301\354Q\250\301\024\256\250\301\341z\204\302\217\302o\302)L\004D\270\036\005>\315\314\034\300\315\314|\301\303\365\216\301H\341\310\301\315\314\316\301\256G\247\301\327\243\247\301R8\204\302\000\000\005D\n\3273@\366(<@\354Q\270>\n\327O\301\303\365p\301ff\262\301\354Q\270\301\315\314\220\301\366(\221\301{l\003D\217\302\311\300\024\256_\300)\\W\300q=\276\300)\\\232\301\205\353\252\301\n\327\344\301\217\302\352\301q=\303\301f\246\004D\303\365\234@33\263\277\341z\264?\270\036\305?\270\036\205\277q=f\301\024\256\203\301\232\231\275\301\037\205\303\301\\/\375C\n\327\301\301\232\231\232\301=\n\315\301\\\217\266\301\037\205\265\301\366(\312\301\341z\032\302\217\302\"\302R\270?\302H\341\376C\303\365X@R\270\246\301\303\365~\301\205\353\261\301\244p\233\301ff\232\301=\n\257\301\205\353\014\30233\025\302\303U\371C\244p1\301ff\366\300\244p\377\30133\330\301\354Q\005\302\366(\364\301\270\036\363\301H\341\003\302\256G9\302\354\221\366C\303\365\260\300\303\365\204\301\024\256S\301\n\327\025\302R8\002\302\244p\033\30233\020\302\024\256\017\302\000\000\032\302\232i\002D{\024\344A\n\327\267Aq=>A\341ztA33\017\301\244p\201\300\232\231%\301\256G\361\300\270\036\355\300f\206\376C\232\231I\301\\\217~A{\024&A\217\3025\277\037\205+@ff\254\301\366(\205\301\232\231\267\301\270\036\241\301\354\261\374Cq=j\300{\024\202\301\000\000DA=\n\327@\n\327\213\300H\341z\277\024\256\311\301\244p\242\301H\341\324\301\244p\377C\024\256\257@q=\352?\354Q,\301\205\353\215A)\\CA)\\\217?\354Q\220@\217\302\235\301=\nm\301\327\303\375CffV\300\303\365\010@\\\217\302\277\205\353a\301q=fA\217\302\rAR\270\016\300\341z\224?\\\217\270\301)\374\375C\256G\341>q=:\300\270\036%@q=\212\277H\341Z\301\256GmA\315\314\024A\270\036\345\277\315\314\314?\\/\371C\232\231\031\301\\\217\022\301\366(H\301\327\243\340\300H\341*\301q=\272\301)\\\247@\232\231\231\276q=6\301\n7\367C\366(|\300\327\243X\301\232\231Q\301\232\231\203\301)\\/\301\205\353i\301\217\302\331\301\270\036\245?\024\256\207\300H\201\355C)\\\233\301H\341\272\301\n\327\003\302{\024\002\302\341z\017\302=\n\363\301\366(\010\302\\\217:\302=\n\221\301f\006\354C\244p=\300=\n\263\301\\\217\322\301\024\256\017\302\205\353\r\302\354Q\033\302)\\\005\302\000\000\024\302ffF\302{\224\356C\037\205\243@\232\231\t@\366(\212\301\024\256\251\301\341z\366\301\303\365\362\301H\341\006\302\n\327\341\301\270\036\377\301\366\210\356C\354Q\270\275\327\243\240@\n\327\003@H\341\212\301ff\252\30133\367\301\024\256\363\301q=\007\302\\\217\342\301)\274\355C\315\314\314\277\354Q\330\277H\341Z@\037\205\353>\024\256\227\30133\267\301\000\000\002\302q=\000\302\327\243\r\302\341:\365C\n\327oAq=VA\315\314TA\256G\223A33wA{\024~\300\270\036\375\300{\024\214\301\\\217\210\301\244\320\362C\\\217\232\300\\\217\"A\303\365\010A\037\205\007A\256GYA\205\353)A\315\314\014\301\n\327K\301R\270\262\301\\/\361C\327\243P\300\244p\001\301\315\314\334@\232\231\251@R\270\246@\270\036%A\037\205\353@\303\365@\301\000\000\200\301\\\257\366C\000\0000A\024\256\367@q=:@33\217Aff\202A\024\256\201A\\\217\252AH\341\222A\024\256\207\277\315\314\374C\024\256CA\n\327\271A\217\302\237Aq=rA=\n\361Aq=\344A\037\205\343A33\006BR\270\364A)\\\371C\366(\334\30033\253@\315\314\202A\244pQA\366(\004A\000\000\272A33\255A\341z\254A)\\\325A\217\302\362C33S\301\327\243\240\30133\373\300\232\231I@\256G\341\275{\024\236\300\315\314 A33\007A\217\302\005A\327c\362C\244p=\277=\n_\301\\\217\246\301\244p\t\301q=\032@\232\231Y\277\217\302\265\300\303\365\024AR\270\366@\217\002\355C\366(,\301\000\0008\301\232\231\305\301\327\243\374\301\315\314\232\301\232\231\005\301\217\3029\301\037\205\203\301\232\231\271\277H\201\363C\n\327OAR\270\016@R\270\276?)\\;\301R\270\224\301\037\205\313\300\341z\224@\327\243\260?\315\314\\\300\000@\364CR\270\276?\024\256gA{\024n@R\270>@\037\205#\301\315\314\210\301\n\327\233\300\366(\304@\024\2567@R\230\361C\205\353\251\300\341zt\300R\270\022A\037\205\313\277\270\036\025\300\341zx\301\256G\263\301H\341\"\301\205\353Q?\270\376\370C\315\314lA\n\327\027A\024\256/A\217\302\277A)\\SA\037\205GAH\341:\277\037\205\363\300\n\327\223@\217\242\372C\205\353Q@\327\243\220A\354QLA\366(dA\000\000\332A\205\353\203A\000\000|A33#@\\\217\212\300=\n\372C\354Q\230\277\217\302\005@\270\036\207A\256G9A\270\036QA\341z\320A\315\314tA\303\365hA{\024\256?\327\003\372C\315\314L\275R\270\236\277\\\217\002@R\270\206A\341z8A\354QPA{\024\320A\000\000tA\366(hA\256G\364C\037\2057\301\354Q8\301)\\K\301H\341\026\301\n\327\253@\217\302u=ff\306?\327\243hA\205\353q@\000 \363C\n\327\023\300\341z\\\301\256G]\301\354Qp\301\n\327;\301\n\327C@\000\000\020\300\\\217B\277\024\256CAf\006\361Cff\206\300\354Q\320\300\n\327\217\301q=\220\301\217\302\231\301=\n\177\301\205\353\221\277ff\316\300R\270\236\300\315\214\355Cff\336\300ff2\301)\\W\301\244p\307\301\n\327\307\301)\\\321\301\270\036\267\301\244p\001\301ffV\301\nW\354CH\341\032\300\205\353\025\301\270\036Y\301{\024~\301\315\314\332\30133\333\301R\270\344\301\341z\312\301\366((\301=\n\354C\232\231\031\277\256GA\300\037\205\037\301R\270b\301\n\327\203\301\232\231\337\301\000\000\340\301\037\205\351\301\256G\317\301H!\343C\\\217\216\301)\\\223\301R\270\246\301\354Q\336\301\205\353\377\30133\t\302{\0247\302\256G7\302=\n<\302\232y\336C\303\365\024\301=\n\331\301\n\327\335\30133\361\301ff\024\30233%\302\244p.\302\354Q\\\302\037\205\\\302\270\276\333CR\270\256\300\354Ql\301)\\\002\302\217\302\004\302\244p\016\302q=*\302=\n;\302\256GD\302\366(r\302fF\332C\366(<\300ff\006\301\024\256\215\301\270\036\016\302\037\205\020\30233\032\302\000\0006\302\315\314F\302=\nP\302\366\010\332C\217\302\365\276H\341Z\300{\024\016\301\037\205\221\301=\n\020\302\244p\022\302\270\036\034\302\205\3537\302R\270H\302\232\031\341C{\024bAffZA)\\+A\000\000\250@\205\353\201\300=\n\257\301\n\327\263\30133\307\301\315\314\376\301\256G\344C\037\205\313@\205\353\243A{\024\240A\\\217\210A\217\3029A33\023@\354Qx\301\303\365\200\301\354Q\224\301\270\276\351CH\341.A\354Q\212A)\\\373A\037\205\367A\000\000\340A\354Q\264A\024\256SAH\341\222\300{\024\246\300=\352\355C\244p\005A\366(\232A=\n\315A=\n\037B\270\036\035B)\\\021B=\n\367A\\\217\254A\000\000p@\232\231\364C\205\353UA\024\256\255A\\\217\002B\000\000\034B\037\205TB\232\231RB\n\327FB\000\0001B\217\302\013B\002\253\365C9\264\010@\223\030xA\234\304\276A\240\032\013BD\213$Bb\020]B\335$[BNbOBD\2139B\217\002\367C\250\306+@q=\232@\037\205\221Aq=\324A\n\327\025B\256G/B\315\314gBH\341eB\270\036ZBq\315\345C\366\250\t\302\027\331\375\301\217\302\354\301\315\314\201\301\354Q\374\300H\341B@\341z\026A\256G\274A\244p\270A\n\027\351Cff\322@R\270\336\301}?\311\301\366(\270\301ff\032\301\024\256\247\277\205\353\031A\024\256\177AH\341\360A\205\313\360C\\\217vAH\341\257AH\341F\301\236\357\033\301\037\205\363\300\354Q\270@\232\231aAq=\310A\270\036\373A\000\300\356CH\341\202\300\270\0365A\366(\217A\366(\204\301B`]\30133;\301\217\302\325?\366( A\037\205\247A\256g\362C\205\353\351@{\024N@=\n\225A\327\243\311A)\\\023\301\376\324\320\300\341z\214\300\024\256\017A\\\217\212A\256\007\365C\000\000\250@\303\365HA\037\205\007A=\n\277A\327\243\363A\244p}\300\370S\243\277\366(\\?\024\256cA)|\364C\037\205\213\277\270\036\205@\037\2057A\366(\354@\354Q\266A\205\353\352A\232\231\241\300\213l\027\300\037\205k\276\244P\366Cq=j@\341z$@q=\372@{\024rA\327\2430A\232\231\323A\232\031\004B\205\353\261\277\313\241\245?\315,\362C\341z\004\301\n\327\223\300R\270\266\300\037\205\353\27633\333@\327\2430@)\\\221A\303\365\305AR\270\032\301\270~\362C\n\327#?\341z\364\300R\270~\300q=\242\300\354Q8>\024\256\357@\232\231Y@\341z\226A{\024\313A\315l\362C)\\\017\276\000\000\000?\303\365\370\300\n\327\203\300R\270\246\300\n\327#=33\353@\327\243P@)\\\225A{4\365C\205\353\261@\244p\255@\205\353\301@{\024\016\300\354Q\270?33\263>33\263@\\\217NA\270\036\rA=\352\364C\341z\024\277)\\\237@H\341\232@)\\\257@333\300\366(\\?\037\205k\276\327\243\240@\256GEA\366(\375C\205\353\203A\\\217~A\217\302\253A\327\243\252A\217\302\257A=\n[A\315\314\212A{\024\202A{\024\254A\315\014\376C\n\327\343?\366(\222A\037\205\215A\000\000\272AH\341\270A\000\000\276A\037\205wA=\n\231A\354Q\220A)\034\372C\366(\374\30033\303\300q=&A\303\365\034A\205\353uA\024\256sA\205\353}AH\341\362@\000\0004A\315\254\374C\366(\244@\000\0000\300\354Qx\277\354QxA=\noA\000\000\244AH\341\242A\000\000\250A\037\205KA\341\332\373C\205\353\321\277)\\_@\341z\214\300=\n\'\300{\024^A\315\314TAH\341\226A\217\302\225AH\341\232A\270\336\365C\037\205?\301\217\302Y\301\024\256\007\301H\341\202\301\256Gi\301\341z\364?q=\252?\341z\334@\000\000\330@H\001\366Cq=\212>33;\301\244pU\301)\\\003\301R\270\200\301\303\365d\301\037\205\013@\315\314\314?\270\036\345@\315,\363C\270\036\265\300\341z\254\300H\341\212\301\000\000\230\301\205\353]\301\000\000\256\301\217\302\237\301R\270^\300\205\353\201\300\205\313\362C\\\217B\277\244p\315\300\315\314\304\300\303\365\220\301{\024\236\301{\024j\301{\024\264\301\n\327\245\301\024\256\207\300\217B\365C\217\302\235@\244p\205@R\270\276\277\366(\234\277=\nS\301\256Gm\30133\033\301\327\243\214\301\315\314|\3013\023\361C\205\353\005\301\366(\\\300ff\206\300\217\302\035\301\244p\031\301\341z\254\301\232\231\271\301\\\217\220\301\232\231\317\301)\374\351CH\341b\301ff\264\301\303\365\214\301=\n\223\301\354Q\300\301\366(\276\301\303\365\016\302\037\205\025\302\000\000\001\302\217\002\347Cff\276\300=\n\241\301\000\000\344\301\\\217\274\301\327\243\302\301\205\353\357\301\217\302\355\301\217\302&\302\354Q-\302\366\010\350C33\003@\232\231y\300\327\243\220\301\232\231\323\301\366(\254\301q=\262\301\037\205\337\301)\\\335\301\\\217\036\302\354\261\341CH\341J\301{\024*\301\327\243\204\301{\024\366\301\037\205\034\302\315\314\010\302\n\327\013\302\341z\"\302ff!\302\\O\343CR\270N@33\027\301\315\314\354\300\232\231U\301q=\334\301\232\231\017\302\217\302\367\301\n\327\375\301\\\217\025\302q}\341C\303\365h\300\205\353\321\276\244pQ\301\327\2430\301\205\353\207\301)\\\371\301\366(\036\302\244p\n\302\341z\r\302=j\345C33\373@R\270\206@{\024\356@\024\256\247\300\366(L\300q=\022\301\\\217\272\301\037\205\375\301{\024\326\301RX\342C\341z\304\300H\341\332?=\n\367\277ff\246?{\0246\301\256G\025\301\341zt\301\024\256\353\301\354Q\027\302\217\002\341CH\341*\300\303\365\014\301\217\302u\27733\223\300)\\\257\277\315\314`\301\000\000@\301\232\231\217\301\037\205\000\302=*\346C\303\365$A\341z\364@\000\000\300?\232\231\025AR\270\266@=\n\017A)\\o\300\354Q\330\277\341z\364\300\n\227\347Cff6@\\\217RA\n\327\'A33\213@33CA\303\365\010A\327\243<A\n\327c\277\341z\224?f&\353C\n\327\343@\037\205\037Aq=\242AH\341\214A\037\2057A\\\217\232AH\341zA\256G\227A)\\\307@33\350C\315\314\274\300\366(\234?q=\202@{\024fA)\\;Aq=\262@R\270VA\341z\034A\366(PA=J\353C\217\302\305@)\\\217>\315\314\354@\000\000$A\341z\244A\270\036\217A\000\000<A\315\314\234A)\\\177A\n\027\356C33\263@\341z<A\366(\274@\000\000PA\232\231}A\256G\321A\205\353\273A\315\314\212A\232\231\311A\354\021\356C\n\327#\275\205\353\261@\n\327;AH\341\272@)\\OA\303\365|A\303\365\320A\232\231\273A\341z\212A\217\"\361C\366(\304@H\341\302@=\n;A\303\365\216A\037\205?AR\270\230A\037\205\257A\000\000\001B\327\243\354A\n7\360C\037\205\353\277\256G\211@\000\000\210@\232\231\035Aq=\200A{\024\"A\000\000\212A\315\314\240A\256G\363A\354Q\360C=\nW>\327\243\320\277\000\000\220@R\270\216@\303\365 A\205\353\201A\244p%A\024\256\213A\341z\242A\256\207\360C=\n\327>\256G!?H\341\232\277\244p\235@\366(\234@\024\256\'A\256G\205A\366(,A=\n\217A3\023\365C\244p\021A\366(\030A\037\205\033A\366(\374@\366(`A\037\205_A\\\217\234A\000\000\316A\315\314\236A\327#\376C=\n\221A\217\302\331A\270\036\335A\315\314\336A{\024\320A\\\217\000Bff\000B\315\314\026B\037\205/Bq]\000D\217\302\245@\341z\272A\232\231\001B\256G\003B\270\036\004B\037\205\371A\256G\025B\270\036\025B\037\205+B\000\000\001D\\\217\"@=\n\367@\315\314\316A\217\302\013B\244p\rB\256G\016B\205\353\006B\244p\037B\256G\037B\270^\000D\256G!\300\n\327\243<ff\246@\327\243\272A\024\256\001B)\\\003B33\004B\024\256\371A)\\\025B\217\322\003D\303\365\\A\327\2434A\256G]A{\024\230A\\\217\024B\205\3538B\232\231:B\244p;B{\0244B=\232\004D\024\256G@\244p\207A\\\217fA\232\231\207A=\n\261A=\n!BffEB{\024GB\205\353GB\341\312\003D)\\O\300\217\302\365\275=\n[AR\2702A)\\[A\270\036\227A{\024\024B\244p8B\270\036:B)\354\003D\270\036\005?{\024.\300\315\314\314>)\\cA=\n;A\024\256cA\256G\233A\366(\026B\037\205:B\217r\003D33\363\277\327\243\260\277\n\327\223\300\000\000\300\277\303\365DA\327\243\034A\256GEA{\024\214A\\\217\016B\256g\003D{\024.\276\341z\004\300ff\306\277\256G\231\300\217\302\325\277q=BA\205\353\031A\\\217BAR\270\212Af\226\002D\256GQ\300\366(\\\300H\341\252\300q=\232\300\303\365\000\301{\024\236\300\205\353\rA33\313@q=\016A\270\216\006D{\024~A\217\302IA=\nGA\327\243(A\303\3650Aq=\372@=\n/A\000\000\306A\n\327\261Af\226\005D\354Qx\300\000\000@A\024\256\013A\303\365\010A\270\036\325@\217\302\345@\366(|@\205\353\341@\303\365\246A\244\200\004DH\341\212\300\037\205\003\301\270\036\365@\341z\214@=\n\207@\341z\024@\217\3025@\315\314\314\276{\024.@f\026\006DH\341\312@\000\000\000@\327\243\360\277\000\000`A\024\256+A\303\365(A\\\217\nAH\341\022A{\024\276@\303\265\006D)\\\037@\256G\rA\024\256\217@\366(\034?\205\353\203A\037\205SA\315\314PAff2AR\270:A\366X\007D33#@\256G\241@{\0246A\256G\341@q=J@\354Q\230A\354Q|A\232\231yA33[A3\323\007D\341z\364?R\270\216@ff\336@\327\243TA33\017Aq=\242@\232\231\247A\244p\215A{\024\214A\205;\007D\024\256\027\300\037\205\353\276\217\302\005@\\\217\222@R\270.A\\\217\322@\315\314,@\327\243\224A\303\365tA\315\\\026D{\024rB\232\231hBq=pB\244pzB33\202BH\341\216B33\206BH\341|B33\236Bqm\032D{\024\202A\\\217\231B\354\321\224B\327\243\230Bq\275\235BR\270\242Bff\257BR\270\246B\303\365\236B\037\365\027D{\024\036\301\366(\314@\315\314\205B\\\017\201BH\341\204B\341\372\211B\303\365\216B\327\243\233B\303\365\222B\270\376\027D\232\231\031>\024\256\033\301\303\365\320@\232\031\206B)\\\201B\024.\205B\256G\212B\217B\217B\244\360\233B\\\377\030D\354Q\200@\270\036\205@=\n\267\300\327\243(A\270\036\216BHa\211B33\215B\315L\222B\256G\227B\354!\031Dq=\n?\232\231\221@ff\226@\217\302\245\300\256G1A33\217B\303u\212B\256G\216BHa\223B\000 \032D{\024~@\354Q\220@\354Q\010AR\270\nAH\341\232\277\315\314pA\327#\227Bff\222BR8\226Bf\246\032Dff\006@q=\302@\037\205\323@\205\353)A\354Q,A\n\327c?33\211A\nW\233B\232\231\226B\024\036\032D\354Q\010\300\217\302\365\274\366(|@)\\\217@\n\327\007Aq=\nAR\270\236\277\354QpA{\024\227B\037\245\032D=\n\007@\n\327\243\274\270\036\005@\232\231\301@H\341\322@\232\231)A\000\000,AR\270^?=\n\211A\315l\031D\366(\234\300\256G1\300\315\314\234\300333\300\217\302\225?H\341\332?=\n\267@\n\327\273@\354Q\200\300\000\300\031Dff\246?\270\036e\300\366(\274\277fff\300\000\000\300\277{\024\036@\327\243@@\327\243\340@\244p\345@f\346\031D\232\231\031?33\363?R\270>\300R\270^\277\000\000@\300fff\277\341zD@=\ng@\n\327\363@\205\013\033D\\\217\222@\217\302\245@)\\\317@\315\314\314?\244pm@q=\312?\037\205k@\315\314\364@=\n\003AH\021\034DH\341\202@R\270\nA\354Q\024A\270\036)A{\024\266@\232\231\371@\244p\265@\327\243\370@\n\327;A\037E\034D)\\O?\315\314\234@\024\256\027A\256G!A{\0246A\000\000\320@\217\302\tA)\\\317@\256G\tAH\261\034D\354Q\330?\000\000 @H\341\322@R\2702A\354Q<A\270\036QA=\n\003A\315\314$AR\270\002A{4\034D\232\231\371\277\270\036\205\276\315\314\014?\341z\224@\037\205\023A\270\036\035A\205\3531A\024\256\307@\232\231\005AR\270\033D\354Q\370\277\303\365x\300\315\314\014\300\205\353\261\277\315\314,@\303\365\350@\366(\374@H\341\022A\232\231\211@)L\032D{\024\266\300\366(\364\300\256G\031\301\341z\374\300\\\217\342\300)\\?\300\037\205\313?\366(\014@)\\_@\217\322\026Dff^\301R\270\234\301q=\254\301\n\327\273\301\354Q\256\301\n\327\247\301\270\036\207\301\303\365D\301)\\;\301\024\336\024Dq=\372\300\217\302\255\301\256G\333\301\315\314\352\301ff\372\301H\341\354\301ff\346\301\024\256\305\301=\n\241\301\024\356\021D\000\000<\301\\\217\234\301H\341\005\302\327\243\034\302ff$\30233,\302\244p%\30233\"\302\n\327\021\3023\343\021D{\024.\276R\270>\301\205\353\235\301\\\217\006\302\354Q\035\302{\024%\302H\341,\302\270\036&\302H\341\"\302\327#\025D\366(PA\244pMA\037\205\213?)\\\327\300=\n\245\301\\\217\322\301{\024\342\301\024\256\361\301\366(\344\301\037\265\023D)\\\267\300\303\365\350@\037\205\343@\341z\224\300)\\G\301H\341\322\30133\000\302\303\365\007\302\217\302\017\302\024\316\023D\024\256\307>H\341\252\300\244p\365@\000\000\360@\000\000\210\300\270\036A\301\217\302\317\301\256G\375\301ff\006\302\244\300\021D)\\\003\301q=\372\300\315\314X\301q=\n\277\217\3025\277)\\G\301q=\242\301R\270\010\302\341z\037\302\024\276\024D)\\?A\000\000p@\341z\204@\037\205\313\277R\2706A\000\0004A\000\000\000\277\270\036\005\301\217\302\261\301\000\200\023D=\n\237\300\024\256\337@\366(\234\277\341zT\277\205\353\321\300ff\316@\303\365\310@=\n\257\300\327\243T\301\n\207\021D\341z\374\300\217\302M\301fff\277\217\302\021\301\037\205\013\30133g\301\354Q\270\277{\024\316\277\217\302U\301q\355\nD33\323\301\366(\t\302=\n\035\302ff\332\301=\n\016\302\341z\014\302ff#\302R\270\336\301{\024\340\301f\026\rDq=\nA{\024\216\30133\315\301\303\365\364\301\256G\225\301\303\365\326\301\n\327\323\301\n\327\000\302\232\231\231\301{\364\016D=\n\357@H\341\200A\327\243$\301\244p\221\30133\271\301=\n3\30133\233\301{\024\230\301\205\353\305\301\000@\017D=\n\227?ff\nA\354Q\212A\217\302\021\301\000\000\210\301\217\302\257\301\366( \301\217\302\221\301\327\243\216\301\n\227\020D\037\205\253@\256G\321@\366(`A33\265A\000\000p\300q=:\301H\341\204\301\315\314\224\300\217\302M\301\366\310\022D\341z\014Aq=bA\270\036uA\354Q\266A\244p\373A\303\365\240@=\n7\300\\\217\372\300\366(\204@\217\242\023D\232\231Y@H\341BA\354Q\214A\217\302\225A\037\205\321A\354Q\013BH\341\006Aq=\n?\217\302\215\300\000\340\023D\217\302u?\037\205\213@q=RA\000\000\224A\244p\235A33\331A\366(\017Bq=\026A\000\000\300?q\r\024D\217\3025?\217\302\325?q=\242@\232\231]A\024\256\231A\270\036\243AH\341\336A\000\000\022B\232\231!A\256\247\024Dq=\032@\024\256G@\\\217\202@)\\\357@{\024\202A\303\365\254Aff\266A\366(\362A\327\243\033B=\272\024D\341z\224>\315\314,@q=Z@\n\327\213@\327\243\370@ff\204A\256G\257AR\270\270A\341z\364A3\223\023D\037\205\223\300q=\212\300\341z\364\277\232\231\231\277\217\302u\276q=J@=\n?Aff\212A\n\327\223Aq\355\023D\341z\264?\315\314L\300q=:\300\000\000\000\277=\nW>\217\302\225?q=\222@\232\231UA\024\256\225A3\263\023D\303\365h\277\000\000\000?\037\205\203\300\341zt\300\341z\264\277333\277\270\036\205>q=j@=\nGA\327\303\024D\354Q\210@ffV@\354Q\230@\232\231\031>\256G\341>ff6@\n\327c@\327\243\220@\244p\375@{\304\026D\366(\000A\354QDA\217\3025A\354QLA\\\217\002A33\007A\217\302-A\270\0369A\341zHA\\_\027DH\341\032@H\341&A=\nkA\341z\\A=\nsA\256G)A\205\353-A\341zTA\n\327_A\270\016\027D\256G\241\277\341z\224?R\270\022AH\341VA\354QHAH\341^A\270\036\025A\217\302\031A\354Q@AR\230\026D\315\314\354\277=\nG\300\327\2430\277q=\352@\256G9AR\270*A\256GAA=\n\357@\354Q\370@\341\272\025D\244p]\300\205\353\251\300q=\322\300\315\314\204\300=\nw@\205\353\001AR\270\346@\205\353\tA\354Q\200@\000@\026D\270\036\005@\327\243\260\277R\270N\300\024\256\217\300\341z\004\300{\024\276@33#A\327\243\024A33+A\n\267\025D\303\365\010\300\217\302u\275\256Ga\300\n\327\253\300\366(\324\300R\270\206\30033s@\303\365\000A\315\314\344@\024~\024D\341z\234\300\303\365\340\300ff\236\300\\\217\006\301\366($\301\354Q8\301\232\231\021\301\037\205\213\277H\341J@f\026\027D{\024&A\024\256\257@ffV@\217\302\255@\366(\374?\217\302\365=\205\353\221\277\n\327\243?\327\243\024A\256\207\026DR\270\016\300ff\002A\327\243P@)\\\217?\315\314L@\270\036\205\276=\n\007\300\024\256W\30033s\277{D\030Dff\336@=\n\227@\232\231qA)\\#A\270\036\001Aff\"A{\024\326@H\341\232@\270\036e@\000`\031D\217\302\215@{\0246Aff\022Aq=\234Aq=jA\000\000HA\256GiA\205\3531A\354Q\024A)\034\032D\366(<@\n\327\353@\270\036eA\244pAA\217\302\263A\327\243\214A=\nwA\366(\214A\303\365`Aq\215\031DR\270\016\300\217\3025?\341z\244@\244pAA\217\302\035A\205\353\241A\232\231uA)\\SA\327\243tA\244\000\032Dff\346?\366(\334\276\327\243 @{\024\336@q=^A\\\217:A\354Q\260A33\211A\366(pA\2567\032D\366(\\?q=*@\366(\334>\024\256W@\232\231\371@\000\000lA\354QHA33\267A{\024\220A),\032D\354Q8\276{\024.?R\270\036@\000\000\200>\366(L@\n\327\363@\270\036iA\244pEA\217\302\265A\205\013\034D\024\256\357@\205\353\351@R\270\002A\037\205\037A\024\256\367@H\341*A\217\302qA\341z\260A\327\243\236AR\350\037D33wA\037\205\267A{\024\266A\303\365\274A)\\\313A\037\205\271A=\n\321A\341z\364A=\n\026B\000\360\035D\366(\374\300q=\362@\303\365pA{\024nA\n\327{A\354Q\214A\303\365tA\000\000\222A\244p\265AH\261\034D)\\\237\300\217\302M\301\217\302%@\256G!Aff\036A\366(,A\303\365HA\256G%A\354QTA\037\365\030D=\no\301)\\\237\301ff\336\301\232\231E\301\037\205\233\300\256G\241\300\217\302\205\300\354Q\030\300\037\205\223\300\037\305\030D\000\000@\277=\n{\301)\\\245\301ff\344\301\232\231Q\301\037\205\263\300\256G\271\300\217\302\235\300\354QH\300=\372\032D\256G\rA\256G\001A\037\205\333\300\244p=\301\217\302\235\301\327\243\210\300{\024N@\\\217B@\232\231y@\000 \032Dq=Z\300\244p\255@\244p\225@\354Q$\301\000\000t\301=\n\271\301\217\302\365\300\\\217B\276\244p\275\276\2172\032D\341z\224>\024\256G\300R\270\266@R\270\236@\024\256\037\301)\\o\301R\270\266\301\341z\354\300\315\314\314=\\?\026D\315\314|\301\366(x\301)\\\227\301\244p!\301\244p-\301q=\316\301{\024\366\301\\\217\032\302\037\205\271\301\n\027\026D\256G!\277\244p\203\301\270\036\201\301ff\234\301\037\205+\301\037\2057\301\256G\323\301\270\036\373\301{\024\035\302\217\302\030DH\341*A\315\314 A\000\000\270\300R\270\256\300\205\353\r\301\n\327#\275q=J\277\024\256{\301\024\256\245\301\000\000\031D\217\302u?q=:A\366(0A\256G\231\300\000\000\220\300\270\036\375\300\037\205k?{\024.>\354Ql\301\232\211\030D\315\314\354\277\n\327c\277\327\243\034A\\\217\022A\341z\324\30033\313\300\366(\034\301{\024n\277=\n\327\277\270\276\030D\341zT?\\\217\202\277\217\302u\275\205\353)A\n\327\037A\205\353\271\300\327\243\260\300H\341\016\301\315\314\314\275\341\222\031D\366(T@\327\243\204@H\341\022@\354QP@\303\365^AH\341TA\024\256\037\300\270\036\r\300\024\256\263\300R\230\032DR\270\202@\315\314\354@\024\256\003A\366(\314@H\341\352@\366(\220A\270\036\213A\037\205\313?\327\243\360?\000 \032D\327\243\360\277\270\036\r@\327\243\260@33\313@\000\000\220@R\270\256@\270\036\201A\366(xA\341z\224\276)\034\032D\217\302u\275\354Q\370\277\256G\t@R\270\256@\256G\311@{\024\216@\315\314\254@\327\243\200A33wA\000 \034D\303\365\000A\000\000\000A\n\327\303@\256G#A\354QXA\232\231eA\000\000HA)\\WA\270\036\301A\232\t\035D\232\231i@)\\;Aff:A\354Q\034A\024\256]A)\\\211A\000\000\220A33\201AH\341\210A\232\t\034D\000\000\200\30033\263\276R\270\366@\315\314\364@\327\243\270@\024\256\035AR\270RA\000\000`AffBA\024\016\034D)\\\217=\037\205{\300)\\\217\276\303\365\370@=\n\367@H\341\272@\315\314\036A\n\327SA\270\036aA\244P\034D\270\036\205?{\024\216?\303\3658\300\\\217B?\270\036\rA\366(\014A\366(\334@\244p/A\341zdA\037\205\035Dq=\232@\037\205\273@\217\302\275@=\n\367?\\\217\262@q=ZA\256GYA33;A\\\217|Aq\215\030D\303\365\236\301\315\314p\301\366(`\301=\n_\301\037\205\217\301\327\243d\301)\\\307\300\256G\311\300R\270\002\301{\324\030D{\024\216?{\024\226\301=\n_\301ffN\301\256GM\301\327\243\206\301H\341R\301\n\327\243\300\217\302\245\300{4\030D\000\000 \300\205\353\261\277{\024\252\301\037\205\203\301ffv\301\256Gu\301\327\243\232\301H\341z\301\n\327\363\300\217\202\030D\366(\234?\n\327\243\277{\024.\276\354Q\240\301\037\205s\301H\341b\301\217\302a\301H\341\220\301)\\g\301\232Y\031D=\nW@\\\217\222@\270\036\005@\366(L@\244p\205\301\217\302=\301\270\036-\301\000\000,\301\000\000l\301\2440\026Dq=J\301\341z\024\301\303\365\000\301\303\365(\30133\027\301\\\217\352\301\000\000\304\301\024\256\273\301\270\036\273\301\2172\026D\217\302\365<\217\302I\301\000\000\024\301\341z\000\301\341z(\301R\270\026\301\354Q\352\301\217\302\303\301\244p\273\301\327c\030D\354Q\014A\315\314\014A\217\302u\300\217\302\365\276\244p=?\256G\341\277ff&\277\366(\244\30133{\301\256\'\026D=\n\017\301{\024.\276)\\\017\276\341zL\301R\270\026\30133\003\30133+\301\244p\031\301\024\256\353\301=\352\023D)\\\017\30133\217\301{\024\022\301\232\231\021\301\205\353\255\301=\n\223\301\256G\211\301\256G\235\301ff\224\301\327\023\024Dff&?\303\365\004\301\000\000\212\301\024\256\007\30133\007\301R\270\250\301\n\327\215\301{\024\204\301{\024\230\301H\361\023Dq=\n\277\256G\341=\232\231\r\301\354Q\216\301\354Q\020\301\n\327\017\301=\n\255\301\366(\222\301ff\210\3013\023\021D\037\2057\301\366(@\301\217\3025\301\\\217\242\301{\024\352\301\205\353\243\301\024\256\243\301ff\004\302\205\353\355\301q-\020D\217\302e\300\303\365p\301\232\231y\30133o\301\256G\277\301ff\003\302\327\243\300\301ff\300\301\217\302\022\302\\\177\016D=\n\327\300\303\365$\301q=\256\301\\\217\262\301)\\\255\301=\n\365\301\256G\036\302ff\366\301\366(\366\301\327c\016D\366(\334\276\315\314\344\300\n\327+\301\024\256\261\301\000\000\266\301\315\314\260\301\341z\370\301\000\000 \302\n\327\371\301fF\013D)\\G\301q=N\301H\341\234\301\232\231\271\301\024\256\n\302\n\327\014\302q=\n\302{\024.\302\n\327Q\302\nW\014D\354Q\210@33\003\301{\024\n\301\232\231u\301\037\205\227\301\256G\363\301\232\231\367\301ff\362\301=\n\035\302\327C\014D\232\231\231\276\244p}@\000\000\010\301H\341\016\301ffz\301\205\353\231\301\024\256\365\301\000\000\372\301\315\314\364\301\000 \020D=\nwAq=rA33\233A{\024\336@\354Q\320@=\nW\27633s\300\354Qt\301\303\365|\301{T\020D\205\353Q?{\024\202A)\\\177A\217\302\241A\354Q\370@\\\217\352@\366(\034?R\270>\30033g\301=\212\021DH\341\232@\270\036\265@\315\314\250Aff\246A\341z\310A\232\231IAR\270BAff\256@{\024\356?\366\270\022D)\\\227@\270\036\031Aq=&A\327\243\316Aq=\314A\354Q\356A\327\243\212A33\207AH\341\"A\\\357\020D\315\314\344\300H\341\032\300H\341\032@)\\O@\244p\225A=\n\223A\270\036\265AH\341\"A\000\000\034A\n\327\017D\366(\214\300\341z8\301\232\231\331\300H\341\372\277\205\353\221\277\315\314dA\000\000`A{\024\222A\232\231\271@\270n\021D\n\327\313@R\270\376?\270\036\245\300\366(\334\276\270\036\215@)\\\247@)\\\245A\303\365\242A=\n\305A\303u\021D\256G\341=)\\\317@ff\006@\232\231\241\300\n\327\243\276\327\243\220@H\341\252@q=\246A\n\327\243A\244\260\022D\244p\235@\303\365\240@ff6A\327\243\340@\270\036\005\27633\223@=\n\027A\366($A\232\231\315A3\363\023D\256G\241@)\\\037A\270\036!A\037\205\203A\303\365@A\270\036\235@q=\032A\024\256gA\315\314tA\205\353\022D\n\327\203\300\037\205k?H\341\272@ff\276@\270\036EA{\024\376@q=J?\327\243\260@\217\302%A\303E\016DR\270\224\301\024\256\265\301)\\\215\301\000\000L\301q=J\301\327\243\310\300ff*\301ff\216\301\270\036Q\301\205\213\017DH\341\242@\000\000X\301\303\365\214\301\256GI\301\270\036\365\300\232\231\361\300=\n\227\277\205\353\261\300)\\K\301\000\000\021Dq=\272@\\\217.A\217\302\365\300\315\314<\301\354Q\330\300\037\205\353\277\244p\335\277\341z\224@\270\036\205>=\212\020D\037\205\353\277R\270~@\270\036\021A\354Q\030\301q=Z\301\232\231\t\301\037\205k\300\341zd\300333@\256W\020Dq=J\277\354Q(\300\366(L@\341z\004A\303\365$\301H\341f\301q=\026\301=\n\217\300\037\205\213\300\n\247\016D\354Q\330\300\232\231\361\300q=\026\301\341zd\300\\\217\302?\\\217\210\301\037\205\251\30133\201\301\024\2563\301\354\021\020D\244p\265@\037\205\213\277\327\243\360\277{\024n\300ff\006@{\024\346@ff6\301\354Qx\301\024\256\'\301\244\240\020DR\270\016@\315\314\374@\205\353\221?33\263>R\270\276\277\\\217\212@R\270\026AR\270\022\301\327\243T\301\315\254\004Dq=?\302\354Q6\302\327\243\037\302\024\256:\302\n\327=\30233E\302\205\353-\302\\\217\031\302\205\353c\302\303\265\003D=\nw\300\024\256N\302\217\302E\302{\024/\302\270\036J\302\256GM\302\327\243T\302)\\=\302\000\000)\302\354a\002D\205\353\251\300R\270\022\301\205\353c\302\000\000[\302\354QD\302)\\_\302\037\205b\302H\341i\302\232\231R\302\270n\003Dff\206@{\024\216\277=\n\237\300\270\036S\30233J\302\037\2053\302\\\217N\302R\270Q\302{\024Y\302fF\003D\256G!\277\341zd@R\270\336\27733\263\300\327\243U\302R\270L\302=\n6\302{\024Q\302q=T\3023C\003D\315\314L\275{\024.\277\256Ga@\270\036\345\277\315\314\264\300\n\327U\302\205\353L\302q=6\302\256GQ\302{4\005D\327\243\370@=\n\367@H\341\342@\327\2434A)\\\277@\024\256\007@\217\3026\302\n\327-\302\366(\027\302\244p\006D{\024\236@)\\KA\\\217JA\341z@A\n\327\201AR\270.A\205\353\341@\000\000#\302{\024\032\302\024~\006D=\nW>\315\314\244@R\270NA\205\353MA\n\327CA\037\205\203A{\0242A\327\243\350@\366(\"\302f\006\010D\366(\304@H\341\312@\341z4Aff\230A\000\000\230A\303\365\222A\\\217\264A{\024\212AffVA\327\243\006D\256G\261\300=\n\027?\315\314L?\024\256\267@\366(XA)\\WA\256GMAq=\210A\037\205;A\366x\005D\244p\225\300)\\#\301\\\217\202\300\024\256w\300\303\365\210?\244p\rA\327\243\014A\\\217\002A\217\302EA\217\362\005D33\363?\256G1\300\303\365\004\301\037\205\013\300\366(\374\277{\024>@\n\327+A=\n+A\303\365 AH\221\005D\\\217\302\277\\\217\302>\256G\211\300\256G\035\301\315\314l\300)\\_\300\232\231\271?\037\205\023AR\270\022A3\323\005D\n\327\203?H\341\372\276\341z\264?\327\243P\300\315\314\014\301H\341*\300\244p\035\300R\270\036@\000\000$A\205k\006D\354Q\030@q=Z@\205\353\361?\\\217r@\256Ga\277\244p\315\300\341z\224\276\n\327\243\275\037\205\233@=\252\007D)\\\237@\037\205\353@q=\006A\n\327\333@\354Q\014A33\203@\354Q\270\277{\024\226@\315\314\234@\315\334\005DR\270\346\300R\270\016\300\232\231\031>=\n\227?{\024\256\276\024\256\307?=\nG\300ff\n\301\256G!\3003\303\005D\315\314\314\276\037\205\363\300\354Q(\300\000\000\200\276\024\256G?\244p=\277\341z\224?\327\243`\300\315\314\020\3013c\004D\000\000\260\300\315\314\274\300\217\302Q\301{\024\002\301\000\000\270\300=\n\227\300\024\256\307\300H\341\212\300\366(\020\301\341\232\001D{\0242\301=\n\205\301q=\210\301\205\353\301\301{\024\232\301=\n\207\301\232\231}\301\303\365\212\301\037\205w\301q\235\004D\327\243@A\303\365h?H\341\222\300\024\256\237\30033C\301=\n\347\300H\341\232\300\n\327s\300\\\217\252\300\327s\004Dff&\277q=6A\270\036\205>\024\256\247\300\341z\264\300\232\231M\301\n\327\373\300\024\256\257\300R\270\216\300\000\320\004D\354Q\270?q=J?\256GMA\232\231\331?33s\300ff\206\300\\\2176\301\217\302\315\300\232\231\201\300\354\001\003D=\n\347\300\303\365\270\300\217\302\315\300\037\205\263@\327\243\260\300\354Q0\301R\2706\301=\n\225\301ffZ\301\366\230\001D\341z\264\300\217\302M\301R\2706\301\270\036A\301\217\302\365\274\\\2172\301\256G\205\301\341z\210\301\366(\302\301\244\220\001D\270\036\005\276\327\243\270\300\n\327O\301\315\3148\30133C\301\n\327#\276\327\2434\301\354Q\206\301\037\205\211\301\341\352\001D\341z\264?\n\327\243?\037\205\213\300\256G9\301q=\"\301\327\243,\301\000\000\240?{\024\036\301{\024v\301R\210\001D\270\036\305\277\270\036\005\276\270\036\205\276\315\314\274\300\205\353Q\301H\341:\301\256GE\301\341z\224\276R\2706\301\2329\002D\256G1@\244p\235?\303\365(@\327\243 @\354QH\300\232\231%\301\\\217\016\301\303\365\030\301R\270\036@HA\004D\205\353\001Aq=.A\232\231\025A\366(,A{\024*A\024\256\237@R\270\016\300q=J\277\354Q\270\277ff\003DH\341Z\300ff\226@=\n\357@\217\302\275@H\341\352@R\270\346@\303\365\310?\315\314\264\300R\270\206\300\327\003\004D\244p\035@\217\302u\277\270\036\345@H\341\036Aq=\006A\315\314\034AR\270\032A\303\365\200@\366(L\300\037\305\002D)\\\237\300\256G!\300{\024\276\300\037\205\013@ff\236@q=Z@q=\232@{\024\226@33s\277\327C\002D\256G\001\300\000\000\340\300\256G\221\300R\270\376\300\n\327#>\037\205;@\205\353\261?333@H\341*@\354\301\001D\205\353\001\300\232\231\201\300\341z\020\301q=\322\300\n\327\037\301)\\\357\277fff?\n\327#\277\270\036E?\341\312\001D)\\\017>\205\353\361\277q=z\300q=\016\301\217\302\315\300\232\231\035\301\244p\335\277\270\036\205?\000\000\000\277\270.\001D\366(\034\30033\023\300\\\217\212\30033\313\300\256G5\301\205\353\r\301\327\243D\301\244p\205\30033\263\277\244\300\376C33\347\300\327\243\032\301ff\030\301H\3418\30133Y\301\244p\224\301\217\302\200\301\270\036\234\301\354Q6\301q]\374C\315\314\230\300\000\000@\301=\ng\301\315\314d\301\327\243\202\301\315\314\222\301\327\243\272\301\303\365\246\301\354Q\302\301\\/\376C\303\365h@\256G\221\277\217\302\005\301\315\314,\301\\\217*\301=\nK\301)\\k\301\037\205\235\301\n\327\211\301\232y\373C\244p\255\300\n\327\343\277\217\302\321\300\341z\\\301\217\302\201\301\327\243\200\301H\341\220\301=\n\241\301H\341\310\301\\/\372C\270\036%\300\000\000\000\301\037\205\213\300\366(\022\301H\341\202\301ff\226\301\256G\225\301\037\205\245\301\024\256\265\301\217\202\362C\232\231u\301\244p\217\301\315\314\272\301\024\256\235\301H\341\303\301\024\256\375\301\232\231\010\302=\n\010\302\366(\020\302=J\362C\256G\341\276\327\243|\301\303\365\222\301\354Q\276\30133\241\301ff\307\301\232\231\000\302)\\\n\302\315\314\t\302\000\200\366CR\270\006A)\\\377@\n\327\353\30033\037\301\205\353u\301\024\256;\301=\n\204\301\n\327\275\301)\\\321\301\244\200\363C\n\327\277\30033\033@{\024\376?\n\327U\301\270\036\177\301\205\353\252\301\315\314\215\301\000\000\264\301\315\314\355\301)\034\360C\270\036\331\300\341zL\301\037\205\213\300\232\231\231\30033\241\301\n\327\265\30133\341\301{\024\304\301\256G\352\301\244p\355CH\341\252\300\000\000B\301\303\365\220\30133\033\301q=\"\301\205\353\313\301\\\217\340\301\303\365\005\302\315\314\356\301ff\361C\244p\375@\270\036%@\\\217\206\30033#\301\n\327\343\277{\024\016\300\\\217\214\30133\241\301\\\217\314\3013\323\366C\232\231-A\366(\226AH\341VA\327\243\324@ff&?\270\036\021A{\024\nA=\n\327\300\315\314\024\301\366\310\370CH\341z@\354QlA\037\205\265A\315\314\212A=\n)Aq=\222@\n\327OA\315\314HA333\300\2440\375C\303\365\014A\024\256KA\327\243\274A\000\000\374A\256G\321A\000\000\233A{\024VAff\256AH\341\252A\313A\002D5^jA\374\251\273A%\006\333Ay\351\030B\215\2278Bd;#B\215\027\010BX9\340A\301\312\021B)\034\005D\215\2276A\341z\320A\341z\013B\366(\033B\\\217FBq=fBH\341PBq\2755B\217\302\035B\n\327\005DH\341:@\337OeA\n\327\347A\366(\027B\n\327&Bq=RB\205\353qB\\\217\\B\205kABf\246\010D\n\3273A\\\217bAu\223\314AH\341 B\270\036DB\315\314SB33\177B\244p\217B\217\302\204B\\\377\004D\217\302i\301\024\256W\300ff\346\276Zd/AH\341\314A\024\256\tB)\\\031B\217\302DB\244pdB\354\321\003DR\270\226\300\\\217\232\301\256G\001\301\270\036\245\300b\020\310@33\247A\024\256\355A\037\205\006B\205\3531B\244\200\005D)\\\327@\256G\001@\244pI\301\315\314\254\277\303\365\310?F\266OA=\n\335A\217\302\021B\244p!B\244\220\006D\000\000\210@\024\256/A\327\243\310@\244p\005\301\232\2319@q=\272@#\333\211A=\n\377A\217\302\"B)<\004D\270\036\025\301q=\242\300\341z\324?33C\300\256G\215\301\244p\315\300\000\000`\300\033/\375@\341z\264A\256g\025D)\\\211B\244pmB\244p~B\024\256\214B\217B\203B{\024LB=\nyB)\\\202B\033/\231B)\274\024D\037\205+\300\000\000\204BR\270bBR\270sB\354Q\207B\315\314{B)\\AB\354QnB\000\000zB3\243\026D\037\205\363@\217\302\235@R8\223B{\224\200B{\024\211B=\212\226B\270\036\215B\315\314_BHa\206Bf\326\024Dff\346\300\205\353\321>\256G\021\300\354\321\204B)\\dB)\\uB\327#\210B\244p}B\000\000CB\\\277\027Dq=:A{\024\216@\315\314@A\205\353\025A\232\031\234B\303u\211B\303\365\221B\205k\237B\000\000\226B\270\216\032D\n\3273A=\n\267AH\341zA\354Q\272AH\341\244A{\224\262B\244\360\237B\244p\250Bf\346\265B\270\276\032D\000\000@?\n\327?A=\n\275A\244p\203A\354Q\300AH\341\252A{\024\264B\244p\241B\244\360\251BH\241\033D\\\217b@\256G\211@\341zxA)\\\331A\217\302\237A\327\243\334A33\307A\366(\273B\037\205\250B\024\316\027D\315\314t\301\366(<\301\366(0\301\037\205k>\205\353=A\244p\225@\341zDA\232\231\031A\\\217\234B)\274\030D{\024n@\256G9\301\327\243\000\301\256G\351\300\315\314|@\244pyAq=\006A\000\000\200A\270\036UA)\354\026D\000\000\350\300\205\353a\300\327\243\226\301\327\243t\301\327\243h\30133S\300\244p\005A\205\353\221?\000\000\014AH\261\027D\270\036E@\244p\205\300ff\346\276\000\000|\301)\\C\301)\\7\301\256Ga\276R\2706A=\n\207@\232\031\024D\205\353e\301\327\2434\301\354Q\224\301\270\036m\301\303\365\360\301\327\243\324\301\327\243\316\301\244pi\301\315\314<\300\341J\026D\354Q\014A33\263\300\256G!\300\354Q\034\301\232\231\301\300\315\314\252\301\341z\216\301\341z\210\301q=\272\300Ha\020D33\275\301{\024n\301\000\000\352\301)\\\321\301\024\256\005\302\232\231\355\301\000\0004\302\n\327%\302\n\327\"\302\217\302\020D\\\217\302?=\n\261\301\217\302U\301\n\327\335\30133\305\30133\377\301\244p\341\301\205\353-\302\217\302\037\302H\201\010D{\024\004\302\000\000\374\301\232\231\\\302\037\2059\302\000\000s\302\024\256f\302\n\327\201\302\315\314t\302\000\000\231\302=Z\017D\270\036\333A\366(\264\300\037\205\203\300{\024\336\301\205\353\227\301\244p\005\302q=\362\301\270\036\026\302q=\007\302\244@\tD33\303\301)\\?@q=\360\301{\024\344\301\327\243P\302\\\217-\302=\ng\302R\270Z\302R\270w\302R\210\014D\205\353QA\341z4\301H\341\200A\256G\207\301q=v\301\366(\034\302\366(\362\301\\\2172\302q=&\302H\361\014D\205\353\321?\366(lAq=\032\301\000\000\216A\354Qt\301\000\000\\\301\232\231\025\302=\n\345\301\000\000,\302\270N\013D\256G\321\300\315\314\234\300\037\205\003A\244p\201\301)\\3A\341z\256\301\354Q\242\301\217\302/\302\024\256\014\302\000\300\006D\n\327\221\301\366(\306\301=\n\271\301\366( \301\327\243\t\302\327\243\340\300\366( \302{\024\032\302\024\256x\302\232I\005D33\273\300\327\243\300\301\303\365\364\301\n\327\347\301\217\302}\301=\n!\302\205\353M\301\\\2177\302\341z1\302\244p\374C\366(\342\301\341z\010\302ffQ\302\\\217k\302\000\000e\302\037\2050\302\\\017\211\302\\\217$\302\354Q\224\302\303u\365C)\\_\301\205\353(\302\354Q@\302\270\236\204\3023\263\221\302\205k\216\302)\\h\302\341\372\244\302ff\\\302\303\025\371C\000\000\350@R\270\326\300\205\353\013\302\354Q#\302q=l\30233\203\302\n\327\177\302)\\K\302\341z\226\302{\264\001D33\245A33\337A=\n_A\256Ge\301\244p\241\301\327\243\031\302\315\3143\302q=-\302\037\205\361\301\217\322\002D=\n\217@\303\365\310A\341z\001B\256G\223A\217\302\035\301)\\{\301\217\302\007\302\205\353!\302)\\\033\302\217\002\002D\000\000P\300\366(\234?\303\365\256A\303\365\350A\\\217rA\217\302Q\301\024\256\227\301\217\302\024\302\205\353.\302\n\267\003Dq=\332@\341zd@\327\243\000A\037\205\345A\217\302\017B\n\327\257A\256G\311\300q=B\301\303\365\362\301\037\305\006D\037\205CA\354Q\230A\327\243|A{\024\242A\327\243#B\327\243@B\315\314\010B\217\302\275@\n\327\243=\315,\007D)\\\317?\244p]A\256G\245A\256G\213A=\n\257A\270\036*B\270\036GB\256G\017B\232\231\361@q=\007D\270\036\205>\327\243\360?\232\231aA)\\\247A)\\\215A\270\036\261A\366(+B\366(HB\354Q\020B\000 \005D)\\\007\30133\003\301\\\217\322\300\341z\264@)\\GA)\\\023AH\341ZA\354Q\tB\354Q&B\3035\003D\270\036\365\300\303\365\200\301\217\302}\301\n\327c\301\256G\001\300\232\231\231@ff\306?\327\243\300@)\\\325A\205\213\002Dq=*\300\270\036%\301q=\226\301\366(\224\30133\207\301\217\302\225\300\303\365\010@{\024\216\277=\nW@\354\201\005D\232\231=A=\n\023A\n\327\303?\217\302\335\300\244p\325\300\232\231\241\300\244p\345@\n\327_A\n\327+Aq\275\005D{\024n?\341zLA\205\353!A\244p\035@\000\000\300\300\024\256\267\300\n\327\203\300\232\231\001AR\270nAf6\003D\217\302!\301H\341\022\301H\341*@\n\327#<\315\314\364\300H\341\200\301\232\231}\301\024\256c\301\327\243\000\300\256\207\004D\327\243\250@H\341\232\300q=z\300{\024\376@\303\365\250@\354Q\030\300\244p-\301\256G)\301)\\\017\301Ha\004D\232\231\031\277\244p\225@{\024\256\300\354Q\220\300H\341\352@\217\302\225@R\270>\300=\n7\301H\3412\301{\004\005D33#@\232\231\371?=\n\347@\303\3658\300H\341\372\277q=\036A)\\\347@\366(\334\276q=\016\301\327\243\007D\n\327\'A\327\243PA=\nGA\024\256\215A33\363@\341z\010A=\n\243A\217\302\215A\303\365 A\205\253\010D\n\327\203@\217\302iA\256G\211A\341z\204A\327\243\256A\037\205;AffJA\000\000\304AR\270\256A\341\252\010D\n\327#\274\037\205\203@\232\231iA33\211Aff\204A\\\217\256A)\\;Aq=JA\205\353\303A\000\250\010D\354Q8\275\256Ga\275{\024\202@H\341hA\n\327\210A=\n\204A33\256A\327\243:A\037\205IA\315\314\006D\232\231\355\300=\n\357\300)\\\357\300=\nW\300\366(\344@H\341\032A\256G\021A\232\231eA\024\256\207@=*\002D\354Q\224\301R\270\317\301{\024\320\301\366(\320\30133\257\301\\\2176\301\217\302\r\301)\\\027\301{\024\206\300\244`\003D33\233@=\n[\301\205\353\250\301\256G\251\301)\\\251\301ff\210\301\205\353\321\300\354Q\200\300\037\205\223\300\366\370\004D\366(\314@\024\2563A\205\353\351\300\217\302k\301\341zl\301\327\243l\301R\270*\301\354Q8\276\024\256\027@\303\325\006Dff\356@\256G]A\244p\225A)\\\017>\270\036\351\300\\\217\352\300H\341\352\300{\024N\300\327\243\350@\3035\004D\000\000(\30133C\300\270\036U@H\341\002A\217\302%\301\256G\216\301\327\243\216\301R\270\216\301\037\205[\301\000\340\003D\037\205\253\277\244p=\301\341z\214\300R\270\376?H\341\332@33;\301\000\000\231\301)\\\231\301\244p\231\301\217\302\000D)\\G\301\315\314\\\301ff\302\301\315\314\206\301\037\205\'\301\n\327\263\300\256G\301\301\024\256\374\301=\n\375\301\217\302\367C\366(\234\301\n\327\377\301\256G\005\302\256G/\302\341z\021\302\205\353\357\301\270\036\311\301R\270.\302\205kL\3023\363\372C\366(\314@q=R\301\315\314\314\301\037\205\327\301\217\302\025\302\205\353\357\301H\341\274\301{\024\226\30133\025\302\232Y\374C333@H\341\022A\244p%\301ff\266\301\270\036\301\301\\\217\n\302\037\205\331\301\341z\246\301)\\\177\301q\255\000D\366( A\303\365LA\037\205\231A\303\365\250\276\327\243L\301{\024b\301=\n\305\301\244p\211\301\315\314,\301\256\307\000D\205\353\321>R\270&A\037\205SA\315\314\234A\n\327\243={\024F\301\037\205[\301\217\302\301\301\366(\206\301\341J\006Dff\260A\024\256\263AH\341\001B{\024\rB\232\231&B=\n\261AR\270\032A\256G\005AH\341\n\300\205\313\007D\354Q\300@\341z\340A\217\302\343A\205\353\031B\270\036%B\327\243>B\270\036\341AH\341zA\244peA\000 \tDq=\252@\256G5A\037\205\005B\366(\007B33/Bff:B\205\353SB\n\327\005B\000\000\250A\\\277\013D\n\327\'A\303\365|A\\\217\256A\341z/B\270\0361B\366(YB)\\dBH\341}B\315\314/B\205\353\023D\217\302\002BR\270,B\000\000BB=\nZB\270\036\231B\244\360\231B\303\365\255B\\\217\263B\354Q\300B=\232\021D\354Q\024\301)\\\273A\327\243\007B\205\353\034B\303\3654B{\224\206Bff\207B\205k\233B\037\005\241B\244\240\023D\232\231\001A\217\302\225\277\366(\374A=\n(B\354Q=B)\\UB\256\307\226B\232\231\227B\270\236\253B\315,\021D\303\365\034\301H\341\332\277\024\256/\301\024\256\255A\315\314\000B{\024\026B\270\036.B\366(\203B\341\372\203B\341\352\021D{\024>@H\341\332\300\256G\241?\366(\000\301\244p\305A\024\256\014B\303\365!B\000\000:B\232\031\211B\\\237\023Dq=\332@\327\243\034A\n\327\243\274\256G\001A\354Q\230\277\000\000\374A\303\365\'Bq==B\256GUB\341\032\025D\217\302\275@\000\000LA\037\205{A\270\036\275@\366(`A\024\256\227@R\270\025B\024\256?B\303\365TB=\312\021D\366(T\301\\\217\352\300\\\217\002\277\244p\035@33\353\300\000\000@?\354Q\010\301)\\\301A\327\243\nB\327\223\022D\232\231I@\217\302!\301\217\302\205\300\303\365(@\037\205\263@ff\206\300\232\231y@\n\327\253\300\\\217\332A\341\252\025D\217\302EA\366(xA\000\000\020@H\341\002A\000\000pA\217\302\217A\\\217\002A{\024\202A\024\256\337@\366\010\026D\366(\274?\256G]A\n\327\207A{\024n@ff\032A\217\302\203A\037\205\233A{\024\032A\n\327\215A\366(\024D\000\000\360\300\303\365\300\300\\\217\312@\024\256\027A\205\353q\300\232\231\t@\037\205\017A=\n?A\354Q\010@\232\251\020D\n\327_\301\205\353\253\301\366(\240\301\270\036\365\300\354Q\220\300\366(\216\301\244p=\301\327\243\240\30033\003\300{4\022D\244p\305@q=\372\300\270\036u\301\232\231]\301R\270\276\277\341z\324?\232\2319\301\244p\265\30033\223?\000`\025DH\341JA\315\314\226A\037\205\233@\303\365(\300\217\302\225\277=\n3A\244peAq=\212?\354Q\340@\366\010\025D{\024\256\277\270\0365A\205\353\213A\000\000`@\000\000\200\300\205\353!\300\256G\035A\024\256OA)\\\217\276\037\025\030D=\nCA\256G-A{\024\274A\244p\355A=\n{A=\n\003A\\\217\032A\366(\260A)\\\311A\303\025\031D\354Q\200@\232\231\201A\244pmA\366(\334A\217\302\006B\232\231\235A33CAR\270ZAq=\320A\315<\026Dq=6\301\366(\354\300\205\353\231@\315\314\\@=\n\201Aff\262A\303\365\004A)\\O?\205\353\021@\037\305\024D\n\327\273\300{\024\212\301\000\000T\301\024\256\207\277H\341\032\300\366($A\244p\203A\366(\034@\205\353\241\300f\026\030D\354QTA\315\314\354@)\\\177\300\n\327\243<)\\CA\232\231-Aq=\274A\232\231\355A)\\{A\000@\031D\315\314\224@)\\\217A\315\314@A\303\365(?\244p\225@H\341\206A\000\000xA\244p\341Aff\tB\327#\032D\n\327c@)\\\003A\n\327\253A\217\302yA=\n\207@\024\256\003A)\\\243A\341z\230A\205\353\375A\024\336\030DH\341\242\300\n\327\303\277\024\256G@\270\036\203A\354Q(AR\270^\277\303\365H@\256GuA\037\205_A\2567\026D\232\231)\301=\n{\301{\024B\301)\\\357\300\256G\271@\n\327\243\275\037\2057\301R\270\356\300)\\\227@R\270\024D\024\256\277\300R\270\204\301\244p\255\301\303\365\220\301\037\205W\301\315\314L\276q=\302\300\024\256\213\30133W\301)<\021D=\n_\301\244p\237\301q=\364\301\341z\016\302q=\000\302\256G\333\301q=b\301{\024\240\30133\373\301\000\000\021D\327\243p\277{\024n\301\303\365\246\301\217\302\373\301q=\022\302\000\000\004\302\315\314\342\301\256Gq\301\232\231\247\301\n\207\016Dq=\036\301\256G-\301\366(\306\301{\024\366\301\244p%\302\315\3149\302\\\217+\302\303\365\030\302\217\302\307\301\000\300\014D\037\205\343\300\000\000\210\301\037\205\217\301=\n\377\301\341z\027\302H\341A\302q=V\302\000\000H\302ff5\302)\014\023D\037\205\311A\327\243\220A=\n\003A\000\000\350@{\024\326\300H\341J\301q=\272\301\303\365\342\301\341z\306\301\205\273\021D\354Q\250\300\244p\237A\270\036MA\037\205;@R\270\376?33?\301\037\205\217\301\354Q\344\301\037\205\006\302\366\330\025D\024\256\203A333A\\\217\021Bq=\352A\270\036\233A\232\231\223A\354Q\220@\244p\275\277\256GA\301Hq\031D{\024fAR\270\366A\327\243\314A{\024KB\327\243.B{\024\007B\354Q\003B\270\036\227AffNA\n\027\033DH\341\322@\217\302\247AR\270\025B\024\256\000B\244peB\000\000IB\244p!B\024\256\035B\n\327\313A\232i\034D\256G\251@{\024>A{\024\322AH\341*B\n\327\025B\232\231zB\366(^B\232\2316B\n\3272BH\361\033D\327\243\360\277q=Z@\000\000 A=\n\303A)\\#B\354Q\016B{\024sB\327\243VB{\024/B\366\330\033D\\\217\302\276\327\243\020\300\205\353A@\205\353\031A\000\000\300A\n\327!B\315\314\014B\\\217qB\270\036UB3\003\032DH\341\352\300=\n\367\300\232\231\031\301\205\353\211\300\205\353\021@\256G\205A\341z\004BH\341\336A33TB\341\332\034D\205\3535A\303\365\200@\232\231i@\\\217\342?\205\353\341@ffZAq=\340A\303\3651B\205\353\034B\366X\034D\205\353\001\300\244p\025A\000\000\000@)\\\317?\270\036\205\276\303\365\240@\205\3539A\000\000\320A\n\327)BRh\034D\217\302u>\270\036\345\277\256G\031A)\\\017@{\024\356?\n\327\243\274\327\243\250@\217\302=A\205\353\321A{\204\032D\205\353\361\300q=\352\300\232\231\025\301\256G\001@q=\252\300ff\266\300\\\217\362\300\\\217\022\300\232\231\211@\217\342\032D\366(\274?H\341\302\30033\273\300\366(\374\300)\\_@ffv\300)\\\207\300\037\205\303\300\205\353Q\277q}\034D\244p\315@\341z\374@\303\365\250>\205\353\021?H\341\272\277\\\217\036A\341z$@\366(\014@R\270\236>\037u\033D\366(\204\300\\\217\022@\327\243p@33s\300\n\327c\300H\341\262\300\303\365\270@\024\256\307\277\354Q\370\277\256\227\035D\327\243\010A\270\036\215@\256G-A\315\314DA\024\256\227@)\\\237@\315\314<@\270\036eA)\\\337@{t\034D\232\231\221\300)\\\177@)\\\017\276\303\365\310@\000\000\370@\\\217B>\366(\334>\315\314\314\277\354Q\034A\315l\035D\354Qx@\037\205+\277\n\327\373@)\\o@\\\217\"A{\024:Aq=\202@\205\353\211@\205\353\021@\366H\036D\366(\\@q=\352@\256G1@\303\3654A\217\302\345@\232\231YA\270\036qA\354Q\360@\000\000\370@\000\020 D\037\205\343@\315\314(AH\341fA{\024\036A)\\\223A\327\243dA\024\256\245A\244p\261A\205\353iA\315\354\037D\315\314\014\277\205\353\321@\000\000 A{\024^A\256G\025A\303\365\216A\n\327[A\256G\241A=\n\255A\232\231 D\315\314,@\232\231\t@\366(\024A33KA\327\243\204A\341z@A\\\217\244A\037\205\203AH\341\266A\232y!D\000\000`@ff\306@\315\314\264@\366(LA\232\231\201A\327\243\240A\341zxA\\\217\300A\037\205\237A=Z&D{\024\234A{\024\270A\024\256\315A\256G\311A{\024\001B\n\327\016B)\\\036B\366(\014B\354Q.B\354\021\'D\024\2567@=\n\263A=\n\317A\327\243\344Aq=\340A\\\217\014B\354Q\032B\n\327)B\327\243\027B\244\300$D\354Q\024\301\315\314\314\300\217\302QAH\341\204A\341z\232A{\024\226A\303\365\316A\341z\352A\217\302\004BH\201\"D\n\327\017\301{\024\222\301q=v\301\n\327\203@\n\327\363@\270\036%A\354Q\034A=\n\207A\\\217\242Aq\235\033D\341z\334\30133\022\302\256G7\302\315\314+\302\037\205\273\301\037\205\237\301\205\353\211\301\354Q\216\301H\341*\301\366\310\033D{\024.?=\n\327\301\341z\017\302\\\2174\302{\024)\302{\024\266\301{\024\232\301\341z\204\301H\341\210\301q}\034D\341z4@\000\000`@\341z\300\30133\004\302\256G)\302\315\314\035\302\037\205\237\301\037\205\203\301\n\327[\301\366h\035D\037\205k@\000\000\320@\217\302\345@=\n\243\301\303\365\352\301\\\217\032\302{\024\017\302{\024\202\301\366(L\301\\?\034D\315\314\224\300\354Qx\277\315\314\354?\205\353!@q=\310\301{\024\010\302\366(-\302\024\256!\302\256G\247\301\037%\035D\217\302e@\024\256\207\277\024\256\'@{\024\256@\n\327\303@\037\205\253\301\244p\363\301\315\314\036\302\354Q\023\302=:\036D\\\217\212@\244p\375@\256GQ@ff\336@\354Q\034A33\'AH\341\210\301\315\314\320\301\341z\r\302{\344\037D\270\036\325@\n\327/A\256GiAH\341\036A\217\302YA\244p\203AH\341\210A33\'\301\037\205\233\301\\\177\022D\354QV\302\024\256;\302)\\*\302\000\000\034\302\232\231.\302H\341\037\302\232\231\024\302H\341\021\302\\\017\200\302Ha\022D\327\243\360\27633X\302\\\217=\302q=,\302H\341\035\302\341z0\302\217\302!\302\341z\026\302\217\302\023\302\205;\021DH\341\222\300\205\353\241\300\\\217j\302\205\353O\302\232\231>\302q=0\302\n\327B\302\270\0364\302\n\327(\302\\_\016D=\n7\301q=\200\301\000\000\204\301\366(\214\302\024\256}\302)\\l\302\000\000^\302\232\231p\302H\341a\302f\006\016D\205\353\261\277\256GM\301)\\\213\301\270\036\217\301\244\360\216\302\270\236\201\302\205\353q\302\\\217c\302\366(v\302\270\376\020D{\024>A\n\327\'A33s\277\256G\261\300\354Q\300\300)\\n\302R\270S\302ffB\302=\n4\302)l\020D\\\217\022\300\244p\031A33\003A)\\O\300\\\217\372\300\315\314\004\301\037\205w\302H\341\\\302\\\217K\302\n\007\021DH\341\032@\270\036\005>\366(@A\205\353)A\205\353Q\277\270\036\255\300\366(\274\300\n\327m\30233S\302\0375\021D\354Q8?\303\365H@\232\231Y?\024\256KA\244p5A\315\314\314\275{\024\226\300\270\036\245\300\303\365j\302\nG\022D\303\365\210@\000\000\240@\244p\355@\366(\244@{\024\210A\205\353yA\217\302\205@\205\353\321\276\256Ga\277\037\025\025D\037\2053A\000\000xA\217\302\201A\270\036\225A\315\314\202A\n\327\341AR\270\326AffvA\303\365,A\303E\030D\366(LA\n\327\277A{\024\342A\n\327\347A33\373AH\341\350A\303\365#Bff\036B\256G\341AH\261\027D\341z\024\300=\n\'A\256G\255A\037\205\317A\256G\325A\327\243\350A\354Q\326A\024\256\032B\270\036\025Bfv\030D\270\036E@\\\217B?\354QXA\205\353\305A\366(\350A\205\353\355A\327\243\000B\303\365\356A\000\000\'Bq\335\030D{\024\316?{\024\226@\024\256\027@{\024rA\315\314\322A=\n\365A\315\314\372A{\024\007B\n\327\373A=z\027D\232\231\261\300\366(|\300\366(\\\277\037\205K\300\256G\031Aff\246A\327\243\310Aff\316A\217\302\341A\315\014\031D\256G\311@\244p=?ff\026@\217\302\255@=\nG@\205\353}AR\270\330A\303\365\372A)\\\000B\244p\030D\366(\034\300ffv@\232\231\331\277\354Q\270\275)\\?@\037\205+?H\341VA33\305A\244p\347A\327c\027Dff\206\300\341z\324\30033\263\276\315\314\274\300\256G\211\300H\341\232\277\205\353a\300\024\256\023A\232\231\243AH\241\027D\217\302u?)\\O\300\217\302\265\300\366(\034?{\024\236\300\270\036U\300\000\000\200\276\341z$\300=\n#A\366(\027D\327\243\360\277\037\205k\277\n\327\243\300\205\353\361\300\\\217\242\277q=\332\300R\270\246\300\354Q\010\300ff\216\300\000\200\031D\217\302\025A)\\\357@=\n\007A\024\256\207@ff\346?\244p\001A\\\217\"@\315\314\204@)\\\347@)\374\027D\205\353\301\30033S@\217\302\265?\354Q\030@\303\365\350\277\354Q\210\300\205\353\001@\256Ga\300\341z\364\277\n\207\027Dq=\352\277\341z\374\300\366(\274?\205\353\321\276\315\314\014?\232\231i\300H\341\302\300\315\314L>33\253\300\232y\030D\\\217r@H\341\372?33\203\300\354Q\250@\354QX@H\341\212@)\\\017>33\023\300)\\\177@\327S\030D=\n\027\277\315\314L@)\\\257?{\024\226\300\244p\225@\\\2172@\000\000p@ff\346\276\303\3658\300\366\230\032D\256G\021A\n\327\007A\341zDA33\'A\341z\214@\000\000\\A\205\353=A\256GMA{\024\nA\000\220\032D)\\\017\276=\n\017A\232\231\005Aq=BA\303\365$A\000\000\210@\217\302YA\024\256;A=\nKA\232\231\033D\315\314\204@\354Q\200@\244pQA\000\000HA\354Q\202A)\\gAff\006A{\024\216A{\024~A\000P\033D33\223\277\000\000@@=\n7@=\n?A\232\2315Aq=rA\303\365TA\000\000\350@H\341\204A\000\220\031D\000\000\340\300ff\002\301\000\000\200\300\341z\204\300{\024\236@33\213@q=\002A\205\353\311@\000\000\200>q=\027D\327\243\024\301\354Q\202\301\037\205\213\301\327\243T\301H\341V\30133\213\300{\024\236\30033\223\277R\270>\3003\263\027D\037\205\353?ff\356\30033g\301\232\231y\301337\301\244p9\301\327\243 \300ffF\300\327\2430?\366\310\027D{\024\256>\037\205\013@\037\205\343\300\217\302a\301\366(t\301\217\3021\301\000\0004\301H\341\n\300\327\2430\300\000\020\026D\341z\334\300\232\231\321\300R\270\226\300\000\000`\301\000\000\250\30133\261\301\000\000\220\301\270\036\221\301\303\365\020\301\232I\027D\315\314\234@R\270\376\27733\323\277\\\217B>\232\231\021\301\315\314\200\301\000\000\212\301\232\231Q\301\n\327S\301\354q\032D{\024JAq=\214Aq=*A\024\256/A\270\036MA\205\353a@{\024^\300\n\327\223\300\327\243\360\276\\\377\031D\270\036\345\277\244p-A\n\327{A\232\231\rA=\n\023A\341z0AR\270\336?\354Q\250\300\270\036\315\300RH\033D\341z\244@ffV@\024\256\177A=\n\247A\n\327_A\256GeA)\\\201A\366(\334@\217\302\365\275\217B\034Dq=z@\315\314\020A\354Q\350@\270\036\237A\354Q\306A33\217A\205\353\221A\327\243\240A\327\243,A\270~\036D=\n\017A\232\231MA\205\353\217A\232\231\201A\327\243\346A\205\353\006BR\270\326A\244p\331A\366(\350A\\_\036DH\341\372\27633\007A\217\302EA\000\000\214A)\\{AR\270\342A\303\365\004B\315\314\322A\037\205\325A\270\376\037D\024\256\317@\000\000\300@=\noA\315\314\226A\205\353\277A\232\231\261A\354Q\013B\205\353\036B)\\\003B3\203!Dq=\302@\303\365HA\270\036AA{\024\250A)\\\307A\341z\360A\366(\342A\232\231#B337B\303\245 D\244p]\300=\n\'@\232\231\021A\217\302\tAff\214A\024\256\253A\315\314\324A\341z\306A\217\302\025B\037U\"D\024\256\327@\205\353Q@\232\231\025A\244p}A\232\231uA\354Q\302A\232\231\341A)\\\005Bff\374AH\301!D\n\327\023\300\217\302\215@\354Qx?\256G\341@\341zXA\327\243PA\n\327\257A\270\036\317Aq=\370A\244\360#D\n\327\013A\217\302\315@R\270RA)\\\033A\341z|A\366(\262Aq=\256A\217\302\365A\037\205\nB=\032\"D33\353\300\205\353\261?\037\205k\277q=\272@=\n\027@H\341\006AR\270nAH\341fA\303\365\272A\\O D\244p\345\300\354Qh\301\303\365\270\300\244p\001\301\315\314\254\277\205\353\231\300\256G\241?\000\000\370@\354Q\350@\341\272!D\217\302\265@R\270\276\277\244p\r\301\315\314\314\275q=\032\300\\\217\212@R\270^?{\024\336@H\341VA\256\247 D\232\231\211\300\327\243\260?\256G\271\300q=R\301\315\314\214\300R\270\326\300\217\302\365<\037\205[\300\303\365(@\232\311\036D=\n\357\300\354Q<\301H\341\302\300\366(T\301H\341\244\301\205\353=\301H\341b\301{\024\356\300ff.\301{\024\036D\270\0365\300\315\314$\301\232\231i\301R\270\016\301R\270\200\301\037\205\273\30133k\301{\024\210\301\354Q$\301\303\265\035D\244p\275\277\205\353\211\300\341z<\301\327\243\200\301ff&\301\\\217\214\301)\\\307\301\244p\201\301\205\353\223\301\n\267\034DR\270~\300R\270\256\300\327\243\004\301\366(|\301\341z\240\301{\024f\301ff\254\30133\347\301\256G\241\301q\375\036D\232\231\021A\n\327\243@\303\365h@)\\O?\270\036\325\300)\\/\301\303\365\250\30033G\301ff\236\301\244\300\"D\315\314pA33\301A)\\\241A\037\205\225A\217\302}Aq=\006AH\341\202@\354Q\034Aff&@f&\034D\256G\323\301\217\3025\301\327\243\020\300\024\256\307\300=\n\367\300\315\314(\301\366(\220\301\\\217\262\301\270\036\205\301{\204\027Dq=\224\301\217\3023\302\270\036\357\301\354Q\246\301\366(\306\301\000\000\322\301\327\243\350\30133\022\302ff#\302{d\030D\000\000`@\341zp\301\217\302%\302\270\036\323\301\354Q\212\301\366(\252\301\000\000\266\301\327\243\314\30133\004\302\315\334\027D\024\256\007\300\327\243\260?33\211\301q=.\302{\024\344\301\256G\233\301\270\036\273\301\303\365\306\301\232\231\335\3013\323\025Dff\002\301\354Q$\301\327\243\330\300ff\312\301\n\327N\302\327\243\022\302\341z\334\301\354Q\374\301{\024\004\302\327\003\025D)\\O\300q=6\301\366(X\301\366( \301\354Q\344\301\315\314[\302\232\231\037\302ff\366\301\270\036\013\302ff\025D\270\036\305?\232\231\331\277\232\231\035\301\037\205?\301\037\205\007\301\000\000\330\301\327\243U\302\244p\031\302{\024\352\301HQ\026DH\341j@R\270\246@\366(\374?\217\302\305\300\315\314\004\301\232\231\231\300\327\243\272\301\303\365F\302\217\302\n\302\024n\030D33\007A\205\353AA\\\217ZAR\270&A\256G\021@\232\231\031>\232\231i@{\024n\301\366(%\302\024\336\031D\000\000\270@33cA\303\365\216A\256G\233A)\\\201A\354Q\000A\315\314\274@ff\026A{\024\022\301\270\276\031DH\341\372\276\354Q\250@)\\[A=\n\213A)\\\227AH\341zA\303\365\360@\270\036\255@\\\217\016Af6\027D{\024\"\301\205\353)\301\n\327\233\300\270\036e@\000\000\350@\327\243\014A\232\231\261@ff&\300=\n\227\300\205\033\027D=\n\327\276\315\314(\301\327\2430\301\256G\251\300q=J@\\\217\332@\205\353\005A\366(\244@\256GA\300\244\320\027D\270\0365@q=\032@=\n\367\300)\\\003\301\244p\035\300\024\256\277@\\\217\032A333AR\270\376@H\301\030D\327\243p@H\341\322@\244p\305@\244p}\300ff\216\300ff\246?\000\000\034AR\270VA)\\oA\024>\025D\315\314`\301\327\243$\301R\270\356\300\366(\374\300{\024\220\301\000\000\224\301\000\000L\301\232\231\211\300\256G!\2773\343\027D\256G)A{\024^\300\341z\224>\024\256G@\315\314,@\217\302\355\300\244p\375\300H\341\n\300\303\365\310@\2172\031D\024\256\247@\270\036}A\\\217\342?\303\365\260@\217\302\005A{\024\376@\366(\014\300\037\205+\300\341zD@\232I\030D\303\365h\300\315\314\314?H\341BA)\\\357\277\205\353\361?=\n\227@\232\231\211@\\\217\272\300q=\312\300=j\031D\354Q\220@R\270^?\037\205\303@\037\205\205A\303\365(@\315\314\314@\024\256\023A\303\365\014A\303\365\250\277\270N\027DH\341\006\301H\341z\300\205\353\361\300\341z\024\300\366(\004A\256G\271\300\205\353\001\300\315\314L?\\\217\302>\000\000\027D\244p\235\277\\\217\032\301\315\314\244\300\327\243\014\30133c\300\303\365\340@\327\243\340\300\327\243P\300\366(\334\276\n\307\030D\037\205\343@\366(\274@33#\300H\341\372?=\n\327\277\n\327c@q=bA\354Q\270=ffv@\205;\035D\\\217\216A\244p\307A\232\231\275A\354QtAq=\236A\270\036\201A=\n\253A\024\256\377A\256G\217A3\303\033D\366(\274\300=\n?Aff\230A\\\217\216Aq=\026Aff^A\366($A\000\000xA\327\243\320A\232\031\026D33\265\301q=\344\301)\\+\301fff\300\\\217\232\300\366(T\301\000\000\014\301q=F\301\315\314\344\300\n\207\031D)\\[A=\n\017\301\270\036m\301\000\000@@\217\302!A{\024\016Aff\346>R\270\236@\303\365\250?33\026D\303\365T\301\315\314\314>\000\000\262\301=\n\341\301\303\365$\301\315\314L\300\217\302\215\300\217\302M\301\232\231\005\301q]\030D\\\217\nA\315\314\224\300\303\365\020A\244pY\301\217\302\233\30133\323\277R\270\256@)\\\207@ff\206\300=\352\026D\232\231\271\300=\n7@33\'\301\327\243P@\270\036\233\301\366(\312\301ff\356\300{\024\256\276\303\365\310\277\354\341\023D{\024B\301\244p\217\301\354Q\024\301\327\243\264\301\205\353\r\301\366(\374\301\232\231\025\302\327\243\234\301\037\205G\301\303\225\024D\n\3273@\270\036\025\301\205\353q\301R\270\316\300\366(\236\301\205\353\301\300\024\256\345\301)\\\n\302\366(\206\301\270\016\023D\037\205\303\30033S\300H\341v\301\n\327\251\301\270\036I\301=\n\317\301R\270B\301\256G\013\302\315\314\"\302\n7\021D\n\327\353\300\024\256W\301R\270*\301ff\266\301\315\314\344\301\037\205\237\301\000\000\005\302\354Q\234\301\217\302(\302\270\276\016D{\024\036\301\000\000\212\301H\341\272\301ff\244\301R\270\002\302\205\353\031\302\\\217\356\301\037\205,\302)\\\353\301\303\245\020D\037\205\363@\256G\021\300q=\032\301\000\000|\301=\nO\301\\\217\310\301\303\365\366\301\024\256\261\301{\024\016\302=\232\016DH\341\002\301\205\353\021\27733\'\301\\\217\216\301\244p\277\301\303\365\250\301\000\000\005\30233\034\302\270\036\363\301{$\021D\\\217\"A\244p\375?\244p\031A\341z\224\276\270\036\365\300\354Q\\\301)\\/\301R\270\270\301\270\036\347\301\270\216\020D\217\302\025\300q=\372@\354Q\270\276\000\000\350@\354Q(\300\000\000 \301H\341\200\301\315\314T\301\244p\313\301\315\034\021D{\024\016@\217\302\365\275\327\243 A{\024\356?\037\205\027A\205\353\321\276\303\365\370\300q=^\301\256G1\301\000 \016D33?\301\024\256\033\301\270\036A\301\341z\364\277\244p!\301R\270\036\300\217\302E\301\n\327\235\301R\270\316\301fF\rD\232\231Y\300\232\231u\301{\024R\301\037\205w\301\205\353\251\300\n\327W\301\366(\274\300\366(|\301=\n\271\301\303E\014D\354Q\200\300\270\036\355\300H\341\232\301\270\036\211\301\n\327\233\301\270\036\025\301\000\000\214\301q=\036\301\366(\236\3013\303\013D\\\217\002\300\232\231\301\30033\027\30133\253\301\244p\231\301\366(\254\301\217\3025\301\354Q\234\301H\341>\301\244 \rDR\270\256@H\341Z@=\n\027\277)\\\177\300=\n\177\301\037\205[\301\341z\200\301\315\314\274\300\256Ga\301f\266\016DH\341\312@\315\314<A\366(\034A\000\000\270@ff\026@\232\231\031\301\366(\354\300\037\205\033\301\256G\341>\354a\021DH\341*A\366(\210A\n\327\263A\037\205\243A\244p\203A\341zPAq=\212?33S@\217\302u?\244`\020D\327\243\200\300\270\036\325@\000\000PA\024\256\223A)\\\203A\\\217FA\366(\020A\366(<\300\354Q8\277qM\rD\315\314D\301\\\217\202\301\341z\264\300333?\270\036\305@\n\327\203@\256G\341=\\\217R\300\n\327s\301\270\336\016D\327\243\310@\303\365\300\300\315\314 \301\256G!?=\n\337@H\341FAq=&A\366(\314@R\270>@\315,\014D\341z,\301\354Q\220\300\341z\206\301\327\243\246\301ff\"\301\n\327s\30033\323?\024\256\307\276\315\314\214\300\205+\rDR\270~@\232\231\331\300\024\256\007\277\256GM\301\315\314\206\301\244p\305\300{\024.>\366(\264@\217\302e@3S\016D\n\327\223@\232\231\tA\037\205\013\300H\341\202@)\\\003\301\024\256C\301ff\306\277\256G\231@\000\000$A\327\023\rD\024\256\237\300\244p\275\276=\ng@\244p\345\300fff\27733S\301\217\302\211\301\256G\321\300\315\314L\276{\004\021D\366(|A\354Q,Aq=vA\303\365\232A\244p\tA\217\302mA\n\327#@H\341\272\277\037\205\023A\024\036\021D\315\314\314>\256G\201AR\2702A\327\243|A\366(\236A\n\327\017A\366(tA\244p=@\024\256\207\277\037\365\022D\037\205\353@\354Q\370@\366(\274Aq=\224A33\271A=\n\331A\315\314\202A\303\365\264A\270\036%A\341\372\024D\244p\001A33wA\232\231}AH\341\374A\303\365\324A\205\353\371AH\341\014B\037\205\303A\024\256\365A\270~\022D=\n\037\301\315\314\354\277\354Q\260@\270\036\275@)\\\255A\244p\205Aff\252Aq=\312A\000\000hA\244\200\022D\217\302\365<\\\217\036\301\303\365\350\277\256G\261@{\024\276@\232\231\255A\024\256\205A\327\243\252A\341z\312A\315l\021D\205\353\211\300\303\365\210\300\037\205c\301\366(\304\300\244p\235?\327\243\320?\270\036\213AffFA\366(\210A)\314\016D\366((\301\270\036m\301\327\243l\301\n\327\305\301\270\036\205\301\341z\024\301{\024\016\301\366(\334@\205\353\361?\270\236\016D\217\3025\277\037\2053\301\341zx\301\000\000x\301\037\205\313\301\315\314\212\301\n\327\037\301\244p\031\301\244p\305@H!\020D\256G\301@\\\217\252@\217\302\245\300\n\327\027\301)\\\027\30133\233\301\303\3654\301\315\314|\30033c\300\341\272\017D\315\314\314\277{\024\216@R\270n@\303\365\330\300\244p1\301\303\3650\301\000\000\250\301\\\217N\301\232\231\261\300\270.\020D\024\256\347?=\nW>\000\000\310@\256G\261@=\n\237\300\341z\024\301\000\000\024\301\037\205\231\301\232\2311\301\2440\021D\303\365\200@H\341\272@\024\256\207@\341z$A\270\036\031A\327\243p\277\000\000\250\300=\n\247\300\\\217r\301\327C\024D\315\314DA\327\243\202A\270\036\221A\354Q\204A\327\243\264A\303\365\256A\217\3025A\232\231\341@\\\217\342@{\264\030D{\024\216A\341z\360A)\\\010B\232\231\017B33\tB)\\!B\037\205\036B\303\365\350A\341z\306A\244\340\031D{\024\226@\232\231\263A\000\000\013B\270\036\033B)\\\"B\303\365\033B\270\0364B\256G1Bq=\007B{\344\027D{\024\376\300\000\000P\300\366(hA\341z\326AR\270\366A\232\231\002Bff\370A)\\\024B\037\205\021B\\\377\027D=\n\327>\327\243\360\300\270\0365\300H\341nA\n\327\331A{\024\372A\256G\004B\217\302\373A=\n\026B\nW\031D\n\327\253@\256G\271@\232\231\t\300\\\217\"@ff\242Aff\002B\037\205\022B\217\302\031B)\\\023Bq\275\036D\315\314\254A\217\302\327A\270\036\333A\232\231\233A\270\036\301A\232\231\'B\315\314XB\205\353hB\366(pB3\023\036Dq=*\300\037\205\227A\341z\302A\n\327\305A\354Q\206A\n\327\253A\303\365\034B\366(NB\256G^B\024>\036D\037\205+?R\270\376\277H\341\234A\n\327\307A33\313A\024\256\213A33\261A\327\243\037B\n\327PB\205+\036D\341z\224\276\\\217\302>\205\353\021\300\\\217\232A\037\205\305AH\341\310A)\\\211AH\341\256A\341z\036B\0000\035D\037\205{\300=\n\207\30033c\300R\270\306\300q=vA{\024\246A\244p\251A\n\327SA\244p\217A\037U D\256GIAff\nA\217\302\005A\341z\020A\n\327\313@\217\302\337A)\\\005B=\n\007B\\\217\316A{\264 DR\270\276?\270\036aAq=\"A\232\231\035A\354Q(A\037\205\373@\024\256\353A\354Q\013B\000\000\rB\217\" D\205\353\021\300q=J\277\327\243<A\037\205\373@q=\362@\n\327\003A\\\217\262@\244p\331A33\002B\270\216 D\354Q\330?=\n\027\277fff?\024\256WA\315\314\030A\366(\024AH\341\036A\327\243\350@\303\365\346Af\226 D\217\302\365=\024\256\347?\327\243\360\276\\\217\202?\232\231YAR\270\032A{\024\026A\315\314 A\341z\354@\000\200 D33\263\276\037\205k\276H\341\272?\205\353Q\277\037\205+?\000\000TA\270\036\025A\341z\020A33\033A\244\000%D{\024\220A\256G\215Aq=\216A\217\302\233A\037\205\211A\244p\225A{\024\372A\327\243\332A\354Q\330A=*\'Dff\nA\256G\325A\341z\322A\244p\323A\303\365\340AR\270\316A\327\243\332A\327\243\037B\205\353\017B\217\342&D)\\\217\277\303\365\360@\354Q\314A\037\205\311A\341z\312A\000\000\330A\217\302\305A\024\256\321A\366(\033B"
      }
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "MatMul/a"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add"
  op: "Add"
  input: "MatMul"
  input: "Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_1"
  op: "MatMul"
  input: "Relu"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_1"
  op: "Add"
  input: "MatMul_1"
  input: "Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_2"
  op: "MatMul"
  input: "Relu_1"
  input: "Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_2"
  op: "Add"
  input: "MatMul_2"
  input: "Variable_5/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Relu_2"
  op: "Relu"
  input: "add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "MatMul_3"
  op: "MatMul"
  input: "Relu_2"
  input: "Variable_6/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_3"
  op: "Add"
  input: "MatMul_3"
  input: "Variable_7/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_DOUBLE
        tensor_shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
        tensor_content
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Cast"
  op: "Cast"
  input: "softmax_cross_entropy_loss/Cast/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_DOUBLE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/labels_stop_gradient"
  op: "StopGradient"
  input: "softmax_cross_entropy_loss/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_1"
  input: "softmax_cross_entropy_loss/xentropy/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_1"
  input: "softmax_cross_entropy_loss/xentropy/Slice/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice"
  input: "softmax_cross_entropy_loss/xentropy/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape"
  op: "Reshape"
  input: "add_3"
  input: "softmax_cross_entropy_loss/xentropy/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_1"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank_2"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_1"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape_2"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/concat_1"
  op: "ConcatV2"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/values_0"
  input: "softmax_cross_entropy_loss/xentropy/Slice_1"
  input: "softmax_cross_entropy_loss/xentropy/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy/labels_stop_gradient"
  input: "softmax_cross_entropy_loss/xentropy/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy"
  op: "SoftmaxCrossEntropyWithLogits"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Sub_2"
  op: "Sub"
  input: "softmax_cross_entropy_loss/xentropy/Rank"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  op: "Pack"
  input: "softmax_cross_entropy_loss/xentropy/Sub_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Slice_2"
  op: "Slice"
  input: "softmax_cross_entropy_loss/xentropy/Shape"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/begin"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  op: "Reshape"
  input: "softmax_cross_entropy_loss/xentropy"
  input: "softmax_cross_entropy_loss/xentropy/Slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3000
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "softmax_cross_entropy_loss/ToFloat_1/x"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Mul"
  input: "softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  input: "softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/zeros_like/shape_as_tensor"
  input: "softmax_cross_entropy_loss/num_present/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/num_present/Equal"
  input: "softmax_cross_entropy_loss/num_present/zeros_like"
  input: "softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3000
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3000
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "softmax_cross_entropy_loss/num_present/Select"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "softmax_cross_entropy_loss/Sum"
  input: "softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Greater"
  op: "Greater"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal/y"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Equal"
  op: "Equal"
  input: "softmax_cross_entropy_loss/num_present"
  input: "softmax_cross_entropy_loss/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Shape"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/ones_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/ones_like/Shape"
  input: "softmax_cross_entropy_loss/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Equal"
  input: "softmax_cross_entropy_loss/ones_like"
  input: "softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/div"
  op: "RealDiv"
  input: "softmax_cross_entropy_loss/Sum_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like/shape_as_tensor"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like/Const"
  op: "Const"
  input: "^softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/zeros_like"
  op: "Fill"
  input: "softmax_cross_entropy_loss/zeros_like/shape_as_tensor"
  input: "softmax_cross_entropy_loss/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_cross_entropy_loss/value"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "softmax_cross_entropy_loss/div"
  input: "softmax_cross_entropy_loss/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "OptimizeLoss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "OptimizeLoss"
      }
    }
  }
}
node {
  name: "OptimizeLoss"
  op: "ScalarSummary"
  input: "OptimizeLoss/tags"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/shape_as_tensor"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  op: "Fill"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/shape_as_tensor"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/Fill"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  op: "Select"
  input: "softmax_cross_entropy_loss/Greater"
  input: "gradients/softmax_cross_entropy_loss/value_grad/zeros_like"
  input: "gradients/Fill"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/Select_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/value_grad/Select_1"
  input: "^gradients/softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/value_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  op: "Neg"
  input: "softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Neg"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_1"
  input: "softmax_cross_entropy_loss/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/div_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/div_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile/multiples"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3000
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile/multiples"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3000
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "softmax_cross_entropy_loss/ToFloat_1/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/mul"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/mul_1"
  op: "Mul"
  input: "softmax_cross_entropy_loss/xentropy/Reshape_2"
  input: "gradients/softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/mul_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3000
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
        }
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims"
  input: "softmax_cross_entropy_loss/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  op: "LogSoftmax"
  input: "softmax_cross_entropy_loss/xentropy/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  op: "Neg"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/LogSoftmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  op: "ExpandDims"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_2_grad/Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  op: "Mul"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/ExpandDims_1"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
  input: "^gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/softmax_cross_entropy_loss/xentropy_grad/mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  op: "Reshape"
  input: "gradients/softmax_cross_entropy_loss/xentropy_grad/tuple/control_dependency"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_3_grad/Shape"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "gradients/add_3_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum"
  input: "gradients/add_3_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/Sum_1"
  op: "Sum"
  input: "gradients/softmax_cross_entropy_loss/xentropy/Reshape_grad/Reshape"
  input: "gradients/add_3_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_3_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_3_grad/Sum_1"
  input: "gradients/add_3_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_3_grad/Reshape"
  input: "^gradients/add_3_grad/Reshape_1"
}
node {
  name: "gradients/add_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_3_grad/Reshape"
  input: "^gradients/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_3_grad/Reshape_1"
  input: "^gradients/add_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_3_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_3_grad/tuple/control_dependency"
  input: "Variable_6/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/MatMul_1"
  op: "MatMul"
  input: "Relu_2"
  input: "gradients/add_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_3_grad/MatMul"
  input: "^gradients/MatMul_3_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_3_grad/MatMul"
  input: "^gradients/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_3_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_3_grad/MatMul_1"
  input: "^gradients/MatMul_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_3_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MatMul_3_grad/tuple/control_dependency"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_2_grad/Shape"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "gradients/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum"
  input: "gradients/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_2_grad/ReluGrad"
  input: "gradients/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum_1"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/Reshape_1"
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape_1"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_2_grad/tuple/control_dependency"
  input: "Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/MatMul_1"
  op: "MatMul"
  input: "Relu_1"
  input: "gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_2_grad/MatMul"
  input: "^gradients/MatMul_2_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_2_grad/MatMul"
  input: "^gradients/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_2_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_2_grad/MatMul_1"
  input: "^gradients/MatMul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_2_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MatMul_2_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_1_grad/Shape"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "gradients/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum"
  input: "gradients/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "gradients/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum_1"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/Reshape_1"
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape_1"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_1_grad/tuple/control_dependency"
  input: "Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "Relu"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_1_grad/MatMul"
  input: "^gradients/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_1_grad/MatMul"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_1_grad/MatMul_1"
  input: "^gradients/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_1_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/MatMul_1_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\270\013\000\000\372\000\000\000"
      }
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_grad/Reshape"
  input: "^gradients/add_grad/Reshape_1"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/Reshape"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/Reshape_1"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_grad/tuple/control_dependency"
  input: "Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "MatMul/a"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_grad/MatMul"
  input: "^gradients/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_grad/MatMul"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3000
          }
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_grad/MatMul_1"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\372\000\000\000"
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 250
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam/Assign"
  op: "Assign"
  input: "Variable/Adam"
  input: "Variable/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam/read"
  op: "Identity"
  input: "Variable/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\n\000\000\000\372\000\000\000"
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 10
        }
        dim {
          size: 250
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable/Adam_1/Assign"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "Variable/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable/Adam_1/read"
  op: "Identity"
  input: "Variable/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_1/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_1/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 250
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam/Assign"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam/read"
  op: "Identity"
  input: "Variable_1/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 250
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_1/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_1/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_1/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_1/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 250
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_1/Adam_1/Assign"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "Variable_1/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_1/Adam_1/read"
  op: "Identity"
  input: "Variable_1/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
}
node {
  name: "Variable_2/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\372\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_2/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_2/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_2/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_2/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_2/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 250
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Adam/Assign"
  op: "Assign"
  input: "Variable_2/Adam"
  input: "Variable_2/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/Adam/read"
  op: "Identity"
  input: "Variable_2/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Variable_2/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\372\000\000\000d\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_2/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_2/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_2/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_2/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_2/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 250
        }
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_2/Adam_1/Assign"
  op: "Assign"
  input: "Variable_2/Adam_1"
  input: "Variable_2/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_2/Adam_1/read"
  op: "Identity"
  input: "Variable_2/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Variable_3/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Variable_3/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_3/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_3/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_3/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Adam/Assign"
  op: "Assign"
  input: "Variable_3/Adam"
  input: "Variable_3/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/Adam/read"
  op: "Identity"
  input: "Variable_3/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Variable_3/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 100
      }
    }
  }
}
node {
  name: "Variable_3/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_3/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_3/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_3/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_3/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_3/Adam_1/Assign"
  op: "Assign"
  input: "Variable_3/Adam_1"
  input: "Variable_3/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_3/Adam_1/read"
  op: "Identity"
  input: "Variable_3/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
}
node {
  name: "Variable_4/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_4/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_4/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_4/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_4/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_4/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/Adam/Assign"
  op: "Assign"
  input: "Variable_4/Adam"
  input: "Variable_4/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/Adam/read"
  op: "Identity"
  input: "Variable_4/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Variable_4/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "d\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_4/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_4/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_4/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_4/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_4/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_4/Adam_1/Assign"
  op: "Assign"
  input: "Variable_4/Adam_1"
  input: "Variable_4/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_4/Adam_1/read"
  op: "Identity"
  input: "Variable_4/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Variable_5/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "Variable_5/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_5/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_5/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_5/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_5/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_5/Adam/Assign"
  op: "Assign"
  input: "Variable_5/Adam"
  input: "Variable_5/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_5/Adam/read"
  op: "Identity"
  input: "Variable_5/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Variable_5/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "Variable_5/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_5/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_5/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_5/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_5/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_5/Adam_1/Assign"
  op: "Assign"
  input: "Variable_5/Adam_1"
  input: "Variable_5/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_5/Adam_1/read"
  op: "Identity"
  input: "Variable_5/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
}
node {
  name: "Variable_6/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_6/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_6/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_6/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_6/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_6/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_6/Adam/Assign"
  op: "Assign"
  input: "Variable_6/Adam"
  input: "Variable_6/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_6/Adam/read"
  op: "Identity"
  input: "Variable_6/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Variable_6/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "2\000\000\000\002\000\000\000"
      }
    }
  }
}
node {
  name: "Variable_6/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_6/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_6/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_6/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_6/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 50
        }
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_6/Adam_1/Assign"
  op: "Assign"
  input: "Variable_6/Adam_1"
  input: "Variable_6/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_6/Adam_1/read"
  op: "Identity"
  input: "Variable_6/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Variable_7/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Variable_7/Adam/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_7/Adam/Initializer/zeros"
  op: "Fill"
  input: "Variable_7/Adam/Initializer/zeros/shape_as_tensor"
  input: "Variable_7/Adam/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_7/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_7/Adam/Assign"
  op: "Assign"
  input: "Variable_7/Adam"
  input: "Variable_7/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_7/Adam/read"
  op: "Identity"
  input: "Variable_7/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Variable_7/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "Variable_7/Adam_1/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Variable_7/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "Variable_7/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "Variable_7/Adam_1/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Variable_7/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 2
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Variable_7/Adam_1/Assign"
  op: "Assign"
  input: "Variable_7/Adam_1"
  input: "Variable_7/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Variable_7/Adam_1/read"
  op: "Identity"
  input: "Variable_7/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "Adam/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0010000000475
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.899999976158
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.999000012875
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "Adam/update_Variable/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Variable_1/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Variable_2/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_2"
  input: "Variable_2/Adam"
  input: "Variable_2/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Variable_3/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_3"
  input: "Variable_3/Adam"
  input: "Variable_3/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Variable_4/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_4"
  input: "Variable_4/Adam"
  input: "Variable_4/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/MatMul_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Variable_5/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_5"
  input: "Variable_5/Adam"
  input: "Variable_5/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Variable_6/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_6"
  input: "Variable_6/Adam"
  input: "Variable_6/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/MatMul_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_Variable_7/ApplyAdam"
  op: "ApplyAdam"
  input: "Variable_7"
  input: "Variable_7/Adam"
  input: "Variable_7/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "Adam/learning_rate"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "gradients/add_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_Variable/ApplyAdam"
  input: "^Adam/update_Variable_1/ApplyAdam"
  input: "^Adam/update_Variable_2/ApplyAdam"
  input: "^Adam/update_Variable_3/ApplyAdam"
  input: "^Adam/update_Variable_4/ApplyAdam"
  input: "^Adam/update_Variable_5/ApplyAdam"
  input: "^Adam/update_Variable_6/ApplyAdam"
  input: "^Adam/update_Variable_7/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_Variable/ApplyAdam"
  input: "^Adam/update_Variable_1/ApplyAdam"
  input: "^Adam/update_Variable_2/ApplyAdam"
  input: "^Adam/update_Variable_3/ApplyAdam"
  input: "^Adam/update_Variable_4/ApplyAdam"
  input: "^Adam/update_Variable_5/ApplyAdam"
  input: "^Adam/update_Variable_6/ApplyAdam"
  input: "^Adam/update_Variable_7/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/update_Variable/ApplyAdam"
  input: "^Adam/update_Variable_1/ApplyAdam"
  input: "^Adam/update_Variable_2/ApplyAdam"
  input: "^Adam/update_Variable_3/ApplyAdam"
  input: "^Adam/update_Variable_4/ApplyAdam"
  input: "^Adam/update_Variable_5/ApplyAdam"
  input: "^Adam/update_Variable_6/ApplyAdam"
  input: "^Adam/update_Variable_7/ApplyAdam"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "loss"
      }
    }
  }
}
node {
  name: "loss"
  op: "ScalarSummary"
  input: "loss/tags"
  input: "softmax_cross_entropy_loss/value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^Variable/Assign"
  input: "^Variable_1/Assign"
  input: "^Variable_2/Assign"
  input: "^Variable_3/Assign"
  input: "^Variable_4/Assign"
  input: "^Variable_5/Assign"
  input: "^Variable_6/Assign"
  input: "^Variable_7/Assign"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^Variable/Adam/Assign"
  input: "^Variable/Adam_1/Assign"
  input: "^Variable_1/Adam/Assign"
  input: "^Variable_1/Adam_1/Assign"
  input: "^Variable_2/Adam/Assign"
  input: "^Variable_2/Adam_1/Assign"
  input: "^Variable_3/Adam/Assign"
  input: "^Variable_3/Adam_1/Assign"
  input: "^Variable_4/Adam/Assign"
  input: "^Variable_4/Adam_1/Assign"
  input: "^Variable_5/Adam/Assign"
  input: "^Variable_5/Adam_1/Assign"
  input: "^Variable_6/Adam/Assign"
  input: "^Variable_6/Adam_1/Assign"
  input: "^Variable_7/Adam/Assign"
  input: "^Variable_7/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Variable_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Variable_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Variable_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Variable_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Variable_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Variable_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Variable_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Variable/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Variable/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Variable_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Variable_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Variable_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Variable_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Variable_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "Variable_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "Variable_4/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "Variable_4/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "Variable_5/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "Variable_5/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "Variable_6/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "Variable_6/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "Variable_7/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "Variable_7/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: "global_step"
        string_val: "Variable"
        string_val: "Variable_1"
        string_val: "Variable_2"
        string_val: "Variable_3"
        string_val: "Variable_4"
        string_val: "Variable_5"
        string_val: "Variable_6"
        string_val: "Variable_7"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "Variable_2/Adam"
        string_val: "Variable_2/Adam_1"
        string_val: "Variable_3/Adam"
        string_val: "Variable_3/Adam_1"
        string_val: "Variable_4/Adam"
        string_val: "Variable_4/Adam_1"
        string_val: "Variable_5/Adam"
        string_val: "Variable_5/Adam_1"
        string_val: "Variable_6/Adam"
        string_val: "Variable_6/Adam_1"
        string_val: "Variable_7/Adam"
        string_val: "Variable_7/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 27
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 27
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 27
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Variable_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Variable_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Variable_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Variable_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Variable_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Variable_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Variable_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Variable/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Variable/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Variable_1/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Variable_1/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Variable_2/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Variable_2/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Variable_3/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "Variable_3/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "Variable_4/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "Variable_4/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "Variable_5/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "Variable_5/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "Variable_6/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "Variable_6/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "Variable_7/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "Variable_7/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: "global_step"
        string_val: "Variable"
        string_val: "Variable_1"
        string_val: "Variable_2"
        string_val: "Variable_3"
        string_val: "Variable_4"
        string_val: "Variable_5"
        string_val: "Variable_6"
        string_val: "Variable_7"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "Variable_2/Adam"
        string_val: "Variable_2/Adam_1"
        string_val: "Variable_3/Adam"
        string_val: "Variable_3/Adam_1"
        string_val: "Variable_4/Adam"
        string_val: "Variable_4/Adam_1"
        string_val: "Variable_5/Adam"
        string_val: "Variable_5/Adam_1"
        string_val: "Variable_6/Adam"
        string_val: "Variable_6/Adam_1"
        string_val: "Variable_7/Adam"
        string_val: "Variable_7/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 27
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 27
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 27
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "init_3"
  op: "NoOp"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
  input: "^init_3"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "OptimizeLoss"
  input: "loss"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_2d7c083835bf468580b69776e72a3ace/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "Variable_2"
        string_val: "Variable_2/Adam"
        string_val: "Variable_2/Adam_1"
        string_val: "Variable_3"
        string_val: "Variable_3/Adam"
        string_val: "Variable_3/Adam_1"
        string_val: "Variable_4"
        string_val: "Variable_4/Adam"
        string_val: "Variable_4/Adam_1"
        string_val: "Variable_5"
        string_val: "Variable_5/Adam"
        string_val: "Variable_5/Adam_1"
        string_val: "Variable_6"
        string_val: "Variable_6/Adam"
        string_val: "Variable_6/Adam_1"
        string_val: "Variable_7"
        string_val: "Variable_7/Adam"
        string_val: "Variable_7/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "Variable"
  input: "Variable/Adam"
  input: "Variable/Adam_1"
  input: "Variable_1"
  input: "Variable_1/Adam"
  input: "Variable_1/Adam_1"
  input: "Variable_2"
  input: "Variable_2/Adam"
  input: "Variable_2/Adam_1"
  input: "Variable_3"
  input: "Variable_3/Adam"
  input: "Variable_3/Adam_1"
  input: "Variable_4"
  input: "Variable_4/Adam"
  input: "Variable_4/Adam_1"
  input: "Variable_5"
  input: "Variable_5/Adam"
  input: "Variable_5/Adam_1"
  input: "Variable_6"
  input: "Variable_6/Adam"
  input: "Variable_6/Adam_1"
  input: "Variable_7"
  input: "Variable_7/Adam"
  input: "Variable_7/Adam_1"
  input: "beta1_power"
  input: "beta2_power"
  input: "global_step"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  device: "/device:CPU:0"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: "Variable"
        string_val: "Variable/Adam"
        string_val: "Variable/Adam_1"
        string_val: "Variable_1"
        string_val: "Variable_1/Adam"
        string_val: "Variable_1/Adam_1"
        string_val: "Variable_2"
        string_val: "Variable_2/Adam"
        string_val: "Variable_2/Adam_1"
        string_val: "Variable_3"
        string_val: "Variable_3/Adam"
        string_val: "Variable_3/Adam_1"
        string_val: "Variable_4"
        string_val: "Variable_4/Adam"
        string_val: "Variable_4/Adam_1"
        string_val: "Variable_5"
        string_val: "Variable_5/Adam"
        string_val: "Variable_5/Adam_1"
        string_val: "Variable_6"
        string_val: "Variable_6/Adam"
        string_val: "Variable_6/Adam_1"
        string_val: "Variable_7"
        string_val: "Variable_7/Adam"
        string_val: "Variable_7/Adam_1"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 27
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "Variable"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "Variable/Adam"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "Variable/Adam_1"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "Variable_1"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "Variable_1/Adam"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "Variable_1/Adam_1"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "Variable_2"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "Variable_2/Adam"
  input: "save/RestoreV2:7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "Variable_2/Adam_1"
  input: "save/RestoreV2:8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 250
          }
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "Variable_3"
  input: "save/RestoreV2:9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "Variable_3/Adam"
  input: "save/RestoreV2:10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "Variable_3/Adam_1"
  input: "save/RestoreV2:11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "Variable_4"
  input: "save/RestoreV2:12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "Variable_4/Adam"
  input: "save/RestoreV2:13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "Variable_4/Adam_1"
  input: "save/RestoreV2:14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 100
          }
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "Variable_5"
  input: "save/RestoreV2:15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "Variable_5/Adam"
  input: "save/RestoreV2:16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "Variable_5/Adam_1"
  input: "save/RestoreV2:17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "Variable_6"
  input: "save/RestoreV2:18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "Variable_6/Adam"
  input: "save/RestoreV2:19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "Variable_6/Adam_1"
  input: "save/RestoreV2:20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 50
          }
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "Variable_7"
  input: "save/RestoreV2:21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "Variable_7/Adam"
  input: "save/RestoreV2:22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "Variable_7/Adam_1"
  input: "save/RestoreV2:23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2:24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:26"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
versions {
  producer: 26
}
